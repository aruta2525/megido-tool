/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/ts/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/bootstrap-select/dist/js/bootstrap-select.js":
/*!*******************************************************************!*\
  !*** ./node_modules/bootstrap-select/dist/js/bootstrap-select.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * Bootstrap-select v1.13.18 (https://developer.snapappointments.com/bootstrap-select)
 *
 * Copyright 2012-2020 SnapAppointments, LLC
 * Licensed under MIT (https://github.com/snapappointments/bootstrap-select/blob/master/LICENSE)
 */

(function (root, factory) {
  if (root === undefined && window !== undefined) root = window;
  if (true) {
    // AMD. Register as an anonymous module unless amdModuleId is set
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (a0) {
      return (factory(a0));
    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
}(this, function (jQuery) {

(function ($) {
  'use strict';

  var DISALLOWED_ATTRIBUTES = ['sanitize', 'whiteList', 'sanitizeFn'];

  var uriAttrs = [
    'background',
    'cite',
    'href',
    'itemtype',
    'longdesc',
    'poster',
    'src',
    'xlink:href'
  ];

  var ARIA_ATTRIBUTE_PATTERN = /^aria-[\w-]*$/i;

  var DefaultWhitelist = {
    // Global attributes allowed on any supplied element below.
    '*': ['class', 'dir', 'id', 'lang', 'role', 'tabindex', 'style', ARIA_ATTRIBUTE_PATTERN],
    a: ['target', 'href', 'title', 'rel'],
    area: [],
    b: [],
    br: [],
    col: [],
    code: [],
    div: [],
    em: [],
    hr: [],
    h1: [],
    h2: [],
    h3: [],
    h4: [],
    h5: [],
    h6: [],
    i: [],
    img: ['src', 'alt', 'title', 'width', 'height'],
    li: [],
    ol: [],
    p: [],
    pre: [],
    s: [],
    small: [],
    span: [],
    sub: [],
    sup: [],
    strong: [],
    u: [],
    ul: []
  }

  /**
   * A pattern that recognizes a commonly useful subset of URLs that are safe.
   *
   * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts
   */
  var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;

  /**
   * A pattern that matches safe data URLs. Only matches image, video and audio types.
   *
   * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts
   */
  var DATA_URL_PATTERN = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i;

  function allowedAttribute (attr, allowedAttributeList) {
    var attrName = attr.nodeName.toLowerCase()

    if ($.inArray(attrName, allowedAttributeList) !== -1) {
      if ($.inArray(attrName, uriAttrs) !== -1) {
        return Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN))
      }

      return true
    }

    var regExp = $(allowedAttributeList).filter(function (index, value) {
      return value instanceof RegExp
    })

    // Check if a regular expression validates the attribute.
    for (var i = 0, l = regExp.length; i < l; i++) {
      if (attrName.match(regExp[i])) {
        return true
      }
    }

    return false
  }

  function sanitizeHtml (unsafeElements, whiteList, sanitizeFn) {
    if (sanitizeFn && typeof sanitizeFn === 'function') {
      return sanitizeFn(unsafeElements);
    }

    var whitelistKeys = Object.keys(whiteList);

    for (var i = 0, len = unsafeElements.length; i < len; i++) {
      var elements = unsafeElements[i].querySelectorAll('*');

      for (var j = 0, len2 = elements.length; j < len2; j++) {
        var el = elements[j];
        var elName = el.nodeName.toLowerCase();

        if (whitelistKeys.indexOf(elName) === -1) {
          el.parentNode.removeChild(el);

          continue;
        }

        var attributeList = [].slice.call(el.attributes);
        var whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || []);

        for (var k = 0, len3 = attributeList.length; k < len3; k++) {
          var attr = attributeList[k];

          if (!allowedAttribute(attr, whitelistedAttributes)) {
            el.removeAttribute(attr.nodeName);
          }
        }
      }
    }
  }

  // Polyfill for browsers with no classList support
  // Remove in v2
  if (!('classList' in document.createElement('_'))) {
    (function (view) {
      if (!('Element' in view)) return;

      var classListProp = 'classList',
          protoProp = 'prototype',
          elemCtrProto = view.Element[protoProp],
          objCtr = Object,
          classListGetter = function () {
            var $elem = $(this);

            return {
              add: function (classes) {
                classes = Array.prototype.slice.call(arguments).join(' ');
                return $elem.addClass(classes);
              },
              remove: function (classes) {
                classes = Array.prototype.slice.call(arguments).join(' ');
                return $elem.removeClass(classes);
              },
              toggle: function (classes, force) {
                return $elem.toggleClass(classes, force);
              },
              contains: function (classes) {
                return $elem.hasClass(classes);
              }
            }
          };

      if (objCtr.defineProperty) {
        var classListPropDesc = {
          get: classListGetter,
          enumerable: true,
          configurable: true
        };
        try {
          objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);
        } catch (ex) { // IE 8 doesn't support enumerable:true
          // adding undefined to fight this issue https://github.com/eligrey/classList.js/issues/36
          // modernie IE8-MSW7 machine has IE8 8.0.6001.18702 and is affected
          if (ex.number === undefined || ex.number === -0x7FF5EC54) {
            classListPropDesc.enumerable = false;
            objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);
          }
        }
      } else if (objCtr[protoProp].__defineGetter__) {
        elemCtrProto.__defineGetter__(classListProp, classListGetter);
      }
    }(window));
  }

  var testElement = document.createElement('_');

  testElement.classList.add('c1', 'c2');

  if (!testElement.classList.contains('c2')) {
    var _add = DOMTokenList.prototype.add,
        _remove = DOMTokenList.prototype.remove;

    DOMTokenList.prototype.add = function () {
      Array.prototype.forEach.call(arguments, _add.bind(this));
    }

    DOMTokenList.prototype.remove = function () {
      Array.prototype.forEach.call(arguments, _remove.bind(this));
    }
  }

  testElement.classList.toggle('c3', false);

  // Polyfill for IE 10 and Firefox <24, where classList.toggle does not
  // support the second argument.
  if (testElement.classList.contains('c3')) {
    var _toggle = DOMTokenList.prototype.toggle;

    DOMTokenList.prototype.toggle = function (token, force) {
      if (1 in arguments && !this.contains(token) === !force) {
        return force;
      } else {
        return _toggle.call(this, token);
      }
    };
  }

  testElement = null;

  // shallow array comparison
  function isEqual (array1, array2) {
    return array1.length === array2.length && array1.every(function (element, index) {
      return element === array2[index];
    });
  };

  // <editor-fold desc="Shims">
  if (!String.prototype.startsWith) {
    (function () {
      'use strict'; // needed to support `apply`/`call` with `undefined`/`null`
      var defineProperty = (function () {
        // IE 8 only supports `Object.defineProperty` on DOM elements
        try {
          var object = {};
          var $defineProperty = Object.defineProperty;
          var result = $defineProperty(object, object, object) && $defineProperty;
        } catch (error) {
        }
        return result;
      }());
      var toString = {}.toString;
      var startsWith = function (search) {
        if (this == null) {
          throw new TypeError();
        }
        var string = String(this);
        if (search && toString.call(search) == '[object RegExp]') {
          throw new TypeError();
        }
        var stringLength = string.length;
        var searchString = String(search);
        var searchLength = searchString.length;
        var position = arguments.length > 1 ? arguments[1] : undefined;
        // `ToInteger`
        var pos = position ? Number(position) : 0;
        if (pos != pos) { // better `isNaN`
          pos = 0;
        }
        var start = Math.min(Math.max(pos, 0), stringLength);
        // Avoid the `indexOf` call if no match is possible
        if (searchLength + start > stringLength) {
          return false;
        }
        var index = -1;
        while (++index < searchLength) {
          if (string.charCodeAt(start + index) != searchString.charCodeAt(index)) {
            return false;
          }
        }
        return true;
      };
      if (defineProperty) {
        defineProperty(String.prototype, 'startsWith', {
          'value': startsWith,
          'configurable': true,
          'writable': true
        });
      } else {
        String.prototype.startsWith = startsWith;
      }
    }());
  }

  if (!Object.keys) {
    Object.keys = function (
      o, // object
      k, // key
      r  // result array
    ) {
      // initialize object and result
      r = [];
      // iterate over object keys
      for (k in o) {
        // fill result array with non-prototypical keys
        r.hasOwnProperty.call(o, k) && r.push(k);
      }
      // return result
      return r;
    };
  }

  if (HTMLSelectElement && !HTMLSelectElement.prototype.hasOwnProperty('selectedOptions')) {
    Object.defineProperty(HTMLSelectElement.prototype, 'selectedOptions', {
      get: function () {
        return this.querySelectorAll(':checked');
      }
    });
  }

  function getSelectedOptions (select, ignoreDisabled) {
    var selectedOptions = select.selectedOptions,
        options = [],
        opt;

    if (ignoreDisabled) {
      for (var i = 0, len = selectedOptions.length; i < len; i++) {
        opt = selectedOptions[i];

        if (!(opt.disabled || opt.parentNode.tagName === 'OPTGROUP' && opt.parentNode.disabled)) {
          options.push(opt);
        }
      }

      return options;
    }

    return selectedOptions;
  }

  // much faster than $.val()
  function getSelectValues (select, selectedOptions) {
    var value = [],
        options = selectedOptions || select.selectedOptions,
        opt;

    for (var i = 0, len = options.length; i < len; i++) {
      opt = options[i];

      if (!(opt.disabled || opt.parentNode.tagName === 'OPTGROUP' && opt.parentNode.disabled)) {
        value.push(opt.value);
      }
    }

    if (!select.multiple) {
      return !value.length ? null : value[0];
    }

    return value;
  }

  // set data-selected on select element if the value has been programmatically selected
  // prior to initialization of bootstrap-select
  // * consider removing or replacing an alternative method *
  var valHooks = {
    useDefault: false,
    _set: $.valHooks.select.set
  };

  $.valHooks.select.set = function (elem, value) {
    if (value && !valHooks.useDefault) $(elem).data('selected', true);

    return valHooks._set.apply(this, arguments);
  };

  var changedArguments = null;

  var EventIsSupported = (function () {
    try {
      new Event('change');
      return true;
    } catch (e) {
      return false;
    }
  })();

  $.fn.triggerNative = function (eventName) {
    var el = this[0],
        event;

    if (el.dispatchEvent) { // for modern browsers & IE9+
      if (EventIsSupported) {
        // For modern browsers
        event = new Event(eventName, {
          bubbles: true
        });
      } else {
        // For IE since it doesn't support Event constructor
        event = document.createEvent('Event');
        event.initEvent(eventName, true, false);
      }

      el.dispatchEvent(event);
    } else if (el.fireEvent) { // for IE8
      event = document.createEventObject();
      event.eventType = eventName;
      el.fireEvent('on' + eventName, event);
    } else {
      // fall back to jQuery.trigger
      this.trigger(eventName);
    }
  };
  // </editor-fold>

  function stringSearch (li, searchString, method, normalize) {
    var stringTypes = [
          'display',
          'subtext',
          'tokens'
        ],
        searchSuccess = false;

    for (var i = 0; i < stringTypes.length; i++) {
      var stringType = stringTypes[i],
          string = li[stringType];

      if (string) {
        string = string.toString();

        // Strip HTML tags. This isn't perfect, but it's much faster than any other method
        if (stringType === 'display') {
          string = string.replace(/<[^>]+>/g, '');
        }

        if (normalize) string = normalizeToBase(string);
        string = string.toUpperCase();

        if (method === 'contains') {
          searchSuccess = string.indexOf(searchString) >= 0;
        } else {
          searchSuccess = string.startsWith(searchString);
        }

        if (searchSuccess) break;
      }
    }

    return searchSuccess;
  }

  function toInteger (value) {
    return parseInt(value, 10) || 0;
  }

  // Borrowed from Lodash (_.deburr)
  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to compose unicode character classes. */
  var rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboMarksExtendedRange = '\\u1ab0-\\u1aff',
      rsComboMarksSupplementRange = '\\u1dc0-\\u1dff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange + rsComboMarksExtendedRange + rsComboMarksSupplementRange;

  /** Used to compose unicode capture groups. */
  var rsCombo = '[' + rsComboRange + ']';

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  function deburrLetter (key) {
    return deburredLetters[key];
  };

  function normalizeToBase (string) {
    string = string.toString();
    return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
  }

  // List of HTML entities for escaping.
  var escapeMap = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#x27;',
    '`': '&#x60;'
  };

  // Functions for escaping and unescaping strings to/from HTML interpolation.
  var createEscaper = function (map) {
    var escaper = function (match) {
      return map[match];
    };
    // Regexes for identifying a key that needs to be escaped.
    var source = '(?:' + Object.keys(map).join('|') + ')';
    var testRegexp = RegExp(source);
    var replaceRegexp = RegExp(source, 'g');
    return function (string) {
      string = string == null ? '' : '' + string;
      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
    };
  };

  var htmlEscape = createEscaper(escapeMap);

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var keyCodeMap = {
    32: ' ',
    48: '0',
    49: '1',
    50: '2',
    51: '3',
    52: '4',
    53: '5',
    54: '6',
    55: '7',
    56: '8',
    57: '9',
    59: ';',
    65: 'A',
    66: 'B',
    67: 'C',
    68: 'D',
    69: 'E',
    70: 'F',
    71: 'G',
    72: 'H',
    73: 'I',
    74: 'J',
    75: 'K',
    76: 'L',
    77: 'M',
    78: 'N',
    79: 'O',
    80: 'P',
    81: 'Q',
    82: 'R',
    83: 'S',
    84: 'T',
    85: 'U',
    86: 'V',
    87: 'W',
    88: 'X',
    89: 'Y',
    90: 'Z',
    96: '0',
    97: '1',
    98: '2',
    99: '3',
    100: '4',
    101: '5',
    102: '6',
    103: '7',
    104: '8',
    105: '9'
  };

  var keyCodes = {
    ESCAPE: 27, // KeyboardEvent.which value for Escape (Esc) key
    ENTER: 13, // KeyboardEvent.which value for Enter key
    SPACE: 32, // KeyboardEvent.which value for space key
    TAB: 9, // KeyboardEvent.which value for tab key
    ARROW_UP: 38, // KeyboardEvent.which value for up arrow key
    ARROW_DOWN: 40 // KeyboardEvent.which value for down arrow key
  }

  var version = {
    success: false,
    major: '3'
  };

  try {
    version.full = ($.fn.dropdown.Constructor.VERSION || '').split(' ')[0].split('.');
    version.major = version.full[0];
    version.success = true;
  } catch (err) {
    // do nothing
  }

  var selectId = 0;

  var EVENT_KEY = '.bs.select';

  var classNames = {
    DISABLED: 'disabled',
    DIVIDER: 'divider',
    SHOW: 'open',
    DROPUP: 'dropup',
    MENU: 'dropdown-menu',
    MENURIGHT: 'dropdown-menu-right',
    MENULEFT: 'dropdown-menu-left',
    // to-do: replace with more advanced template/customization options
    BUTTONCLASS: 'btn-default',
    POPOVERHEADER: 'popover-title',
    ICONBASE: 'glyphicon',
    TICKICON: 'glyphicon-ok'
  }

  var Selector = {
    MENU: '.' + classNames.MENU
  }

  var elementTemplates = {
    div: document.createElement('div'),
    span: document.createElement('span'),
    i: document.createElement('i'),
    subtext: document.createElement('small'),
    a: document.createElement('a'),
    li: document.createElement('li'),
    whitespace: document.createTextNode('\u00A0'),
    fragment: document.createDocumentFragment()
  }

  elementTemplates.noResults = elementTemplates.li.cloneNode(false);
  elementTemplates.noResults.className = 'no-results';

  elementTemplates.a.setAttribute('role', 'option');
  elementTemplates.a.className = 'dropdown-item';

  elementTemplates.subtext.className = 'text-muted';

  elementTemplates.text = elementTemplates.span.cloneNode(false);
  elementTemplates.text.className = 'text';

  elementTemplates.checkMark = elementTemplates.span.cloneNode(false);

  var REGEXP_ARROW = new RegExp(keyCodes.ARROW_UP + '|' + keyCodes.ARROW_DOWN);
  var REGEXP_TAB_OR_ESCAPE = new RegExp('^' + keyCodes.TAB + '$|' + keyCodes.ESCAPE);

  var generateOption = {
    li: function (content, classes, optgroup) {
      var li = elementTemplates.li.cloneNode(false);

      if (content) {
        if (content.nodeType === 1 || content.nodeType === 11) {
          li.appendChild(content);
        } else {
          li.innerHTML = content;
        }
      }

      if (typeof classes !== 'undefined' && classes !== '') li.className = classes;
      if (typeof optgroup !== 'undefined' && optgroup !== null) li.classList.add('optgroup-' + optgroup);

      return li;
    },

    a: function (text, classes, inline) {
      var a = elementTemplates.a.cloneNode(true);

      if (text) {
        if (text.nodeType === 11) {
          a.appendChild(text);
        } else {
          a.insertAdjacentHTML('beforeend', text);
        }
      }

      if (typeof classes !== 'undefined' && classes !== '') a.classList.add.apply(a.classList, classes.split(/\s+/));
      if (inline) a.setAttribute('style', inline);

      return a;
    },

    text: function (options, useFragment) {
      var textElement = elementTemplates.text.cloneNode(false),
          subtextElement,
          iconElement;

      if (options.content) {
        textElement.innerHTML = options.content;
      } else {
        textElement.textContent = options.text;

        if (options.icon) {
          var whitespace = elementTemplates.whitespace.cloneNode(false);

          // need to use <i> for icons in the button to prevent a breaking change
          // note: switch to span in next major release
          iconElement = (useFragment === true ? elementTemplates.i : elementTemplates.span).cloneNode(false);
          iconElement.className = this.options.iconBase + ' ' + options.icon;

          elementTemplates.fragment.appendChild(iconElement);
          elementTemplates.fragment.appendChild(whitespace);
        }

        if (options.subtext) {
          subtextElement = elementTemplates.subtext.cloneNode(false);
          subtextElement.textContent = options.subtext;
          textElement.appendChild(subtextElement);
        }
      }

      if (useFragment === true) {
        while (textElement.childNodes.length > 0) {
          elementTemplates.fragment.appendChild(textElement.childNodes[0]);
        }
      } else {
        elementTemplates.fragment.appendChild(textElement);
      }

      return elementTemplates.fragment;
    },

    label: function (options) {
      var textElement = elementTemplates.text.cloneNode(false),
          subtextElement,
          iconElement;

      textElement.innerHTML = options.display;

      if (options.icon) {
        var whitespace = elementTemplates.whitespace.cloneNode(false);

        iconElement = elementTemplates.span.cloneNode(false);
        iconElement.className = this.options.iconBase + ' ' + options.icon;

        elementTemplates.fragment.appendChild(iconElement);
        elementTemplates.fragment.appendChild(whitespace);
      }

      if (options.subtext) {
        subtextElement = elementTemplates.subtext.cloneNode(false);
        subtextElement.textContent = options.subtext;
        textElement.appendChild(subtextElement);
      }

      elementTemplates.fragment.appendChild(textElement);

      return elementTemplates.fragment;
    }
  }

  function showNoResults (searchMatch, searchValue) {
    if (!searchMatch.length) {
      elementTemplates.noResults.innerHTML = this.options.noneResultsText.replace('{0}', '"' + htmlEscape(searchValue) + '"');
      this.$menuInner[0].firstChild.appendChild(elementTemplates.noResults);
    }
  }

  var Selectpicker = function (element, options) {
    var that = this;

    // bootstrap-select has been initialized - revert valHooks.select.set back to its original function
    if (!valHooks.useDefault) {
      $.valHooks.select.set = valHooks._set;
      valHooks.useDefault = true;
    }

    this.$element = $(element);
    this.$newElement = null;
    this.$button = null;
    this.$menu = null;
    this.options = options;
    this.selectpicker = {
      main: {},
      search: {},
      current: {}, // current changes if a search is in progress
      view: {},
      isSearching: false,
      keydown: {
        keyHistory: '',
        resetKeyHistory: {
          start: function () {
            return setTimeout(function () {
              that.selectpicker.keydown.keyHistory = '';
            }, 800);
          }
        }
      }
    };

    this.sizeInfo = {};

    // If we have no title yet, try to pull it from the html title attribute (jQuery doesnt' pick it up as it's not a
    // data-attribute)
    if (this.options.title === null) {
      this.options.title = this.$element.attr('title');
    }

    // Format window padding
    var winPad = this.options.windowPadding;
    if (typeof winPad === 'number') {
      this.options.windowPadding = [winPad, winPad, winPad, winPad];
    }

    // Expose public methods
    this.val = Selectpicker.prototype.val;
    this.render = Selectpicker.prototype.render;
    this.refresh = Selectpicker.prototype.refresh;
    this.setStyle = Selectpicker.prototype.setStyle;
    this.selectAll = Selectpicker.prototype.selectAll;
    this.deselectAll = Selectpicker.prototype.deselectAll;
    this.destroy = Selectpicker.prototype.destroy;
    this.remove = Selectpicker.prototype.remove;
    this.show = Selectpicker.prototype.show;
    this.hide = Selectpicker.prototype.hide;

    this.init();
  };

  Selectpicker.VERSION = '1.13.18';

  // part of this is duplicated in i18n/defaults-en_US.js. Make sure to update both.
  Selectpicker.DEFAULTS = {
    noneSelectedText: 'Nothing selected',
    noneResultsText: 'No results matched {0}',
    countSelectedText: function (numSelected, numTotal) {
      return (numSelected == 1) ? '{0} item selected' : '{0} items selected';
    },
    maxOptionsText: function (numAll, numGroup) {
      return [
        (numAll == 1) ? 'Limit reached ({n} item max)' : 'Limit reached ({n} items max)',
        (numGroup == 1) ? 'Group limit reached ({n} item max)' : 'Group limit reached ({n} items max)'
      ];
    },
    selectAllText: 'Select All',
    deselectAllText: 'Deselect All',
    doneButton: false,
    doneButtonText: 'Close',
    multipleSeparator: ', ',
    styleBase: 'btn',
    style: classNames.BUTTONCLASS,
    size: 'auto',
    title: null,
    selectedTextFormat: 'values',
    width: false,
    container: false,
    hideDisabled: false,
    showSubtext: false,
    showIcon: true,
    showContent: true,
    dropupAuto: true,
    header: false,
    liveSearch: false,
    liveSearchPlaceholder: null,
    liveSearchNormalize: false,
    liveSearchStyle: 'contains',
    actionsBox: false,
    iconBase: classNames.ICONBASE,
    tickIcon: classNames.TICKICON,
    showTick: false,
    template: {
      caret: '<span class="caret"></span>'
    },
    maxOptions: false,
    mobile: false,
    selectOnTab: false,
    dropdownAlignRight: false,
    windowPadding: 0,
    virtualScroll: 600,
    display: false,
    sanitize: true,
    sanitizeFn: null,
    whiteList: DefaultWhitelist
  };

  Selectpicker.prototype = {

    constructor: Selectpicker,

    init: function () {
      var that = this,
          id = this.$element.attr('id'),
          element = this.$element[0],
          form = element.form;

      selectId++;
      this.selectId = 'bs-select-' + selectId;

      element.classList.add('bs-select-hidden');

      this.multiple = this.$element.prop('multiple');
      this.autofocus = this.$element.prop('autofocus');

      if (element.classList.contains('show-tick')) {
        this.options.showTick = true;
      }

      this.$newElement = this.createDropdown();
      this.buildData();
      this.$element
        .after(this.$newElement)
        .prependTo(this.$newElement);

      // ensure select is associated with form element if it got unlinked after moving it inside newElement
      if (form && element.form === null) {
        if (!form.id) form.id = 'form-' + this.selectId;
        element.setAttribute('form', form.id);
      }

      this.$button = this.$newElement.children('button');
      this.$menu = this.$newElement.children(Selector.MENU);
      this.$menuInner = this.$menu.children('.inner');
      this.$searchbox = this.$menu.find('input');

      element.classList.remove('bs-select-hidden');

      if (this.options.dropdownAlignRight === true) this.$menu[0].classList.add(classNames.MENURIGHT);

      if (typeof id !== 'undefined') {
        this.$button.attr('data-id', id);
      }

      this.checkDisabled();
      this.clickListener();

      if (this.options.liveSearch) {
        this.liveSearchListener();
        this.focusedParent = this.$searchbox[0];
      } else {
        this.focusedParent = this.$menuInner[0];
      }

      this.setStyle();
      this.render();
      this.setWidth();
      if (this.options.container) {
        this.selectPosition();
      } else {
        this.$element.on('hide' + EVENT_KEY, function () {
          if (that.isVirtual()) {
            // empty menu on close
            var menuInner = that.$menuInner[0],
                emptyMenu = menuInner.firstChild.cloneNode(false);

            // replace the existing UL with an empty one - this is faster than $.empty() or innerHTML = ''
            menuInner.replaceChild(emptyMenu, menuInner.firstChild);
            menuInner.scrollTop = 0;
          }
        });
      }
      this.$menu.data('this', this);
      this.$newElement.data('this', this);
      if (this.options.mobile) this.mobile();

      this.$newElement.on({
        'hide.bs.dropdown': function (e) {
          that.$element.trigger('hide' + EVENT_KEY, e);
        },
        'hidden.bs.dropdown': function (e) {
          that.$element.trigger('hidden' + EVENT_KEY, e);
        },
        'show.bs.dropdown': function (e) {
          that.$element.trigger('show' + EVENT_KEY, e);
        },
        'shown.bs.dropdown': function (e) {
          that.$element.trigger('shown' + EVENT_KEY, e);
        }
      });

      if (element.hasAttribute('required')) {
        this.$element.on('invalid' + EVENT_KEY, function () {
          that.$button[0].classList.add('bs-invalid');

          that.$element
            .on('shown' + EVENT_KEY + '.invalid', function () {
              that.$element
                .val(that.$element.val()) // set the value to hide the validation message in Chrome when menu is opened
                .off('shown' + EVENT_KEY + '.invalid');
            })
            .on('rendered' + EVENT_KEY, function () {
              // if select is no longer invalid, remove the bs-invalid class
              if (this.validity.valid) that.$button[0].classList.remove('bs-invalid');
              that.$element.off('rendered' + EVENT_KEY);
            });

          that.$button.on('blur' + EVENT_KEY, function () {
            that.$element.trigger('focus').trigger('blur');
            that.$button.off('blur' + EVENT_KEY);
          });
        });
      }

      setTimeout(function () {
        that.buildList();
        that.$element.trigger('loaded' + EVENT_KEY);
      });
    },

    createDropdown: function () {
      // Options
      // If we are multiple or showTick option is set, then add the show-tick class
      var showTick = (this.multiple || this.options.showTick) ? ' show-tick' : '',
          multiselectable = this.multiple ? ' aria-multiselectable="true"' : '',
          inputGroup = '',
          autofocus = this.autofocus ? ' autofocus' : '';

      if (version.major < 4 && this.$element.parent().hasClass('input-group')) {
        inputGroup = ' input-group-btn';
      }

      // Elements
      var drop,
          header = '',
          searchbox = '',
          actionsbox = '',
          donebutton = '';

      if (this.options.header) {
        header =
          '<div class="' + classNames.POPOVERHEADER + '">' +
            '<button type="button" class="close" aria-hidden="true">&times;</button>' +
              this.options.header +
          '</div>';
      }

      if (this.options.liveSearch) {
        searchbox =
          '<div class="bs-searchbox">' +
            '<input type="search" class="form-control" autocomplete="off"' +
              (
                this.options.liveSearchPlaceholder === null ? ''
                :
                ' placeholder="' + htmlEscape(this.options.liveSearchPlaceholder) + '"'
              ) +
              ' role="combobox" aria-label="Search" aria-controls="' + this.selectId + '" aria-autocomplete="list">' +
          '</div>';
      }

      if (this.multiple && this.options.actionsBox) {
        actionsbox =
          '<div class="bs-actionsbox">' +
            '<div class="btn-group btn-group-sm btn-block">' +
              '<button type="button" class="actions-btn bs-select-all btn ' + classNames.BUTTONCLASS + '">' +
                this.options.selectAllText +
              '</button>' +
              '<button type="button" class="actions-btn bs-deselect-all btn ' + classNames.BUTTONCLASS + '">' +
                this.options.deselectAllText +
              '</button>' +
            '</div>' +
          '</div>';
      }

      if (this.multiple && this.options.doneButton) {
        donebutton =
          '<div class="bs-donebutton">' +
            '<div class="btn-group btn-block">' +
              '<button type="button" class="btn btn-sm ' + classNames.BUTTONCLASS + '">' +
                this.options.doneButtonText +
              '</button>' +
            '</div>' +
          '</div>';
      }

      drop =
        '<div class="dropdown bootstrap-select' + showTick + inputGroup + '">' +
          '<button type="button" tabindex="-1" class="' + this.options.styleBase + ' dropdown-toggle" ' + (this.options.display === 'static' ? 'data-display="static"' : '') + 'data-toggle="dropdown"' + autofocus + ' role="combobox" aria-owns="' + this.selectId + '" aria-haspopup="listbox" aria-expanded="false">' +
            '<div class="filter-option">' +
              '<div class="filter-option-inner">' +
                '<div class="filter-option-inner-inner"></div>' +
              '</div> ' +
            '</div>' +
            (
              version.major === '4' ? ''
              :
              '<span class="bs-caret">' +
                this.options.template.caret +
              '</span>'
            ) +
          '</button>' +
          '<div class="' + classNames.MENU + ' ' + (version.major === '4' ? '' : classNames.SHOW) + '">' +
            header +
            searchbox +
            actionsbox +
            '<div class="inner ' + classNames.SHOW + '" role="listbox" id="' + this.selectId + '" tabindex="-1" ' + multiselectable + '>' +
                '<ul class="' + classNames.MENU + ' inner ' + (version.major === '4' ? classNames.SHOW : '') + '" role="presentation">' +
                '</ul>' +
            '</div>' +
            donebutton +
          '</div>' +
        '</div>';

      return $(drop);
    },

    setPositionData: function () {
      this.selectpicker.view.canHighlight = [];
      this.selectpicker.view.size = 0;
      this.selectpicker.view.firstHighlightIndex = false;

      for (var i = 0; i < this.selectpicker.current.data.length; i++) {
        var li = this.selectpicker.current.data[i],
            canHighlight = true;

        if (li.type === 'divider') {
          canHighlight = false;
          li.height = this.sizeInfo.dividerHeight;
        } else if (li.type === 'optgroup-label') {
          canHighlight = false;
          li.height = this.sizeInfo.dropdownHeaderHeight;
        } else {
          li.height = this.sizeInfo.liHeight;
        }

        if (li.disabled) canHighlight = false;

        this.selectpicker.view.canHighlight.push(canHighlight);

        if (canHighlight) {
          this.selectpicker.view.size++;
          li.posinset = this.selectpicker.view.size;
          if (this.selectpicker.view.firstHighlightIndex === false) this.selectpicker.view.firstHighlightIndex = i;
        }

        li.position = (i === 0 ? 0 : this.selectpicker.current.data[i - 1].position) + li.height;
      }
    },

    isVirtual: function () {
      return (this.options.virtualScroll !== false) && (this.selectpicker.main.elements.length >= this.options.virtualScroll) || this.options.virtualScroll === true;
    },

    createView: function (isSearching, setSize, refresh) {
      var that = this,
          scrollTop = 0,
          active = [],
          selected,
          prevActive;

      this.selectpicker.isSearching = isSearching;
      this.selectpicker.current = isSearching ? this.selectpicker.search : this.selectpicker.main;

      this.setPositionData();

      if (setSize) {
        if (refresh) {
          scrollTop = this.$menuInner[0].scrollTop;
        } else if (!that.multiple) {
          var element = that.$element[0],
              selectedIndex = (element.options[element.selectedIndex] || {}).liIndex;

          if (typeof selectedIndex === 'number' && that.options.size !== false) {
            var selectedData = that.selectpicker.main.data[selectedIndex],
                position = selectedData && selectedData.position;

            if (position) {
              scrollTop = position - ((that.sizeInfo.menuInnerHeight + that.sizeInfo.liHeight) / 2);
            }
          }
        }
      }

      scroll(scrollTop, true);

      this.$menuInner.off('scroll.createView').on('scroll.createView', function (e, updateValue) {
        if (!that.noScroll) scroll(this.scrollTop, updateValue);
        that.noScroll = false;
      });

      function scroll (scrollTop, init) {
        var size = that.selectpicker.current.elements.length,
            chunks = [],
            chunkSize,
            chunkCount,
            firstChunk,
            lastChunk,
            currentChunk,
            prevPositions,
            positionIsDifferent,
            previousElements,
            menuIsDifferent = true,
            isVirtual = that.isVirtual();

        that.selectpicker.view.scrollTop = scrollTop;

        chunkSize = Math.ceil(that.sizeInfo.menuInnerHeight / that.sizeInfo.liHeight * 1.5); // number of options in a chunk
        chunkCount = Math.round(size / chunkSize) || 1; // number of chunks

        for (var i = 0; i < chunkCount; i++) {
          var endOfChunk = (i + 1) * chunkSize;

          if (i === chunkCount - 1) {
            endOfChunk = size;
          }

          chunks[i] = [
            (i) * chunkSize + (!i ? 0 : 1),
            endOfChunk
          ];

          if (!size) break;

          if (currentChunk === undefined && scrollTop - 1 <= that.selectpicker.current.data[endOfChunk - 1].position - that.sizeInfo.menuInnerHeight) {
            currentChunk = i;
          }
        }

        if (currentChunk === undefined) currentChunk = 0;

        prevPositions = [that.selectpicker.view.position0, that.selectpicker.view.position1];

        // always display previous, current, and next chunks
        firstChunk = Math.max(0, currentChunk - 1);
        lastChunk = Math.min(chunkCount - 1, currentChunk + 1);

        that.selectpicker.view.position0 = isVirtual === false ? 0 : (Math.max(0, chunks[firstChunk][0]) || 0);
        that.selectpicker.view.position1 = isVirtual === false ? size : (Math.min(size, chunks[lastChunk][1]) || 0);

        positionIsDifferent = prevPositions[0] !== that.selectpicker.view.position0 || prevPositions[1] !== that.selectpicker.view.position1;

        if (that.activeIndex !== undefined) {
          prevActive = that.selectpicker.main.elements[that.prevActiveIndex];
          active = that.selectpicker.main.elements[that.activeIndex];
          selected = that.selectpicker.main.elements[that.selectedIndex];

          if (init) {
            if (that.activeIndex !== that.selectedIndex) {
              that.defocusItem(active);
            }
            that.activeIndex = undefined;
          }

          if (that.activeIndex && that.activeIndex !== that.selectedIndex) {
            that.defocusItem(selected);
          }
        }

        if (that.prevActiveIndex !== undefined && that.prevActiveIndex !== that.activeIndex && that.prevActiveIndex !== that.selectedIndex) {
          that.defocusItem(prevActive);
        }

        if (init || positionIsDifferent) {
          previousElements = that.selectpicker.view.visibleElements ? that.selectpicker.view.visibleElements.slice() : [];

          if (isVirtual === false) {
            that.selectpicker.view.visibleElements = that.selectpicker.current.elements;
          } else {
            that.selectpicker.view.visibleElements = that.selectpicker.current.elements.slice(that.selectpicker.view.position0, that.selectpicker.view.position1);
          }

          that.setOptionStatus();

          // if searching, check to make sure the list has actually been updated before updating DOM
          // this prevents unnecessary repaints
          if (isSearching || (isVirtual === false && init)) menuIsDifferent = !isEqual(previousElements, that.selectpicker.view.visibleElements);

          // if virtual scroll is disabled and not searching,
          // menu should never need to be updated more than once
          if ((init || isVirtual === true) && menuIsDifferent) {
            var menuInner = that.$menuInner[0],
                menuFragment = document.createDocumentFragment(),
                emptyMenu = menuInner.firstChild.cloneNode(false),
                marginTop,
                marginBottom,
                elements = that.selectpicker.view.visibleElements,
                toSanitize = [];

            // replace the existing UL with an empty one - this is faster than $.empty()
            menuInner.replaceChild(emptyMenu, menuInner.firstChild);

            for (var i = 0, visibleElementsLen = elements.length; i < visibleElementsLen; i++) {
              var element = elements[i],
                  elText,
                  elementData;

              if (that.options.sanitize) {
                elText = element.lastChild;

                if (elText) {
                  elementData = that.selectpicker.current.data[i + that.selectpicker.view.position0];

                  if (elementData && elementData.content && !elementData.sanitized) {
                    toSanitize.push(elText);
                    elementData.sanitized = true;
                  }
                }
              }

              menuFragment.appendChild(element);
            }

            if (that.options.sanitize && toSanitize.length) {
              sanitizeHtml(toSanitize, that.options.whiteList, that.options.sanitizeFn);
            }

            if (isVirtual === true) {
              marginTop = (that.selectpicker.view.position0 === 0 ? 0 : that.selectpicker.current.data[that.selectpicker.view.position0 - 1].position);
              marginBottom = (that.selectpicker.view.position1 > size - 1 ? 0 : that.selectpicker.current.data[size - 1].position - that.selectpicker.current.data[that.selectpicker.view.position1 - 1].position);

              menuInner.firstChild.style.marginTop = marginTop + 'px';
              menuInner.firstChild.style.marginBottom = marginBottom + 'px';
            } else {
              menuInner.firstChild.style.marginTop = 0;
              menuInner.firstChild.style.marginBottom = 0;
            }

            menuInner.firstChild.appendChild(menuFragment);

            // if an option is encountered that is wider than the current menu width, update the menu width accordingly
            // switch to ResizeObserver with increased browser support
            if (isVirtual === true && that.sizeInfo.hasScrollBar) {
              var menuInnerInnerWidth = menuInner.firstChild.offsetWidth;

              if (init && menuInnerInnerWidth < that.sizeInfo.menuInnerInnerWidth && that.sizeInfo.totalMenuWidth > that.sizeInfo.selectWidth) {
                menuInner.firstChild.style.minWidth = that.sizeInfo.menuInnerInnerWidth + 'px';
              } else if (menuInnerInnerWidth > that.sizeInfo.menuInnerInnerWidth) {
                // set to 0 to get actual width of menu
                that.$menu[0].style.minWidth = 0;

                var actualMenuWidth = menuInner.firstChild.offsetWidth;

                if (actualMenuWidth > that.sizeInfo.menuInnerInnerWidth) {
                  that.sizeInfo.menuInnerInnerWidth = actualMenuWidth;
                  menuInner.firstChild.style.minWidth = that.sizeInfo.menuInnerInnerWidth + 'px';
                }

                // reset to default CSS styling
                that.$menu[0].style.minWidth = '';
              }
            }
          }
        }

        that.prevActiveIndex = that.activeIndex;

        if (!that.options.liveSearch) {
          that.$menuInner.trigger('focus');
        } else if (isSearching && init) {
          var index = 0,
              newActive;

          if (!that.selectpicker.view.canHighlight[index]) {
            index = 1 + that.selectpicker.view.canHighlight.slice(1).indexOf(true);
          }

          newActive = that.selectpicker.view.visibleElements[index];

          that.defocusItem(that.selectpicker.view.currentActive);

          that.activeIndex = (that.selectpicker.current.data[index] || {}).index;

          that.focusItem(newActive);
        }
      }

      $(window)
        .off('resize' + EVENT_KEY + '.' + this.selectId + '.createView')
        .on('resize' + EVENT_KEY + '.' + this.selectId + '.createView', function () {
          var isActive = that.$newElement.hasClass(classNames.SHOW);

          if (isActive) scroll(that.$menuInner[0].scrollTop);
        });
    },

    focusItem: function (li, liData, noStyle) {
      if (li) {
        liData = liData || this.selectpicker.main.data[this.activeIndex];
        var a = li.firstChild;

        if (a) {
          a.setAttribute('aria-setsize', this.selectpicker.view.size);
          a.setAttribute('aria-posinset', liData.posinset);

          if (noStyle !== true) {
            this.focusedParent.setAttribute('aria-activedescendant', a.id);
            li.classList.add('active');
            a.classList.add('active');
          }
        }
      }
    },

    defocusItem: function (li) {
      if (li) {
        li.classList.remove('active');
        if (li.firstChild) li.firstChild.classList.remove('active');
      }
    },

    setPlaceholder: function () {
      var that = this,
          updateIndex = false;

      if (this.options.title && !this.multiple) {
        if (!this.selectpicker.view.titleOption) this.selectpicker.view.titleOption = document.createElement('option');

        // this option doesn't create a new <li> element, but does add a new option at the start,
        // so startIndex should increase to prevent having to check every option for the bs-title-option class
        updateIndex = true;

        var element = this.$element[0],
            selectTitleOption = false,
            titleNotAppended = !this.selectpicker.view.titleOption.parentNode,
            selectedIndex = element.selectedIndex,
            selectedOption = element.options[selectedIndex],
            navigation = window.performance && window.performance.getEntriesByType('navigation'),
            // Safari doesn't support getEntriesByType('navigation') - fall back to performance.navigation
            isNotBackForward = (navigation && navigation.length) ? navigation[0].type !== 'back_forward' : window.performance.navigation.type !== 2;

        if (titleNotAppended) {
          // Use native JS to prepend option (faster)
          this.selectpicker.view.titleOption.className = 'bs-title-option';
          this.selectpicker.view.titleOption.value = '';

          // Check if selected or data-selected attribute is already set on an option. If not, select the titleOption option.
          // the selected item may have been changed by user or programmatically before the bootstrap select plugin runs,
          // if so, the select will have the data-selected attribute
          selectTitleOption = !selectedOption || (selectedIndex === 0 && selectedOption.defaultSelected === false && this.$element.data('selected') === undefined);
        }

        if (titleNotAppended || this.selectpicker.view.titleOption.index !== 0) {
          element.insertBefore(this.selectpicker.view.titleOption, element.firstChild);
        }

        // Set selected *after* appending to select,
        // otherwise the option doesn't get selected in IE
        // set using selectedIndex, as setting the selected attr to true here doesn't work in IE11
        if (selectTitleOption && isNotBackForward) {
          element.selectedIndex = 0;
        } else if (document.readyState !== 'complete') {
          // if navigation type is back_forward, there's a chance the select will have its value set by BFCache
          // wait for that value to be set, then run render again
          window.addEventListener('pageshow', function () {
            if (that.selectpicker.view.displayedValue !== element.value) that.render();
          });
        }
      }

      return updateIndex;
    },

    buildData: function () {
      var optionSelector = ':not([hidden]):not([data-hidden="true"])',
          mainData = [],
          optID = 0,
          startIndex = this.setPlaceholder() ? 1 : 0; // append the titleOption if necessary and skip the first option in the loop

      if (this.options.hideDisabled) optionSelector += ':not(:disabled)';

      var selectOptions = this.$element[0].querySelectorAll('select > *' + optionSelector);

      function addDivider (config) {
        var previousData = mainData[mainData.length - 1];

        // ensure optgroup doesn't create back-to-back dividers
        if (
          previousData &&
          previousData.type === 'divider' &&
          (previousData.optID || config.optID)
        ) {
          return;
        }

        config = config || {};
        config.type = 'divider';

        mainData.push(config);
      }

      function addOption (option, config) {
        config = config || {};

        config.divider = option.getAttribute('data-divider') === 'true';

        if (config.divider) {
          addDivider({
            optID: config.optID
          });
        } else {
          var liIndex = mainData.length,
              cssText = option.style.cssText,
              inlineStyle = cssText ? htmlEscape(cssText) : '',
              optionClass = (option.className || '') + (config.optgroupClass || '');

          if (config.optID) optionClass = 'opt ' + optionClass;

          config.optionClass = optionClass.trim();
          config.inlineStyle = inlineStyle;
          config.text = option.textContent;

          config.content = option.getAttribute('data-content');
          config.tokens = option.getAttribute('data-tokens');
          config.subtext = option.getAttribute('data-subtext');
          config.icon = option.getAttribute('data-icon');

          option.liIndex = liIndex;

          config.display = config.content || config.text;
          config.type = 'option';
          config.index = liIndex;
          config.option = option;
          config.selected = !!option.selected;
          config.disabled = config.disabled || !!option.disabled;

          mainData.push(config);
        }
      }

      function addOptgroup (index, selectOptions) {
        var optgroup = selectOptions[index],
            // skip placeholder option
            previous = index - 1 < startIndex ? false : selectOptions[index - 1],
            next = selectOptions[index + 1],
            options = optgroup.querySelectorAll('option' + optionSelector);

        if (!options.length) return;

        var config = {
              display: htmlEscape(optgroup.label),
              subtext: optgroup.getAttribute('data-subtext'),
              icon: optgroup.getAttribute('data-icon'),
              type: 'optgroup-label',
              optgroupClass: ' ' + (optgroup.className || '')
            },
            headerIndex,
            lastIndex;

        optID++;

        if (previous) {
          addDivider({ optID: optID });
        }

        config.optID = optID;

        mainData.push(config);

        for (var j = 0, len = options.length; j < len; j++) {
          var option = options[j];

          if (j === 0) {
            headerIndex = mainData.length - 1;
            lastIndex = headerIndex + len;
          }

          addOption(option, {
            headerIndex: headerIndex,
            lastIndex: lastIndex,
            optID: config.optID,
            optgroupClass: config.optgroupClass,
            disabled: optgroup.disabled
          });
        }

        if (next) {
          addDivider({ optID: optID });
        }
      }

      for (var len = selectOptions.length, i = startIndex; i < len; i++) {
        var item = selectOptions[i];

        if (item.tagName !== 'OPTGROUP') {
          addOption(item, {});
        } else {
          addOptgroup(i, selectOptions);
        }
      }

      this.selectpicker.main.data = this.selectpicker.current.data = mainData;
    },

    buildList: function () {
      var that = this,
          selectData = this.selectpicker.main.data,
          mainElements = [],
          widestOptionLength = 0;

      if ((that.options.showTick || that.multiple) && !elementTemplates.checkMark.parentNode) {
        elementTemplates.checkMark.className = this.options.iconBase + ' ' + that.options.tickIcon + ' check-mark';
        elementTemplates.a.appendChild(elementTemplates.checkMark);
      }

      function buildElement (item) {
        var liElement,
            combinedLength = 0;

        switch (item.type) {
          case 'divider':
            liElement = generateOption.li(
              false,
              classNames.DIVIDER,
              (item.optID ? item.optID + 'div' : undefined)
            );

            break;

          case 'option':
            liElement = generateOption.li(
              generateOption.a(
                generateOption.text.call(that, item),
                item.optionClass,
                item.inlineStyle
              ),
              '',
              item.optID
            );

            if (liElement.firstChild) {
              liElement.firstChild.id = that.selectId + '-' + item.index;
            }

            break;

          case 'optgroup-label':
            liElement = generateOption.li(
              generateOption.label.call(that, item),
              'dropdown-header' + item.optgroupClass,
              item.optID
            );

            break;
        }

        item.element = liElement;
        mainElements.push(liElement);

        // count the number of characters in the option - not perfect, but should work in most cases
        if (item.display) combinedLength += item.display.length;
        if (item.subtext) combinedLength += item.subtext.length;
        // if there is an icon, ensure this option's width is checked
        if (item.icon) combinedLength += 1;

        if (combinedLength > widestOptionLength) {
          widestOptionLength = combinedLength;

          // guess which option is the widest
          // use this when calculating menu width
          // not perfect, but it's fast, and the width will be updating accordingly when scrolling
          that.selectpicker.view.widestOption = mainElements[mainElements.length - 1];
        }
      }

      for (var len = selectData.length, i = 0; i < len; i++) {
        var item = selectData[i];

        buildElement(item);
      }

      this.selectpicker.main.elements = this.selectpicker.current.elements = mainElements;
    },

    findLis: function () {
      return this.$menuInner.find('.inner > li');
    },

    render: function () {
      var that = this,
          element = this.$element[0],
          // ensure titleOption is appended and selected (if necessary) before getting selectedOptions
          placeholderSelected = this.setPlaceholder() && element.selectedIndex === 0,
          selectedOptions = getSelectedOptions(element, this.options.hideDisabled),
          selectedCount = selectedOptions.length,
          button = this.$button[0],
          buttonInner = button.querySelector('.filter-option-inner-inner'),
          multipleSeparator = document.createTextNode(this.options.multipleSeparator),
          titleFragment = elementTemplates.fragment.cloneNode(false),
          showCount,
          countMax,
          hasContent = false;

      button.classList.toggle('bs-placeholder', that.multiple ? !selectedCount : !getSelectValues(element, selectedOptions));

      if (!that.multiple && selectedOptions.length === 1) {
        that.selectpicker.view.displayedValue = getSelectValues(element, selectedOptions);
      }

      if (this.options.selectedTextFormat === 'static') {
        titleFragment = generateOption.text.call(this, { text: this.options.title }, true);
      } else {
        showCount = this.multiple && this.options.selectedTextFormat.indexOf('count') !== -1 && selectedCount > 1;

        // determine if the number of selected options will be shown (showCount === true)
        if (showCount) {
          countMax = this.options.selectedTextFormat.split('>');
          showCount = (countMax.length > 1 && selectedCount > countMax[1]) || (countMax.length === 1 && selectedCount >= 2);
        }

        // only loop through all selected options if the count won't be shown
        if (showCount === false) {
          if (!placeholderSelected) {
            for (var selectedIndex = 0; selectedIndex < selectedCount; selectedIndex++) {
              if (selectedIndex < 50) {
                var option = selectedOptions[selectedIndex],
                    thisData = this.selectpicker.main.data[option.liIndex],
                    titleOptions = {};

                if (this.multiple && selectedIndex > 0) {
                  titleFragment.appendChild(multipleSeparator.cloneNode(false));
                }

                if (option.title) {
                  titleOptions.text = option.title;
                } else if (thisData) {
                  if (thisData.content && that.options.showContent) {
                    titleOptions.content = thisData.content.toString();
                    hasContent = true;
                  } else {
                    if (that.options.showIcon) {
                      titleOptions.icon = thisData.icon;
                    }
                    if (that.options.showSubtext && !that.multiple && thisData.subtext) titleOptions.subtext = ' ' + thisData.subtext;
                    titleOptions.text = option.textContent.trim();
                  }
                }

                titleFragment.appendChild(generateOption.text.call(this, titleOptions, true));
              } else {
                break;
              }
            }

            // add ellipsis
            if (selectedCount > 49) {
              titleFragment.appendChild(document.createTextNode('...'));
            }
          }
        } else {
          var optionSelector = ':not([hidden]):not([data-hidden="true"]):not([data-divider="true"])';
          if (this.options.hideDisabled) optionSelector += ':not(:disabled)';

          // If this is a multiselect, and selectedTextFormat is count, then show 1 of 2 selected, etc.
          var totalCount = this.$element[0].querySelectorAll('select > option' + optionSelector + ', optgroup' + optionSelector + ' option' + optionSelector).length,
              tr8nText = (typeof this.options.countSelectedText === 'function') ? this.options.countSelectedText(selectedCount, totalCount) : this.options.countSelectedText;

          titleFragment = generateOption.text.call(this, {
            text: tr8nText.replace('{0}', selectedCount.toString()).replace('{1}', totalCount.toString())
          }, true);
        }
      }

      if (this.options.title == undefined) {
        // use .attr to ensure undefined is returned if title attribute is not set
        this.options.title = this.$element.attr('title');
      }

      // If the select doesn't have a title, then use the default, or if nothing is set at all, use noneSelectedText
      if (!titleFragment.childNodes.length) {
        titleFragment = generateOption.text.call(this, {
          text: typeof this.options.title !== 'undefined' ? this.options.title : this.options.noneSelectedText
        }, true);
      }

      // strip all HTML tags and trim the result, then unescape any escaped tags
      button.title = titleFragment.textContent.replace(/<[^>]*>?/g, '').trim();

      if (this.options.sanitize && hasContent) {
        sanitizeHtml([titleFragment], that.options.whiteList, that.options.sanitizeFn);
      }

      buttonInner.innerHTML = '';
      buttonInner.appendChild(titleFragment);

      if (version.major < 4 && this.$newElement[0].classList.contains('bs3-has-addon')) {
        var filterExpand = button.querySelector('.filter-expand'),
            clone = buttonInner.cloneNode(true);

        clone.className = 'filter-expand';

        if (filterExpand) {
          button.replaceChild(clone, filterExpand);
        } else {
          button.appendChild(clone);
        }
      }

      this.$element.trigger('rendered' + EVENT_KEY);
    },

    /**
     * @param [style]
     * @param [status]
     */
    setStyle: function (newStyle, status) {
      var button = this.$button[0],
          newElement = this.$newElement[0],
          style = this.options.style.trim(),
          buttonClass;

      if (this.$element.attr('class')) {
        this.$newElement.addClass(this.$element.attr('class').replace(/selectpicker|mobile-device|bs-select-hidden|validate\[.*\]/gi, ''));
      }

      if (version.major < 4) {
        newElement.classList.add('bs3');

        if (newElement.parentNode.classList && newElement.parentNode.classList.contains('input-group') &&
            (newElement.previousElementSibling || newElement.nextElementSibling) &&
            (newElement.previousElementSibling || newElement.nextElementSibling).classList.contains('input-group-addon')
        ) {
          newElement.classList.add('bs3-has-addon');
        }
      }

      if (newStyle) {
        buttonClass = newStyle.trim();
      } else {
        buttonClass = style;
      }

      if (status == 'add') {
        if (buttonClass) button.classList.add.apply(button.classList, buttonClass.split(' '));
      } else if (status == 'remove') {
        if (buttonClass) button.classList.remove.apply(button.classList, buttonClass.split(' '));
      } else {
        if (style) button.classList.remove.apply(button.classList, style.split(' '));
        if (buttonClass) button.classList.add.apply(button.classList, buttonClass.split(' '));
      }
    },

    liHeight: function (refresh) {
      if (!refresh && (this.options.size === false || Object.keys(this.sizeInfo).length)) return;

      var newElement = elementTemplates.div.cloneNode(false),
          menu = elementTemplates.div.cloneNode(false),
          menuInner = elementTemplates.div.cloneNode(false),
          menuInnerInner = document.createElement('ul'),
          divider = elementTemplates.li.cloneNode(false),
          dropdownHeader = elementTemplates.li.cloneNode(false),
          li,
          a = elementTemplates.a.cloneNode(false),
          text = elementTemplates.span.cloneNode(false),
          header = this.options.header && this.$menu.find('.' + classNames.POPOVERHEADER).length > 0 ? this.$menu.find('.' + classNames.POPOVERHEADER)[0].cloneNode(true) : null,
          search = this.options.liveSearch ? elementTemplates.div.cloneNode(false) : null,
          actions = this.options.actionsBox && this.multiple && this.$menu.find('.bs-actionsbox').length > 0 ? this.$menu.find('.bs-actionsbox')[0].cloneNode(true) : null,
          doneButton = this.options.doneButton && this.multiple && this.$menu.find('.bs-donebutton').length > 0 ? this.$menu.find('.bs-donebutton')[0].cloneNode(true) : null,
          firstOption = this.$element.find('option')[0];

      this.sizeInfo.selectWidth = this.$newElement[0].offsetWidth;

      text.className = 'text';
      a.className = 'dropdown-item ' + (firstOption ? firstOption.className : '');
      newElement.className = this.$menu[0].parentNode.className + ' ' + classNames.SHOW;
      newElement.style.width = 0; // ensure button width doesn't affect natural width of menu when calculating
      if (this.options.width === 'auto') menu.style.minWidth = 0;
      menu.className = classNames.MENU + ' ' + classNames.SHOW;
      menuInner.className = 'inner ' + classNames.SHOW;
      menuInnerInner.className = classNames.MENU + ' inner ' + (version.major === '4' ? classNames.SHOW : '');
      divider.className = classNames.DIVIDER;
      dropdownHeader.className = 'dropdown-header';

      text.appendChild(document.createTextNode('\u200b'));

      if (this.selectpicker.current.data.length) {
        for (var i = 0; i < this.selectpicker.current.data.length; i++) {
          var data = this.selectpicker.current.data[i];
          if (data.type === 'option') {
            li = data.element;
            break;
          }
        }
      } else {
        li = elementTemplates.li.cloneNode(false);
        a.appendChild(text);
        li.appendChild(a);
      }

      dropdownHeader.appendChild(text.cloneNode(true));

      if (this.selectpicker.view.widestOption) {
        menuInnerInner.appendChild(this.selectpicker.view.widestOption.cloneNode(true));
      }

      menuInnerInner.appendChild(li);
      menuInnerInner.appendChild(divider);
      menuInnerInner.appendChild(dropdownHeader);
      if (header) menu.appendChild(header);
      if (search) {
        var input = document.createElement('input');
        search.className = 'bs-searchbox';
        input.className = 'form-control';
        search.appendChild(input);
        menu.appendChild(search);
      }
      if (actions) menu.appendChild(actions);
      menuInner.appendChild(menuInnerInner);
      menu.appendChild(menuInner);
      if (doneButton) menu.appendChild(doneButton);
      newElement.appendChild(menu);

      document.body.appendChild(newElement);

      var liHeight = li.offsetHeight,
          dropdownHeaderHeight = dropdownHeader ? dropdownHeader.offsetHeight : 0,
          headerHeight = header ? header.offsetHeight : 0,
          searchHeight = search ? search.offsetHeight : 0,
          actionsHeight = actions ? actions.offsetHeight : 0,
          doneButtonHeight = doneButton ? doneButton.offsetHeight : 0,
          dividerHeight = $(divider).outerHeight(true),
          // fall back to jQuery if getComputedStyle is not supported
          menuStyle = window.getComputedStyle ? window.getComputedStyle(menu) : false,
          menuWidth = menu.offsetWidth,
          $menu = menuStyle ? null : $(menu),
          menuPadding = {
            vert: toInteger(menuStyle ? menuStyle.paddingTop : $menu.css('paddingTop')) +
                  toInteger(menuStyle ? menuStyle.paddingBottom : $menu.css('paddingBottom')) +
                  toInteger(menuStyle ? menuStyle.borderTopWidth : $menu.css('borderTopWidth')) +
                  toInteger(menuStyle ? menuStyle.borderBottomWidth : $menu.css('borderBottomWidth')),
            horiz: toInteger(menuStyle ? menuStyle.paddingLeft : $menu.css('paddingLeft')) +
                  toInteger(menuStyle ? menuStyle.paddingRight : $menu.css('paddingRight')) +
                  toInteger(menuStyle ? menuStyle.borderLeftWidth : $menu.css('borderLeftWidth')) +
                  toInteger(menuStyle ? menuStyle.borderRightWidth : $menu.css('borderRightWidth'))
          },
          menuExtras = {
            vert: menuPadding.vert +
                  toInteger(menuStyle ? menuStyle.marginTop : $menu.css('marginTop')) +
                  toInteger(menuStyle ? menuStyle.marginBottom : $menu.css('marginBottom')) + 2,
            horiz: menuPadding.horiz +
                  toInteger(menuStyle ? menuStyle.marginLeft : $menu.css('marginLeft')) +
                  toInteger(menuStyle ? menuStyle.marginRight : $menu.css('marginRight')) + 2
          },
          scrollBarWidth;

      menuInner.style.overflowY = 'scroll';

      scrollBarWidth = menu.offsetWidth - menuWidth;

      document.body.removeChild(newElement);

      this.sizeInfo.liHeight = liHeight;
      this.sizeInfo.dropdownHeaderHeight = dropdownHeaderHeight;
      this.sizeInfo.headerHeight = headerHeight;
      this.sizeInfo.searchHeight = searchHeight;
      this.sizeInfo.actionsHeight = actionsHeight;
      this.sizeInfo.doneButtonHeight = doneButtonHeight;
      this.sizeInfo.dividerHeight = dividerHeight;
      this.sizeInfo.menuPadding = menuPadding;
      this.sizeInfo.menuExtras = menuExtras;
      this.sizeInfo.menuWidth = menuWidth;
      this.sizeInfo.menuInnerInnerWidth = menuWidth - menuPadding.horiz;
      this.sizeInfo.totalMenuWidth = this.sizeInfo.menuWidth;
      this.sizeInfo.scrollBarWidth = scrollBarWidth;
      this.sizeInfo.selectHeight = this.$newElement[0].offsetHeight;

      this.setPositionData();
    },

    getSelectPosition: function () {
      var that = this,
          $window = $(window),
          pos = that.$newElement.offset(),
          $container = $(that.options.container),
          containerPos;

      if (that.options.container && $container.length && !$container.is('body')) {
        containerPos = $container.offset();
        containerPos.top += parseInt($container.css('borderTopWidth'));
        containerPos.left += parseInt($container.css('borderLeftWidth'));
      } else {
        containerPos = { top: 0, left: 0 };
      }

      var winPad = that.options.windowPadding;

      this.sizeInfo.selectOffsetTop = pos.top - containerPos.top - $window.scrollTop();
      this.sizeInfo.selectOffsetBot = $window.height() - this.sizeInfo.selectOffsetTop - this.sizeInfo.selectHeight - containerPos.top - winPad[2];
      this.sizeInfo.selectOffsetLeft = pos.left - containerPos.left - $window.scrollLeft();
      this.sizeInfo.selectOffsetRight = $window.width() - this.sizeInfo.selectOffsetLeft - this.sizeInfo.selectWidth - containerPos.left - winPad[1];
      this.sizeInfo.selectOffsetTop -= winPad[0];
      this.sizeInfo.selectOffsetLeft -= winPad[3];
    },

    setMenuSize: function (isAuto) {
      this.getSelectPosition();

      var selectWidth = this.sizeInfo.selectWidth,
          liHeight = this.sizeInfo.liHeight,
          headerHeight = this.sizeInfo.headerHeight,
          searchHeight = this.sizeInfo.searchHeight,
          actionsHeight = this.sizeInfo.actionsHeight,
          doneButtonHeight = this.sizeInfo.doneButtonHeight,
          divHeight = this.sizeInfo.dividerHeight,
          menuPadding = this.sizeInfo.menuPadding,
          menuInnerHeight,
          menuHeight,
          divLength = 0,
          minHeight,
          _minHeight,
          maxHeight,
          menuInnerMinHeight,
          estimate,
          isDropup;

      if (this.options.dropupAuto) {
        // Get the estimated height of the menu without scrollbars.
        // This is useful for smaller menus, where there might be plenty of room
        // below the button without setting dropup, but we can't know
        // the exact height of the menu until createView is called later
        estimate = liHeight * this.selectpicker.current.elements.length + menuPadding.vert;

        isDropup = this.sizeInfo.selectOffsetTop - this.sizeInfo.selectOffsetBot > this.sizeInfo.menuExtras.vert && estimate + this.sizeInfo.menuExtras.vert + 50 > this.sizeInfo.selectOffsetBot;

        // ensure dropup doesn't change while searching (so menu doesn't bounce back and forth)
        if (this.selectpicker.isSearching === true) {
          isDropup = this.selectpicker.dropup;
        }

        this.$newElement.toggleClass(classNames.DROPUP, isDropup);
        this.selectpicker.dropup = isDropup;
      }

      if (this.options.size === 'auto') {
        _minHeight = this.selectpicker.current.elements.length > 3 ? this.sizeInfo.liHeight * 3 + this.sizeInfo.menuExtras.vert - 2 : 0;
        menuHeight = this.sizeInfo.selectOffsetBot - this.sizeInfo.menuExtras.vert;
        minHeight = _minHeight + headerHeight + searchHeight + actionsHeight + doneButtonHeight;
        menuInnerMinHeight = Math.max(_minHeight - menuPadding.vert, 0);

        if (this.$newElement.hasClass(classNames.DROPUP)) {
          menuHeight = this.sizeInfo.selectOffsetTop - this.sizeInfo.menuExtras.vert;
        }

        maxHeight = menuHeight;
        menuInnerHeight = menuHeight - headerHeight - searchHeight - actionsHeight - doneButtonHeight - menuPadding.vert;
      } else if (this.options.size && this.options.size != 'auto' && this.selectpicker.current.elements.length > this.options.size) {
        for (var i = 0; i < this.options.size; i++) {
          if (this.selectpicker.current.data[i].type === 'divider') divLength++;
        }

        menuHeight = liHeight * this.options.size + divLength * divHeight + menuPadding.vert;
        menuInnerHeight = menuHeight - menuPadding.vert;
        maxHeight = menuHeight + headerHeight + searchHeight + actionsHeight + doneButtonHeight;
        minHeight = menuInnerMinHeight = '';
      }

      this.$menu.css({
        'max-height': maxHeight + 'px',
        'overflow': 'hidden',
        'min-height': minHeight + 'px'
      });

      this.$menuInner.css({
        'max-height': menuInnerHeight + 'px',
        'overflow-y': 'auto',
        'min-height': menuInnerMinHeight + 'px'
      });

      // ensure menuInnerHeight is always a positive number to prevent issues calculating chunkSize in createView
      this.sizeInfo.menuInnerHeight = Math.max(menuInnerHeight, 1);

      if (this.selectpicker.current.data.length && this.selectpicker.current.data[this.selectpicker.current.data.length - 1].position > this.sizeInfo.menuInnerHeight) {
        this.sizeInfo.hasScrollBar = true;
        this.sizeInfo.totalMenuWidth = this.sizeInfo.menuWidth + this.sizeInfo.scrollBarWidth;
      }

      if (this.options.dropdownAlignRight === 'auto') {
        this.$menu.toggleClass(classNames.MENURIGHT, this.sizeInfo.selectOffsetLeft > this.sizeInfo.selectOffsetRight && this.sizeInfo.selectOffsetRight < (this.sizeInfo.totalMenuWidth - selectWidth));
      }

      if (this.dropdown && this.dropdown._popper) this.dropdown._popper.update();
    },

    setSize: function (refresh) {
      this.liHeight(refresh);

      if (this.options.header) this.$menu.css('padding-top', 0);

      if (this.options.size !== false) {
        var that = this,
            $window = $(window);

        this.setMenuSize();

        if (this.options.liveSearch) {
          this.$searchbox
            .off('input.setMenuSize propertychange.setMenuSize')
            .on('input.setMenuSize propertychange.setMenuSize', function () {
              return that.setMenuSize();
            });
        }

        if (this.options.size === 'auto') {
          $window
            .off('resize' + EVENT_KEY + '.' + this.selectId + '.setMenuSize' + ' scroll' + EVENT_KEY + '.' + this.selectId + '.setMenuSize')
            .on('resize' + EVENT_KEY + '.' + this.selectId + '.setMenuSize' + ' scroll' + EVENT_KEY + '.' + this.selectId + '.setMenuSize', function () {
              return that.setMenuSize();
            });
        } else if (this.options.size && this.options.size != 'auto' && this.selectpicker.current.elements.length > this.options.size) {
          $window.off('resize' + EVENT_KEY + '.' + this.selectId + '.setMenuSize' + ' scroll' + EVENT_KEY + '.' + this.selectId + '.setMenuSize');
        }
      }

      this.createView(false, true, refresh);
    },

    setWidth: function () {
      var that = this;

      if (this.options.width === 'auto') {
        requestAnimationFrame(function () {
          that.$menu.css('min-width', '0');

          that.$element.on('loaded' + EVENT_KEY, function () {
            that.liHeight();
            that.setMenuSize();

            // Get correct width if element is hidden
            var $selectClone = that.$newElement.clone().appendTo('body'),
                btnWidth = $selectClone.css('width', 'auto').children('button').outerWidth();

            $selectClone.remove();

            // Set width to whatever's larger, button title or longest option
            that.sizeInfo.selectWidth = Math.max(that.sizeInfo.totalMenuWidth, btnWidth);
            that.$newElement.css('width', that.sizeInfo.selectWidth + 'px');
          });
        });
      } else if (this.options.width === 'fit') {
        // Remove inline min-width so width can be changed from 'auto'
        this.$menu.css('min-width', '');
        this.$newElement.css('width', '').addClass('fit-width');
      } else if (this.options.width) {
        // Remove inline min-width so width can be changed from 'auto'
        this.$menu.css('min-width', '');
        this.$newElement.css('width', this.options.width);
      } else {
        // Remove inline min-width/width so width can be changed
        this.$menu.css('min-width', '');
        this.$newElement.css('width', '');
      }
      // Remove fit-width class if width is changed programmatically
      if (this.$newElement.hasClass('fit-width') && this.options.width !== 'fit') {
        this.$newElement[0].classList.remove('fit-width');
      }
    },

    selectPosition: function () {
      this.$bsContainer = $('<div class="bs-container" />');

      var that = this,
          $container = $(this.options.container),
          pos,
          containerPos,
          actualHeight,
          getPlacement = function ($element) {
            var containerPosition = {},
                // fall back to dropdown's default display setting if display is not manually set
                display = that.options.display || (
                  // Bootstrap 3 doesn't have $.fn.dropdown.Constructor.Default
                  $.fn.dropdown.Constructor.Default ? $.fn.dropdown.Constructor.Default.display
                  : false
                );

            that.$bsContainer.addClass($element.attr('class').replace(/form-control|fit-width/gi, '')).toggleClass(classNames.DROPUP, $element.hasClass(classNames.DROPUP));
            pos = $element.offset();

            if (!$container.is('body')) {
              containerPos = $container.offset();
              containerPos.top += parseInt($container.css('borderTopWidth')) - $container.scrollTop();
              containerPos.left += parseInt($container.css('borderLeftWidth')) - $container.scrollLeft();
            } else {
              containerPos = { top: 0, left: 0 };
            }

            actualHeight = $element.hasClass(classNames.DROPUP) ? 0 : $element[0].offsetHeight;

            // Bootstrap 4+ uses Popper for menu positioning
            if (version.major < 4 || display === 'static') {
              containerPosition.top = pos.top - containerPos.top + actualHeight;
              containerPosition.left = pos.left - containerPos.left;
            }

            containerPosition.width = $element[0].offsetWidth;

            that.$bsContainer.css(containerPosition);
          };

      this.$button.on('click.bs.dropdown.data-api', function () {
        if (that.isDisabled()) {
          return;
        }

        getPlacement(that.$newElement);

        that.$bsContainer
          .appendTo(that.options.container)
          .toggleClass(classNames.SHOW, !that.$button.hasClass(classNames.SHOW))
          .append(that.$menu);
      });

      $(window)
        .off('resize' + EVENT_KEY + '.' + this.selectId + ' scroll' + EVENT_KEY + '.' + this.selectId)
        .on('resize' + EVENT_KEY + '.' + this.selectId + ' scroll' + EVENT_KEY + '.' + this.selectId, function () {
          var isActive = that.$newElement.hasClass(classNames.SHOW);

          if (isActive) getPlacement(that.$newElement);
        });

      this.$element.on('hide' + EVENT_KEY, function () {
        that.$menu.data('height', that.$menu.height());
        that.$bsContainer.detach();
      });
    },

    setOptionStatus: function (selectedOnly) {
      var that = this;

      that.noScroll = false;

      if (that.selectpicker.view.visibleElements && that.selectpicker.view.visibleElements.length) {
        for (var i = 0; i < that.selectpicker.view.visibleElements.length; i++) {
          var liData = that.selectpicker.current.data[i + that.selectpicker.view.position0],
              option = liData.option;

          if (option) {
            if (selectedOnly !== true) {
              that.setDisabled(
                liData.index,
                liData.disabled
              );
            }

            that.setSelected(
              liData.index,
              option.selected
            );
          }
        }
      }
    },

    /**
     * @param {number} index - the index of the option that is being changed
     * @param {boolean} selected - true if the option is being selected, false if being deselected
     */
    setSelected: function (index, selected) {
      var li = this.selectpicker.main.elements[index],
          liData = this.selectpicker.main.data[index],
          activeIndexIsSet = this.activeIndex !== undefined,
          thisIsActive = this.activeIndex === index,
          prevActive,
          a,
          // if current option is already active
          // OR
          // if the current option is being selected, it's NOT multiple, and
          // activeIndex is undefined:
          //  - when the menu is first being opened, OR
          //  - after a search has been performed, OR
          //  - when retainActive is false when selecting a new option (i.e. index of the newly selected option is not the same as the current activeIndex)
          keepActive = thisIsActive || (selected && !this.multiple && !activeIndexIsSet);

      liData.selected = selected;

      a = li.firstChild;

      if (selected) {
        this.selectedIndex = index;
      }

      li.classList.toggle('selected', selected);

      if (keepActive) {
        this.focusItem(li, liData);
        this.selectpicker.view.currentActive = li;
        this.activeIndex = index;
      } else {
        this.defocusItem(li);
      }

      if (a) {
        a.classList.toggle('selected', selected);

        if (selected) {
          a.setAttribute('aria-selected', true);
        } else {
          if (this.multiple) {
            a.setAttribute('aria-selected', false);
          } else {
            a.removeAttribute('aria-selected');
          }
        }
      }

      if (!keepActive && !activeIndexIsSet && selected && this.prevActiveIndex !== undefined) {
        prevActive = this.selectpicker.main.elements[this.prevActiveIndex];

        this.defocusItem(prevActive);
      }
    },

    /**
     * @param {number} index - the index of the option that is being disabled
     * @param {boolean} disabled - true if the option is being disabled, false if being enabled
     */
    setDisabled: function (index, disabled) {
      var li = this.selectpicker.main.elements[index],
          a;

      this.selectpicker.main.data[index].disabled = disabled;

      a = li.firstChild;

      li.classList.toggle(classNames.DISABLED, disabled);

      if (a) {
        if (version.major === '4') a.classList.toggle(classNames.DISABLED, disabled);

        if (disabled) {
          a.setAttribute('aria-disabled', disabled);
          a.setAttribute('tabindex', -1);
        } else {
          a.removeAttribute('aria-disabled');
          a.setAttribute('tabindex', 0);
        }
      }
    },

    isDisabled: function () {
      return this.$element[0].disabled;
    },

    checkDisabled: function () {
      if (this.isDisabled()) {
        this.$newElement[0].classList.add(classNames.DISABLED);
        this.$button.addClass(classNames.DISABLED).attr('aria-disabled', true);
      } else {
        if (this.$button[0].classList.contains(classNames.DISABLED)) {
          this.$newElement[0].classList.remove(classNames.DISABLED);
          this.$button.removeClass(classNames.DISABLED).attr('aria-disabled', false);
        }
      }
    },

    clickListener: function () {
      var that = this,
          $document = $(document);

      $document.data('spaceSelect', false);

      this.$button.on('keyup', function (e) {
        if (/(32)/.test(e.keyCode.toString(10)) && $document.data('spaceSelect')) {
          e.preventDefault();
          $document.data('spaceSelect', false);
        }
      });

      this.$newElement.on('show.bs.dropdown', function () {
        if (version.major > 3 && !that.dropdown) {
          that.dropdown = that.$button.data('bs.dropdown');
          that.dropdown._menu = that.$menu[0];
        }
      });

      this.$button.on('click.bs.dropdown.data-api', function () {
        if (!that.$newElement.hasClass(classNames.SHOW)) {
          that.setSize();
        }
      });

      function setFocus () {
        if (that.options.liveSearch) {
          that.$searchbox.trigger('focus');
        } else {
          that.$menuInner.trigger('focus');
        }
      }

      function checkPopperExists () {
        if (that.dropdown && that.dropdown._popper && that.dropdown._popper.state.isCreated) {
          setFocus();
        } else {
          requestAnimationFrame(checkPopperExists);
        }
      }

      this.$element.on('shown' + EVENT_KEY, function () {
        if (that.$menuInner[0].scrollTop !== that.selectpicker.view.scrollTop) {
          that.$menuInner[0].scrollTop = that.selectpicker.view.scrollTop;
        }

        if (version.major > 3) {
          requestAnimationFrame(checkPopperExists);
        } else {
          setFocus();
        }
      });

      // ensure posinset and setsize are correct before selecting an option via a click
      this.$menuInner.on('mouseenter', 'li a', function (e) {
        var hoverLi = this.parentElement,
            position0 = that.isVirtual() ? that.selectpicker.view.position0 : 0,
            index = Array.prototype.indexOf.call(hoverLi.parentElement.children, hoverLi),
            hoverData = that.selectpicker.current.data[index + position0];

        that.focusItem(hoverLi, hoverData, true);
      });

      this.$menuInner.on('click', 'li a', function (e, retainActive) {
        var $this = $(this),
            element = that.$element[0],
            position0 = that.isVirtual() ? that.selectpicker.view.position0 : 0,
            clickedData = that.selectpicker.current.data[$this.parent().index() + position0],
            clickedIndex = clickedData.index,
            prevValue = getSelectValues(element),
            prevIndex = element.selectedIndex,
            prevOption = element.options[prevIndex],
            triggerChange = true;

        // Don't close on multi choice menu
        if (that.multiple && that.options.maxOptions !== 1) {
          e.stopPropagation();
        }

        e.preventDefault();

        // Don't run if the select is disabled
        if (!that.isDisabled() && !$this.parent().hasClass(classNames.DISABLED)) {
          var option = clickedData.option,
              $option = $(option),
              state = option.selected,
              $optgroup = $option.parent('optgroup'),
              $optgroupOptions = $optgroup.find('option'),
              maxOptions = that.options.maxOptions,
              maxOptionsGrp = $optgroup.data('maxOptions') || false;

          if (clickedIndex === that.activeIndex) retainActive = true;

          if (!retainActive) {
            that.prevActiveIndex = that.activeIndex;
            that.activeIndex = undefined;
          }

          if (!that.multiple) { // Deselect all others if not multi select box
            if (prevOption) prevOption.selected = false;
            option.selected = true;
            that.setSelected(clickedIndex, true);
          } else { // Toggle the one we have chosen if we are multi select.
            option.selected = !state;

            that.setSelected(clickedIndex, !state);
            that.focusedParent.focus();

            if (maxOptions !== false || maxOptionsGrp !== false) {
              var maxReached = maxOptions < getSelectedOptions(element).length,
                  maxReachedGrp = maxOptionsGrp < $optgroup.find('option:selected').length;

              if ((maxOptions && maxReached) || (maxOptionsGrp && maxReachedGrp)) {
                if (maxOptions && maxOptions == 1) {
                  element.selectedIndex = -1;
                  option.selected = true;
                  that.setOptionStatus(true);
                } else if (maxOptionsGrp && maxOptionsGrp == 1) {
                  for (var i = 0; i < $optgroupOptions.length; i++) {
                    var _option = $optgroupOptions[i];
                    _option.selected = false;
                    that.setSelected(_option.liIndex, false);
                  }

                  option.selected = true;
                  that.setSelected(clickedIndex, true);
                } else {
                  var maxOptionsText = typeof that.options.maxOptionsText === 'string' ? [that.options.maxOptionsText, that.options.maxOptionsText] : that.options.maxOptionsText,
                      maxOptionsArr = typeof maxOptionsText === 'function' ? maxOptionsText(maxOptions, maxOptionsGrp) : maxOptionsText,
                      maxTxt = maxOptionsArr[0].replace('{n}', maxOptions),
                      maxTxtGrp = maxOptionsArr[1].replace('{n}', maxOptionsGrp),
                      $notify = $('<div class="notify"></div>');
                  // If {var} is set in array, replace it
                  /** @deprecated */
                  if (maxOptionsArr[2]) {
                    maxTxt = maxTxt.replace('{var}', maxOptionsArr[2][maxOptions > 1 ? 0 : 1]);
                    maxTxtGrp = maxTxtGrp.replace('{var}', maxOptionsArr[2][maxOptionsGrp > 1 ? 0 : 1]);
                  }

                  option.selected = false;

                  that.$menu.append($notify);

                  if (maxOptions && maxReached) {
                    $notify.append($('<div>' + maxTxt + '</div>'));
                    triggerChange = false;
                    that.$element.trigger('maxReached' + EVENT_KEY);
                  }

                  if (maxOptionsGrp && maxReachedGrp) {
                    $notify.append($('<div>' + maxTxtGrp + '</div>'));
                    triggerChange = false;
                    that.$element.trigger('maxReachedGrp' + EVENT_KEY);
                  }

                  setTimeout(function () {
                    that.setSelected(clickedIndex, false);
                  }, 10);

                  $notify[0].classList.add('fadeOut');

                  setTimeout(function () {
                    $notify.remove();
                  }, 1050);
                }
              }
            }
          }

          if (!that.multiple || (that.multiple && that.options.maxOptions === 1)) {
            that.$button.trigger('focus');
          } else if (that.options.liveSearch) {
            that.$searchbox.trigger('focus');
          }

          // Trigger select 'change'
          if (triggerChange) {
            if (that.multiple || prevIndex !== element.selectedIndex) {
              // $option.prop('selected') is current option state (selected/unselected). prevValue is the value of the select prior to being changed.
              changedArguments = [option.index, $option.prop('selected'), prevValue];
              that.$element
                .triggerNative('change');
            }
          }
        }
      });

      this.$menu.on('click', 'li.' + classNames.DISABLED + ' a, .' + classNames.POPOVERHEADER + ', .' + classNames.POPOVERHEADER + ' :not(.close)', function (e) {
        if (e.currentTarget == this) {
          e.preventDefault();
          e.stopPropagation();
          if (that.options.liveSearch && !$(e.target).hasClass('close')) {
            that.$searchbox.trigger('focus');
          } else {
            that.$button.trigger('focus');
          }
        }
      });

      this.$menuInner.on('click', '.divider, .dropdown-header', function (e) {
        e.preventDefault();
        e.stopPropagation();
        if (that.options.liveSearch) {
          that.$searchbox.trigger('focus');
        } else {
          that.$button.trigger('focus');
        }
      });

      this.$menu.on('click', '.' + classNames.POPOVERHEADER + ' .close', function () {
        that.$button.trigger('click');
      });

      this.$searchbox.on('click', function (e) {
        e.stopPropagation();
      });

      this.$menu.on('click', '.actions-btn', function (e) {
        if (that.options.liveSearch) {
          that.$searchbox.trigger('focus');
        } else {
          that.$button.trigger('focus');
        }

        e.preventDefault();
        e.stopPropagation();

        if ($(this).hasClass('bs-select-all')) {
          that.selectAll();
        } else {
          that.deselectAll();
        }
      });

      this.$button
        .on('focus' + EVENT_KEY, function (e) {
          var tabindex = that.$element[0].getAttribute('tabindex');

          // only change when button is actually focused
          if (tabindex !== undefined && e.originalEvent && e.originalEvent.isTrusted) {
            // apply select element's tabindex to ensure correct order is followed when tabbing to the next element
            this.setAttribute('tabindex', tabindex);
            // set element's tabindex to -1 to allow for reverse tabbing
            that.$element[0].setAttribute('tabindex', -1);
            that.selectpicker.view.tabindex = tabindex;
          }
        })
        .on('blur' + EVENT_KEY, function (e) {
          // revert everything to original tabindex
          if (that.selectpicker.view.tabindex !== undefined && e.originalEvent && e.originalEvent.isTrusted) {
            that.$element[0].setAttribute('tabindex', that.selectpicker.view.tabindex);
            this.setAttribute('tabindex', -1);
            that.selectpicker.view.tabindex = undefined;
          }
        });

      this.$element
        .on('change' + EVENT_KEY, function () {
          that.render();
          that.$element.trigger('changed' + EVENT_KEY, changedArguments);
          changedArguments = null;
        })
        .on('focus' + EVENT_KEY, function () {
          if (!that.options.mobile) that.$button[0].focus();
        });
    },

    liveSearchListener: function () {
      var that = this;

      this.$button.on('click.bs.dropdown.data-api', function () {
        if (!!that.$searchbox.val()) {
          that.$searchbox.val('');
          that.selectpicker.search.previousValue = undefined;
        }
      });

      this.$searchbox.on('click.bs.dropdown.data-api focus.bs.dropdown.data-api touchend.bs.dropdown.data-api', function (e) {
        e.stopPropagation();
      });

      this.$searchbox.on('input propertychange', function () {
        var searchValue = that.$searchbox[0].value;

        that.selectpicker.search.elements = [];
        that.selectpicker.search.data = [];

        if (searchValue) {
          var i,
              searchMatch = [],
              q = searchValue.toUpperCase(),
              cache = {},
              cacheArr = [],
              searchStyle = that._searchStyle(),
              normalizeSearch = that.options.liveSearchNormalize;

          if (normalizeSearch) q = normalizeToBase(q);

          for (var i = 0; i < that.selectpicker.main.data.length; i++) {
            var li = that.selectpicker.main.data[i];

            if (!cache[i]) {
              cache[i] = stringSearch(li, q, searchStyle, normalizeSearch);
            }

            if (cache[i] && li.headerIndex !== undefined && cacheArr.indexOf(li.headerIndex) === -1) {
              if (li.headerIndex > 0) {
                cache[li.headerIndex - 1] = true;
                cacheArr.push(li.headerIndex - 1);
              }

              cache[li.headerIndex] = true;
              cacheArr.push(li.headerIndex);

              cache[li.lastIndex + 1] = true;
            }

            if (cache[i] && li.type !== 'optgroup-label') cacheArr.push(i);
          }

          for (var i = 0, cacheLen = cacheArr.length; i < cacheLen; i++) {
            var index = cacheArr[i],
                prevIndex = cacheArr[i - 1],
                li = that.selectpicker.main.data[index],
                liPrev = that.selectpicker.main.data[prevIndex];

            if (li.type !== 'divider' || (li.type === 'divider' && liPrev && liPrev.type !== 'divider' && cacheLen - 1 !== i)) {
              that.selectpicker.search.data.push(li);
              searchMatch.push(that.selectpicker.main.elements[index]);
            }
          }

          that.activeIndex = undefined;
          that.noScroll = true;
          that.$menuInner.scrollTop(0);
          that.selectpicker.search.elements = searchMatch;
          that.createView(true);
          showNoResults.call(that, searchMatch, searchValue);
        } else if (that.selectpicker.search.previousValue) { // for IE11 (#2402)
          that.$menuInner.scrollTop(0);
          that.createView(false);
        }

        that.selectpicker.search.previousValue =  searchValue;
      });
    },

    _searchStyle: function () {
      return this.options.liveSearchStyle || 'contains';
    },

    val: function (value) {
      var element = this.$element[0];

      if (typeof value !== 'undefined') {
        var prevValue = getSelectValues(element);

        changedArguments = [null, null, prevValue];

        this.$element
          .val(value)
          .trigger('changed' + EVENT_KEY, changedArguments);

        if (this.$newElement.hasClass(classNames.SHOW)) {
          if (this.multiple) {
            this.setOptionStatus(true);
          } else {
            var liSelectedIndex = (element.options[element.selectedIndex] || {}).liIndex;

            if (typeof liSelectedIndex === 'number') {
              this.setSelected(this.selectedIndex, false);
              this.setSelected(liSelectedIndex, true);
            }
          }
        }

        this.render();

        changedArguments = null;

        return this.$element;
      } else {
        return this.$element.val();
      }
    },

    changeAll: function (status) {
      if (!this.multiple) return;
      if (typeof status === 'undefined') status = true;

      var element = this.$element[0],
          previousSelected = 0,
          currentSelected = 0,
          prevValue = getSelectValues(element);

      element.classList.add('bs-select-hidden');

      for (var i = 0, data = this.selectpicker.current.data, len = data.length; i < len; i++) {
        var liData = data[i],
            option = liData.option;

        if (option && !liData.disabled && liData.type !== 'divider') {
          if (liData.selected) previousSelected++;
          option.selected = status;
          if (status === true) currentSelected++;
        }
      }

      element.classList.remove('bs-select-hidden');

      if (previousSelected === currentSelected) return;

      this.setOptionStatus();

      changedArguments = [null, null, prevValue];

      this.$element
        .triggerNative('change');
    },

    selectAll: function () {
      return this.changeAll(true);
    },

    deselectAll: function () {
      return this.changeAll(false);
    },

    toggle: function (e) {
      e = e || window.event;

      if (e) e.stopPropagation();

      this.$button.trigger('click.bs.dropdown.data-api');
    },

    keydown: function (e) {
      var $this = $(this),
          isToggle = $this.hasClass('dropdown-toggle'),
          $parent = isToggle ? $this.closest('.dropdown') : $this.closest(Selector.MENU),
          that = $parent.data('this'),
          $items = that.findLis(),
          index,
          isActive,
          liActive,
          activeLi,
          offset,
          updateScroll = false,
          downOnTab = e.which === keyCodes.TAB && !isToggle && !that.options.selectOnTab,
          isArrowKey = REGEXP_ARROW.test(e.which) || downOnTab,
          scrollTop = that.$menuInner[0].scrollTop,
          isVirtual = that.isVirtual(),
          position0 = isVirtual === true ? that.selectpicker.view.position0 : 0;

      // do nothing if a function key is pressed
      if (e.which >= 112 && e.which <= 123) return;

      isActive = that.$newElement.hasClass(classNames.SHOW);

      if (
        !isActive &&
        (
          isArrowKey ||
          (e.which >= 48 && e.which <= 57) ||
          (e.which >= 96 && e.which <= 105) ||
          (e.which >= 65 && e.which <= 90)
        )
      ) {
        that.$button.trigger('click.bs.dropdown.data-api');

        if (that.options.liveSearch) {
          that.$searchbox.trigger('focus');
          return;
        }
      }

      if (e.which === keyCodes.ESCAPE && isActive) {
        e.preventDefault();
        that.$button.trigger('click.bs.dropdown.data-api').trigger('focus');
      }

      if (isArrowKey) { // if up or down
        if (!$items.length) return;

        liActive = that.selectpicker.main.elements[that.activeIndex];
        index = liActive ? Array.prototype.indexOf.call(liActive.parentElement.children, liActive) : -1;

        if (index !== -1) {
          that.defocusItem(liActive);
        }

        if (e.which === keyCodes.ARROW_UP) { // up
          if (index !== -1) index--;
          if (index + position0 < 0) index += $items.length;

          if (!that.selectpicker.view.canHighlight[index + position0]) {
            index = that.selectpicker.view.canHighlight.slice(0, index + position0).lastIndexOf(true) - position0;
            if (index === -1) index = $items.length - 1;
          }
        } else if (e.which === keyCodes.ARROW_DOWN || downOnTab) { // down
          index++;
          if (index + position0 >= that.selectpicker.view.canHighlight.length) index = that.selectpicker.view.firstHighlightIndex;

          if (!that.selectpicker.view.canHighlight[index + position0]) {
            index = index + 1 + that.selectpicker.view.canHighlight.slice(index + position0 + 1).indexOf(true);
          }
        }

        e.preventDefault();

        var liActiveIndex = position0 + index;

        if (e.which === keyCodes.ARROW_UP) { // up
          // scroll to bottom and highlight last option
          if (position0 === 0 && index === $items.length - 1) {
            that.$menuInner[0].scrollTop = that.$menuInner[0].scrollHeight;

            liActiveIndex = that.selectpicker.current.elements.length - 1;
          } else {
            activeLi = that.selectpicker.current.data[liActiveIndex];
            offset = activeLi.position - activeLi.height;

            updateScroll = offset < scrollTop;
          }
        } else if (e.which === keyCodes.ARROW_DOWN || downOnTab) { // down
          // scroll to top and highlight first option
          if (index === that.selectpicker.view.firstHighlightIndex) {
            that.$menuInner[0].scrollTop = 0;

            liActiveIndex = that.selectpicker.view.firstHighlightIndex;
          } else {
            activeLi = that.selectpicker.current.data[liActiveIndex];
            offset = activeLi.position - that.sizeInfo.menuInnerHeight;

            updateScroll = offset > scrollTop;
          }
        }

        liActive = that.selectpicker.current.elements[liActiveIndex];

        that.activeIndex = that.selectpicker.current.data[liActiveIndex].index;

        that.focusItem(liActive);

        that.selectpicker.view.currentActive = liActive;

        if (updateScroll) that.$menuInner[0].scrollTop = offset;

        if (that.options.liveSearch) {
          that.$searchbox.trigger('focus');
        } else {
          $this.trigger('focus');
        }
      } else if (
        (!$this.is('input') && !REGEXP_TAB_OR_ESCAPE.test(e.which)) ||
        (e.which === keyCodes.SPACE && that.selectpicker.keydown.keyHistory)
      ) {
        var searchMatch,
            matches = [],
            keyHistory;

        e.preventDefault();

        that.selectpicker.keydown.keyHistory += keyCodeMap[e.which];

        if (that.selectpicker.keydown.resetKeyHistory.cancel) clearTimeout(that.selectpicker.keydown.resetKeyHistory.cancel);
        that.selectpicker.keydown.resetKeyHistory.cancel = that.selectpicker.keydown.resetKeyHistory.start();

        keyHistory = that.selectpicker.keydown.keyHistory;

        // if all letters are the same, set keyHistory to just the first character when searching
        if (/^(.)\1+$/.test(keyHistory)) {
          keyHistory = keyHistory.charAt(0);
        }

        // find matches
        for (var i = 0; i < that.selectpicker.current.data.length; i++) {
          var li = that.selectpicker.current.data[i],
              hasMatch;

          hasMatch = stringSearch(li, keyHistory, 'startsWith', true);

          if (hasMatch && that.selectpicker.view.canHighlight[i]) {
            matches.push(li.index);
          }
        }

        if (matches.length) {
          var matchIndex = 0;

          $items.removeClass('active').find('a').removeClass('active');

          // either only one key has been pressed or they are all the same key
          if (keyHistory.length === 1) {
            matchIndex = matches.indexOf(that.activeIndex);

            if (matchIndex === -1 || matchIndex === matches.length - 1) {
              matchIndex = 0;
            } else {
              matchIndex++;
            }
          }

          searchMatch = matches[matchIndex];

          activeLi = that.selectpicker.main.data[searchMatch];

          if (scrollTop - activeLi.position > 0) {
            offset = activeLi.position - activeLi.height;
            updateScroll = true;
          } else {
            offset = activeLi.position - that.sizeInfo.menuInnerHeight;
            // if the option is already visible at the current scroll position, just keep it the same
            updateScroll = activeLi.position > scrollTop + that.sizeInfo.menuInnerHeight;
          }

          liActive = that.selectpicker.main.elements[searchMatch];

          that.activeIndex = matches[matchIndex];

          that.focusItem(liActive);

          if (liActive) liActive.firstChild.focus();

          if (updateScroll) that.$menuInner[0].scrollTop = offset;

          $this.trigger('focus');
        }
      }

      // Select focused option if "Enter", "Spacebar" or "Tab" (when selectOnTab is true) are pressed inside the menu.
      if (
        isActive &&
        (
          (e.which === keyCodes.SPACE && !that.selectpicker.keydown.keyHistory) ||
          e.which === keyCodes.ENTER ||
          (e.which === keyCodes.TAB && that.options.selectOnTab)
        )
      ) {
        if (e.which !== keyCodes.SPACE) e.preventDefault();

        if (!that.options.liveSearch || e.which !== keyCodes.SPACE) {
          that.$menuInner.find('.active a').trigger('click', true); // retain active class
          $this.trigger('focus');

          if (!that.options.liveSearch) {
            // Prevent screen from scrolling if the user hits the spacebar
            e.preventDefault();
            // Fixes spacebar selection of dropdown items in FF & IE
            $(document).data('spaceSelect', true);
          }
        }
      }
    },

    mobile: function () {
      // ensure mobile is set to true if mobile function is called after init
      this.options.mobile = true;
      this.$element[0].classList.add('mobile-device');
    },

    refresh: function () {
      // update options if data attributes have been changed
      var config = $.extend({}, this.options, this.$element.data());
      this.options = config;

      this.checkDisabled();
      this.buildData();
      this.setStyle();
      this.render();
      this.buildList();
      this.setWidth();

      this.setSize(true);

      this.$element.trigger('refreshed' + EVENT_KEY);
    },

    hide: function () {
      this.$newElement.hide();
    },

    show: function () {
      this.$newElement.show();
    },

    remove: function () {
      this.$newElement.remove();
      this.$element.remove();
    },

    destroy: function () {
      this.$newElement.before(this.$element).remove();

      if (this.$bsContainer) {
        this.$bsContainer.remove();
      } else {
        this.$menu.remove();
      }

      if (this.selectpicker.view.titleOption && this.selectpicker.view.titleOption.parentNode) {
        this.selectpicker.view.titleOption.parentNode.removeChild(this.selectpicker.view.titleOption);
      }

      this.$element
        .off(EVENT_KEY)
        .removeData('selectpicker')
        .removeClass('bs-select-hidden selectpicker');

      $(window).off(EVENT_KEY + '.' + this.selectId);
    }
  };

  // SELECTPICKER PLUGIN DEFINITION
  // ==============================
  function Plugin (option) {
    // get the args of the outer function..
    var args = arguments;
    // The arguments of the function are explicitly re-defined from the argument list, because the shift causes them
    // to get lost/corrupted in android 2.3 and IE9 #715 #775
    var _option = option;

    [].shift.apply(args);

    // if the version was not set successfully
    if (!version.success) {
      // try to retreive it again
      try {
        version.full = ($.fn.dropdown.Constructor.VERSION || '').split(' ')[0].split('.');
      } catch (err) {
        // fall back to use BootstrapVersion if set
        if (Selectpicker.BootstrapVersion) {
          version.full = Selectpicker.BootstrapVersion.split(' ')[0].split('.');
        } else {
          version.full = [version.major, '0', '0'];

          console.warn(
            'There was an issue retrieving Bootstrap\'s version. ' +
            'Ensure Bootstrap is being loaded before bootstrap-select and there is no namespace collision. ' +
            'If loading Bootstrap asynchronously, the version may need to be manually specified via $.fn.selectpicker.Constructor.BootstrapVersion.',
            err
          );
        }
      }

      version.major = version.full[0];
      version.success = true;
    }

    if (version.major === '4') {
      // some defaults need to be changed if using Bootstrap 4
      // check to see if they have already been manually changed before forcing them to update
      var toUpdate = [];

      if (Selectpicker.DEFAULTS.style === classNames.BUTTONCLASS) toUpdate.push({ name: 'style', className: 'BUTTONCLASS' });
      if (Selectpicker.DEFAULTS.iconBase === classNames.ICONBASE) toUpdate.push({ name: 'iconBase', className: 'ICONBASE' });
      if (Selectpicker.DEFAULTS.tickIcon === classNames.TICKICON) toUpdate.push({ name: 'tickIcon', className: 'TICKICON' });

      classNames.DIVIDER = 'dropdown-divider';
      classNames.SHOW = 'show';
      classNames.BUTTONCLASS = 'btn-light';
      classNames.POPOVERHEADER = 'popover-header';
      classNames.ICONBASE = '';
      classNames.TICKICON = 'bs-ok-default';

      for (var i = 0; i < toUpdate.length; i++) {
        var option = toUpdate[i];
        Selectpicker.DEFAULTS[option.name] = classNames[option.className];
      }
    }

    var value;
    var chain = this.each(function () {
      var $this = $(this);
      if ($this.is('select')) {
        var data = $this.data('selectpicker'),
            options = typeof _option == 'object' && _option;

        if (!data) {
          var dataAttributes = $this.data();

          for (var dataAttr in dataAttributes) {
            if (Object.prototype.hasOwnProperty.call(dataAttributes, dataAttr) && $.inArray(dataAttr, DISALLOWED_ATTRIBUTES) !== -1) {
              delete dataAttributes[dataAttr];
            }
          }

          var config = $.extend({}, Selectpicker.DEFAULTS, $.fn.selectpicker.defaults || {}, dataAttributes, options);
          config.template = $.extend({}, Selectpicker.DEFAULTS.template, ($.fn.selectpicker.defaults ? $.fn.selectpicker.defaults.template : {}), dataAttributes.template, options.template);
          $this.data('selectpicker', (data = new Selectpicker(this, config)));
        } else if (options) {
          for (var i in options) {
            if (Object.prototype.hasOwnProperty.call(options, i)) {
              data.options[i] = options[i];
            }
          }
        }

        if (typeof _option == 'string') {
          if (data[_option] instanceof Function) {
            value = data[_option].apply(data, args);
          } else {
            value = data.options[_option];
          }
        }
      }
    });

    if (typeof value !== 'undefined') {
      // noinspection JSUnusedAssignment
      return value;
    } else {
      return chain;
    }
  }

  var old = $.fn.selectpicker;
  $.fn.selectpicker = Plugin;
  $.fn.selectpicker.Constructor = Selectpicker;

  // SELECTPICKER NO CONFLICT
  // ========================
  $.fn.selectpicker.noConflict = function () {
    $.fn.selectpicker = old;
    return this;
  };

  // get Bootstrap's keydown event handler for either Bootstrap 4 or Bootstrap 3
  function keydownHandler () {
    if ($.fn.dropdown) {
      // wait to define until function is called in case Bootstrap isn't loaded yet
      var bootstrapKeydown = $.fn.dropdown.Constructor._dataApiKeydownHandler || $.fn.dropdown.Constructor.prototype.keydown;
      return bootstrapKeydown.apply(this, arguments);
    }
  }

  $(document)
    .off('keydown.bs.dropdown.data-api')
    .on('keydown.bs.dropdown.data-api', ':not(.bootstrap-select) > [data-toggle="dropdown"]', keydownHandler)
    .on('keydown.bs.dropdown.data-api', ':not(.bootstrap-select) > .dropdown-menu', keydownHandler)
    .on('keydown' + EVENT_KEY, '.bootstrap-select [data-toggle="dropdown"], .bootstrap-select [role="listbox"], .bootstrap-select .bs-searchbox input', Selectpicker.prototype.keydown)
    .on('focusin.modal', '.bootstrap-select [data-toggle="dropdown"], .bootstrap-select [role="listbox"], .bootstrap-select .bs-searchbox input', function (e) {
      e.stopPropagation();
    });

  // SELECTPICKER DATA-API
  // =====================
  $(window).on('load' + EVENT_KEY + '.data-api', function () {
    $('.selectpicker').each(function () {
      var $selectpicker = $(this);
      Plugin.call($selectpicker, $selectpicker.data());
    })
  });
})(jQuery);


}));
//# sourceMappingURL=bootstrap-select.js.map

/***/ }),

/***/ "./node_modules/bootstrap/dist/js/bootstrap.js":
/*!*****************************************************!*\
  !*** ./node_modules/bootstrap/dist/js/bootstrap.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*!
  * Bootstrap v4.5.2 (https://getbootstrap.com/)
  * Copyright 2011-2020 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
  */
(function (global, factory) {
   true ? factory(exports, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js"), __webpack_require__(/*! popper.js */ "./node_modules/popper.js/dist/esm/popper.js")) :
  undefined;
}(this, (function (exports, $, Popper) { 'use strict';

  $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;
  Popper = Popper && Object.prototype.hasOwnProperty.call(Popper, 'default') ? Popper['default'] : Popper;

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  function _extends() {
    _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }

  /**
   * --------------------------------------------------------------------------
   * Bootstrap (v4.5.2): util.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */
  /**
   * ------------------------------------------------------------------------
   * Private TransitionEnd Helpers
   * ------------------------------------------------------------------------
   */

  var TRANSITION_END = 'transitionend';
  var MAX_UID = 1000000;
  var MILLISECONDS_MULTIPLIER = 1000; // Shoutout AngusCroll (https://goo.gl/pxwQGp)

  function toType(obj) {
    if (obj === null || typeof obj === 'undefined') {
      return "" + obj;
    }

    return {}.toString.call(obj).match(/\s([a-z]+)/i)[1].toLowerCase();
  }

  function getSpecialTransitionEndEvent() {
    return {
      bindType: TRANSITION_END,
      delegateType: TRANSITION_END,
      handle: function handle(event) {
        if ($(event.target).is(this)) {
          return event.handleObj.handler.apply(this, arguments); // eslint-disable-line prefer-rest-params
        }

        return undefined;
      }
    };
  }

  function transitionEndEmulator(duration) {
    var _this = this;

    var called = false;
    $(this).one(Util.TRANSITION_END, function () {
      called = true;
    });
    setTimeout(function () {
      if (!called) {
        Util.triggerTransitionEnd(_this);
      }
    }, duration);
    return this;
  }

  function setTransitionEndSupport() {
    $.fn.emulateTransitionEnd = transitionEndEmulator;
    $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();
  }
  /**
   * --------------------------------------------------------------------------
   * Public Util Api
   * --------------------------------------------------------------------------
   */


  var Util = {
    TRANSITION_END: 'bsTransitionEnd',
    getUID: function getUID(prefix) {
      do {
        // eslint-disable-next-line no-bitwise
        prefix += ~~(Math.random() * MAX_UID); // "~~" acts like a faster Math.floor() here
      } while (document.getElementById(prefix));

      return prefix;
    },
    getSelectorFromElement: function getSelectorFromElement(element) {
      var selector = element.getAttribute('data-target');

      if (!selector || selector === '#') {
        var hrefAttr = element.getAttribute('href');
        selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : '';
      }

      try {
        return document.querySelector(selector) ? selector : null;
      } catch (err) {
        return null;
      }
    },
    getTransitionDurationFromElement: function getTransitionDurationFromElement(element) {
      if (!element) {
        return 0;
      } // Get transition-duration of the element


      var transitionDuration = $(element).css('transition-duration');
      var transitionDelay = $(element).css('transition-delay');
      var floatTransitionDuration = parseFloat(transitionDuration);
      var floatTransitionDelay = parseFloat(transitionDelay); // Return 0 if element or transition duration is not found

      if (!floatTransitionDuration && !floatTransitionDelay) {
        return 0;
      } // If multiple durations are defined, take the first


      transitionDuration = transitionDuration.split(',')[0];
      transitionDelay = transitionDelay.split(',')[0];
      return (parseFloat(transitionDuration) + parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER;
    },
    reflow: function reflow(element) {
      return element.offsetHeight;
    },
    triggerTransitionEnd: function triggerTransitionEnd(element) {
      $(element).trigger(TRANSITION_END);
    },
    // TODO: Remove in v5
    supportsTransitionEnd: function supportsTransitionEnd() {
      return Boolean(TRANSITION_END);
    },
    isElement: function isElement(obj) {
      return (obj[0] || obj).nodeType;
    },
    typeCheckConfig: function typeCheckConfig(componentName, config, configTypes) {
      for (var property in configTypes) {
        if (Object.prototype.hasOwnProperty.call(configTypes, property)) {
          var expectedTypes = configTypes[property];
          var value = config[property];
          var valueType = value && Util.isElement(value) ? 'element' : toType(value);

          if (!new RegExp(expectedTypes).test(valueType)) {
            throw new Error(componentName.toUpperCase() + ": " + ("Option \"" + property + "\" provided type \"" + valueType + "\" ") + ("but expected type \"" + expectedTypes + "\"."));
          }
        }
      }
    },
    findShadowRoot: function findShadowRoot(element) {
      if (!document.documentElement.attachShadow) {
        return null;
      } // Can find the shadow root otherwise it'll return the document


      if (typeof element.getRootNode === 'function') {
        var root = element.getRootNode();
        return root instanceof ShadowRoot ? root : null;
      }

      if (element instanceof ShadowRoot) {
        return element;
      } // when we don't find a shadow root


      if (!element.parentNode) {
        return null;
      }

      return Util.findShadowRoot(element.parentNode);
    },
    jQueryDetection: function jQueryDetection() {
      if (typeof $ === 'undefined') {
        throw new TypeError('Bootstrap\'s JavaScript requires jQuery. jQuery must be included before Bootstrap\'s JavaScript.');
      }

      var version = $.fn.jquery.split(' ')[0].split('.');
      var minMajor = 1;
      var ltMajor = 2;
      var minMinor = 9;
      var minPatch = 1;
      var maxMajor = 4;

      if (version[0] < ltMajor && version[1] < minMinor || version[0] === minMajor && version[1] === minMinor && version[2] < minPatch || version[0] >= maxMajor) {
        throw new Error('Bootstrap\'s JavaScript requires at least jQuery v1.9.1 but less than v4.0.0');
      }
    }
  };
  Util.jQueryDetection();
  setTransitionEndSupport();

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME = 'alert';
  var VERSION = '4.5.2';
  var DATA_KEY = 'bs.alert';
  var EVENT_KEY = "." + DATA_KEY;
  var DATA_API_KEY = '.data-api';
  var JQUERY_NO_CONFLICT = $.fn[NAME];
  var SELECTOR_DISMISS = '[data-dismiss="alert"]';
  var EVENT_CLOSE = "close" + EVENT_KEY;
  var EVENT_CLOSED = "closed" + EVENT_KEY;
  var EVENT_CLICK_DATA_API = "click" + EVENT_KEY + DATA_API_KEY;
  var CLASS_NAME_ALERT = 'alert';
  var CLASS_NAME_FADE = 'fade';
  var CLASS_NAME_SHOW = 'show';
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Alert = /*#__PURE__*/function () {
    function Alert(element) {
      this._element = element;
    } // Getters


    var _proto = Alert.prototype;

    // Public
    _proto.close = function close(element) {
      var rootElement = this._element;

      if (element) {
        rootElement = this._getRootElement(element);
      }

      var customEvent = this._triggerCloseEvent(rootElement);

      if (customEvent.isDefaultPrevented()) {
        return;
      }

      this._removeElement(rootElement);
    };

    _proto.dispose = function dispose() {
      $.removeData(this._element, DATA_KEY);
      this._element = null;
    } // Private
    ;

    _proto._getRootElement = function _getRootElement(element) {
      var selector = Util.getSelectorFromElement(element);
      var parent = false;

      if (selector) {
        parent = document.querySelector(selector);
      }

      if (!parent) {
        parent = $(element).closest("." + CLASS_NAME_ALERT)[0];
      }

      return parent;
    };

    _proto._triggerCloseEvent = function _triggerCloseEvent(element) {
      var closeEvent = $.Event(EVENT_CLOSE);
      $(element).trigger(closeEvent);
      return closeEvent;
    };

    _proto._removeElement = function _removeElement(element) {
      var _this = this;

      $(element).removeClass(CLASS_NAME_SHOW);

      if (!$(element).hasClass(CLASS_NAME_FADE)) {
        this._destroyElement(element);

        return;
      }

      var transitionDuration = Util.getTransitionDurationFromElement(element);
      $(element).one(Util.TRANSITION_END, function (event) {
        return _this._destroyElement(element, event);
      }).emulateTransitionEnd(transitionDuration);
    };

    _proto._destroyElement = function _destroyElement(element) {
      $(element).detach().trigger(EVENT_CLOSED).remove();
    } // Static
    ;

    Alert._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var $element = $(this);
        var data = $element.data(DATA_KEY);

        if (!data) {
          data = new Alert(this);
          $element.data(DATA_KEY, data);
        }

        if (config === 'close') {
          data[config](this);
        }
      });
    };

    Alert._handleDismiss = function _handleDismiss(alertInstance) {
      return function (event) {
        if (event) {
          event.preventDefault();
        }

        alertInstance.close(this);
      };
    };

    _createClass(Alert, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION;
      }
    }]);

    return Alert;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $(document).on(EVENT_CLICK_DATA_API, SELECTOR_DISMISS, Alert._handleDismiss(new Alert()));
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME] = Alert._jQueryInterface;
  $.fn[NAME].Constructor = Alert;

  $.fn[NAME].noConflict = function () {
    $.fn[NAME] = JQUERY_NO_CONFLICT;
    return Alert._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$1 = 'button';
  var VERSION$1 = '4.5.2';
  var DATA_KEY$1 = 'bs.button';
  var EVENT_KEY$1 = "." + DATA_KEY$1;
  var DATA_API_KEY$1 = '.data-api';
  var JQUERY_NO_CONFLICT$1 = $.fn[NAME$1];
  var CLASS_NAME_ACTIVE = 'active';
  var CLASS_NAME_BUTTON = 'btn';
  var CLASS_NAME_FOCUS = 'focus';
  var SELECTOR_DATA_TOGGLE_CARROT = '[data-toggle^="button"]';
  var SELECTOR_DATA_TOGGLES = '[data-toggle="buttons"]';
  var SELECTOR_DATA_TOGGLE = '[data-toggle="button"]';
  var SELECTOR_DATA_TOGGLES_BUTTONS = '[data-toggle="buttons"] .btn';
  var SELECTOR_INPUT = 'input:not([type="hidden"])';
  var SELECTOR_ACTIVE = '.active';
  var SELECTOR_BUTTON = '.btn';
  var EVENT_CLICK_DATA_API$1 = "click" + EVENT_KEY$1 + DATA_API_KEY$1;
  var EVENT_FOCUS_BLUR_DATA_API = "focus" + EVENT_KEY$1 + DATA_API_KEY$1 + " " + ("blur" + EVENT_KEY$1 + DATA_API_KEY$1);
  var EVENT_LOAD_DATA_API = "load" + EVENT_KEY$1 + DATA_API_KEY$1;
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Button = /*#__PURE__*/function () {
    function Button(element) {
      this._element = element;
    } // Getters


    var _proto = Button.prototype;

    // Public
    _proto.toggle = function toggle() {
      var triggerChangeEvent = true;
      var addAriaPressed = true;
      var rootElement = $(this._element).closest(SELECTOR_DATA_TOGGLES)[0];

      if (rootElement) {
        var input = this._element.querySelector(SELECTOR_INPUT);

        if (input) {
          if (input.type === 'radio') {
            if (input.checked && this._element.classList.contains(CLASS_NAME_ACTIVE)) {
              triggerChangeEvent = false;
            } else {
              var activeElement = rootElement.querySelector(SELECTOR_ACTIVE);

              if (activeElement) {
                $(activeElement).removeClass(CLASS_NAME_ACTIVE);
              }
            }
          }

          if (triggerChangeEvent) {
            // if it's not a radio button or checkbox don't add a pointless/invalid checked property to the input
            if (input.type === 'checkbox' || input.type === 'radio') {
              input.checked = !this._element.classList.contains(CLASS_NAME_ACTIVE);
            }

            $(input).trigger('change');
          }

          input.focus();
          addAriaPressed = false;
        }
      }

      if (!(this._element.hasAttribute('disabled') || this._element.classList.contains('disabled'))) {
        if (addAriaPressed) {
          this._element.setAttribute('aria-pressed', !this._element.classList.contains(CLASS_NAME_ACTIVE));
        }

        if (triggerChangeEvent) {
          $(this._element).toggleClass(CLASS_NAME_ACTIVE);
        }
      }
    };

    _proto.dispose = function dispose() {
      $.removeData(this._element, DATA_KEY$1);
      this._element = null;
    } // Static
    ;

    Button._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $(this).data(DATA_KEY$1);

        if (!data) {
          data = new Button(this);
          $(this).data(DATA_KEY$1, data);
        }

        if (config === 'toggle') {
          data[config]();
        }
      });
    };

    _createClass(Button, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$1;
      }
    }]);

    return Button;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $(document).on(EVENT_CLICK_DATA_API$1, SELECTOR_DATA_TOGGLE_CARROT, function (event) {
    var button = event.target;
    var initialButton = button;

    if (!$(button).hasClass(CLASS_NAME_BUTTON)) {
      button = $(button).closest(SELECTOR_BUTTON)[0];
    }

    if (!button || button.hasAttribute('disabled') || button.classList.contains('disabled')) {
      event.preventDefault(); // work around Firefox bug #1540995
    } else {
      var inputBtn = button.querySelector(SELECTOR_INPUT);

      if (inputBtn && (inputBtn.hasAttribute('disabled') || inputBtn.classList.contains('disabled'))) {
        event.preventDefault(); // work around Firefox bug #1540995

        return;
      }

      if (initialButton.tagName !== 'LABEL' || inputBtn && inputBtn.type !== 'checkbox') {
        Button._jQueryInterface.call($(button), 'toggle');
      }
    }
  }).on(EVENT_FOCUS_BLUR_DATA_API, SELECTOR_DATA_TOGGLE_CARROT, function (event) {
    var button = $(event.target).closest(SELECTOR_BUTTON)[0];
    $(button).toggleClass(CLASS_NAME_FOCUS, /^focus(in)?$/.test(event.type));
  });
  $(window).on(EVENT_LOAD_DATA_API, function () {
    // ensure correct active class is set to match the controls' actual values/states
    // find all checkboxes/readio buttons inside data-toggle groups
    var buttons = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLES_BUTTONS));

    for (var i = 0, len = buttons.length; i < len; i++) {
      var button = buttons[i];
      var input = button.querySelector(SELECTOR_INPUT);

      if (input.checked || input.hasAttribute('checked')) {
        button.classList.add(CLASS_NAME_ACTIVE);
      } else {
        button.classList.remove(CLASS_NAME_ACTIVE);
      }
    } // find all button toggles


    buttons = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLE));

    for (var _i = 0, _len = buttons.length; _i < _len; _i++) {
      var _button = buttons[_i];

      if (_button.getAttribute('aria-pressed') === 'true') {
        _button.classList.add(CLASS_NAME_ACTIVE);
      } else {
        _button.classList.remove(CLASS_NAME_ACTIVE);
      }
    }
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME$1] = Button._jQueryInterface;
  $.fn[NAME$1].Constructor = Button;

  $.fn[NAME$1].noConflict = function () {
    $.fn[NAME$1] = JQUERY_NO_CONFLICT$1;
    return Button._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$2 = 'carousel';
  var VERSION$2 = '4.5.2';
  var DATA_KEY$2 = 'bs.carousel';
  var EVENT_KEY$2 = "." + DATA_KEY$2;
  var DATA_API_KEY$2 = '.data-api';
  var JQUERY_NO_CONFLICT$2 = $.fn[NAME$2];
  var ARROW_LEFT_KEYCODE = 37; // KeyboardEvent.which value for left arrow key

  var ARROW_RIGHT_KEYCODE = 39; // KeyboardEvent.which value for right arrow key

  var TOUCHEVENT_COMPAT_WAIT = 500; // Time for mouse compat events to fire after touch

  var SWIPE_THRESHOLD = 40;
  var Default = {
    interval: 5000,
    keyboard: true,
    slide: false,
    pause: 'hover',
    wrap: true,
    touch: true
  };
  var DefaultType = {
    interval: '(number|boolean)',
    keyboard: 'boolean',
    slide: '(boolean|string)',
    pause: '(string|boolean)',
    wrap: 'boolean',
    touch: 'boolean'
  };
  var DIRECTION_NEXT = 'next';
  var DIRECTION_PREV = 'prev';
  var DIRECTION_LEFT = 'left';
  var DIRECTION_RIGHT = 'right';
  var EVENT_SLIDE = "slide" + EVENT_KEY$2;
  var EVENT_SLID = "slid" + EVENT_KEY$2;
  var EVENT_KEYDOWN = "keydown" + EVENT_KEY$2;
  var EVENT_MOUSEENTER = "mouseenter" + EVENT_KEY$2;
  var EVENT_MOUSELEAVE = "mouseleave" + EVENT_KEY$2;
  var EVENT_TOUCHSTART = "touchstart" + EVENT_KEY$2;
  var EVENT_TOUCHMOVE = "touchmove" + EVENT_KEY$2;
  var EVENT_TOUCHEND = "touchend" + EVENT_KEY$2;
  var EVENT_POINTERDOWN = "pointerdown" + EVENT_KEY$2;
  var EVENT_POINTERUP = "pointerup" + EVENT_KEY$2;
  var EVENT_DRAG_START = "dragstart" + EVENT_KEY$2;
  var EVENT_LOAD_DATA_API$1 = "load" + EVENT_KEY$2 + DATA_API_KEY$2;
  var EVENT_CLICK_DATA_API$2 = "click" + EVENT_KEY$2 + DATA_API_KEY$2;
  var CLASS_NAME_CAROUSEL = 'carousel';
  var CLASS_NAME_ACTIVE$1 = 'active';
  var CLASS_NAME_SLIDE = 'slide';
  var CLASS_NAME_RIGHT = 'carousel-item-right';
  var CLASS_NAME_LEFT = 'carousel-item-left';
  var CLASS_NAME_NEXT = 'carousel-item-next';
  var CLASS_NAME_PREV = 'carousel-item-prev';
  var CLASS_NAME_POINTER_EVENT = 'pointer-event';
  var SELECTOR_ACTIVE$1 = '.active';
  var SELECTOR_ACTIVE_ITEM = '.active.carousel-item';
  var SELECTOR_ITEM = '.carousel-item';
  var SELECTOR_ITEM_IMG = '.carousel-item img';
  var SELECTOR_NEXT_PREV = '.carousel-item-next, .carousel-item-prev';
  var SELECTOR_INDICATORS = '.carousel-indicators';
  var SELECTOR_DATA_SLIDE = '[data-slide], [data-slide-to]';
  var SELECTOR_DATA_RIDE = '[data-ride="carousel"]';
  var PointerType = {
    TOUCH: 'touch',
    PEN: 'pen'
  };
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Carousel = /*#__PURE__*/function () {
    function Carousel(element, config) {
      this._items = null;
      this._interval = null;
      this._activeElement = null;
      this._isPaused = false;
      this._isSliding = false;
      this.touchTimeout = null;
      this.touchStartX = 0;
      this.touchDeltaX = 0;
      this._config = this._getConfig(config);
      this._element = element;
      this._indicatorsElement = this._element.querySelector(SELECTOR_INDICATORS);
      this._touchSupported = 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0;
      this._pointerEvent = Boolean(window.PointerEvent || window.MSPointerEvent);

      this._addEventListeners();
    } // Getters


    var _proto = Carousel.prototype;

    // Public
    _proto.next = function next() {
      if (!this._isSliding) {
        this._slide(DIRECTION_NEXT);
      }
    };

    _proto.nextWhenVisible = function nextWhenVisible() {
      // Don't call next when the page isn't visible
      // or the carousel or its parent isn't visible
      if (!document.hidden && $(this._element).is(':visible') && $(this._element).css('visibility') !== 'hidden') {
        this.next();
      }
    };

    _proto.prev = function prev() {
      if (!this._isSliding) {
        this._slide(DIRECTION_PREV);
      }
    };

    _proto.pause = function pause(event) {
      if (!event) {
        this._isPaused = true;
      }

      if (this._element.querySelector(SELECTOR_NEXT_PREV)) {
        Util.triggerTransitionEnd(this._element);
        this.cycle(true);
      }

      clearInterval(this._interval);
      this._interval = null;
    };

    _proto.cycle = function cycle(event) {
      if (!event) {
        this._isPaused = false;
      }

      if (this._interval) {
        clearInterval(this._interval);
        this._interval = null;
      }

      if (this._config.interval && !this._isPaused) {
        this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval);
      }
    };

    _proto.to = function to(index) {
      var _this = this;

      this._activeElement = this._element.querySelector(SELECTOR_ACTIVE_ITEM);

      var activeIndex = this._getItemIndex(this._activeElement);

      if (index > this._items.length - 1 || index < 0) {
        return;
      }

      if (this._isSliding) {
        $(this._element).one(EVENT_SLID, function () {
          return _this.to(index);
        });
        return;
      }

      if (activeIndex === index) {
        this.pause();
        this.cycle();
        return;
      }

      var direction = index > activeIndex ? DIRECTION_NEXT : DIRECTION_PREV;

      this._slide(direction, this._items[index]);
    };

    _proto.dispose = function dispose() {
      $(this._element).off(EVENT_KEY$2);
      $.removeData(this._element, DATA_KEY$2);
      this._items = null;
      this._config = null;
      this._element = null;
      this._interval = null;
      this._isPaused = null;
      this._isSliding = null;
      this._activeElement = null;
      this._indicatorsElement = null;
    } // Private
    ;

    _proto._getConfig = function _getConfig(config) {
      config = _extends({}, Default, config);
      Util.typeCheckConfig(NAME$2, config, DefaultType);
      return config;
    };

    _proto._handleSwipe = function _handleSwipe() {
      var absDeltax = Math.abs(this.touchDeltaX);

      if (absDeltax <= SWIPE_THRESHOLD) {
        return;
      }

      var direction = absDeltax / this.touchDeltaX;
      this.touchDeltaX = 0; // swipe left

      if (direction > 0) {
        this.prev();
      } // swipe right


      if (direction < 0) {
        this.next();
      }
    };

    _proto._addEventListeners = function _addEventListeners() {
      var _this2 = this;

      if (this._config.keyboard) {
        $(this._element).on(EVENT_KEYDOWN, function (event) {
          return _this2._keydown(event);
        });
      }

      if (this._config.pause === 'hover') {
        $(this._element).on(EVENT_MOUSEENTER, function (event) {
          return _this2.pause(event);
        }).on(EVENT_MOUSELEAVE, function (event) {
          return _this2.cycle(event);
        });
      }

      if (this._config.touch) {
        this._addTouchEventListeners();
      }
    };

    _proto._addTouchEventListeners = function _addTouchEventListeners() {
      var _this3 = this;

      if (!this._touchSupported) {
        return;
      }

      var start = function start(event) {
        if (_this3._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {
          _this3.touchStartX = event.originalEvent.clientX;
        } else if (!_this3._pointerEvent) {
          _this3.touchStartX = event.originalEvent.touches[0].clientX;
        }
      };

      var move = function move(event) {
        // ensure swiping with one touch and not pinching
        if (event.originalEvent.touches && event.originalEvent.touches.length > 1) {
          _this3.touchDeltaX = 0;
        } else {
          _this3.touchDeltaX = event.originalEvent.touches[0].clientX - _this3.touchStartX;
        }
      };

      var end = function end(event) {
        if (_this3._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {
          _this3.touchDeltaX = event.originalEvent.clientX - _this3.touchStartX;
        }

        _this3._handleSwipe();

        if (_this3._config.pause === 'hover') {
          // If it's a touch-enabled device, mouseenter/leave are fired as
          // part of the mouse compatibility events on first tap - the carousel
          // would stop cycling until user tapped out of it;
          // here, we listen for touchend, explicitly pause the carousel
          // (as if it's the second time we tap on it, mouseenter compat event
          // is NOT fired) and after a timeout (to allow for mouse compatibility
          // events to fire) we explicitly restart cycling
          _this3.pause();

          if (_this3.touchTimeout) {
            clearTimeout(_this3.touchTimeout);
          }

          _this3.touchTimeout = setTimeout(function (event) {
            return _this3.cycle(event);
          }, TOUCHEVENT_COMPAT_WAIT + _this3._config.interval);
        }
      };

      $(this._element.querySelectorAll(SELECTOR_ITEM_IMG)).on(EVENT_DRAG_START, function (e) {
        return e.preventDefault();
      });

      if (this._pointerEvent) {
        $(this._element).on(EVENT_POINTERDOWN, function (event) {
          return start(event);
        });
        $(this._element).on(EVENT_POINTERUP, function (event) {
          return end(event);
        });

        this._element.classList.add(CLASS_NAME_POINTER_EVENT);
      } else {
        $(this._element).on(EVENT_TOUCHSTART, function (event) {
          return start(event);
        });
        $(this._element).on(EVENT_TOUCHMOVE, function (event) {
          return move(event);
        });
        $(this._element).on(EVENT_TOUCHEND, function (event) {
          return end(event);
        });
      }
    };

    _proto._keydown = function _keydown(event) {
      if (/input|textarea/i.test(event.target.tagName)) {
        return;
      }

      switch (event.which) {
        case ARROW_LEFT_KEYCODE:
          event.preventDefault();
          this.prev();
          break;

        case ARROW_RIGHT_KEYCODE:
          event.preventDefault();
          this.next();
          break;
      }
    };

    _proto._getItemIndex = function _getItemIndex(element) {
      this._items = element && element.parentNode ? [].slice.call(element.parentNode.querySelectorAll(SELECTOR_ITEM)) : [];
      return this._items.indexOf(element);
    };

    _proto._getItemByDirection = function _getItemByDirection(direction, activeElement) {
      var isNextDirection = direction === DIRECTION_NEXT;
      var isPrevDirection = direction === DIRECTION_PREV;

      var activeIndex = this._getItemIndex(activeElement);

      var lastItemIndex = this._items.length - 1;
      var isGoingToWrap = isPrevDirection && activeIndex === 0 || isNextDirection && activeIndex === lastItemIndex;

      if (isGoingToWrap && !this._config.wrap) {
        return activeElement;
      }

      var delta = direction === DIRECTION_PREV ? -1 : 1;
      var itemIndex = (activeIndex + delta) % this._items.length;
      return itemIndex === -1 ? this._items[this._items.length - 1] : this._items[itemIndex];
    };

    _proto._triggerSlideEvent = function _triggerSlideEvent(relatedTarget, eventDirectionName) {
      var targetIndex = this._getItemIndex(relatedTarget);

      var fromIndex = this._getItemIndex(this._element.querySelector(SELECTOR_ACTIVE_ITEM));

      var slideEvent = $.Event(EVENT_SLIDE, {
        relatedTarget: relatedTarget,
        direction: eventDirectionName,
        from: fromIndex,
        to: targetIndex
      });
      $(this._element).trigger(slideEvent);
      return slideEvent;
    };

    _proto._setActiveIndicatorElement = function _setActiveIndicatorElement(element) {
      if (this._indicatorsElement) {
        var indicators = [].slice.call(this._indicatorsElement.querySelectorAll(SELECTOR_ACTIVE$1));
        $(indicators).removeClass(CLASS_NAME_ACTIVE$1);

        var nextIndicator = this._indicatorsElement.children[this._getItemIndex(element)];

        if (nextIndicator) {
          $(nextIndicator).addClass(CLASS_NAME_ACTIVE$1);
        }
      }
    };

    _proto._slide = function _slide(direction, element) {
      var _this4 = this;

      var activeElement = this._element.querySelector(SELECTOR_ACTIVE_ITEM);

      var activeElementIndex = this._getItemIndex(activeElement);

      var nextElement = element || activeElement && this._getItemByDirection(direction, activeElement);

      var nextElementIndex = this._getItemIndex(nextElement);

      var isCycling = Boolean(this._interval);
      var directionalClassName;
      var orderClassName;
      var eventDirectionName;

      if (direction === DIRECTION_NEXT) {
        directionalClassName = CLASS_NAME_LEFT;
        orderClassName = CLASS_NAME_NEXT;
        eventDirectionName = DIRECTION_LEFT;
      } else {
        directionalClassName = CLASS_NAME_RIGHT;
        orderClassName = CLASS_NAME_PREV;
        eventDirectionName = DIRECTION_RIGHT;
      }

      if (nextElement && $(nextElement).hasClass(CLASS_NAME_ACTIVE$1)) {
        this._isSliding = false;
        return;
      }

      var slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName);

      if (slideEvent.isDefaultPrevented()) {
        return;
      }

      if (!activeElement || !nextElement) {
        // Some weirdness is happening, so we bail
        return;
      }

      this._isSliding = true;

      if (isCycling) {
        this.pause();
      }

      this._setActiveIndicatorElement(nextElement);

      var slidEvent = $.Event(EVENT_SLID, {
        relatedTarget: nextElement,
        direction: eventDirectionName,
        from: activeElementIndex,
        to: nextElementIndex
      });

      if ($(this._element).hasClass(CLASS_NAME_SLIDE)) {
        $(nextElement).addClass(orderClassName);
        Util.reflow(nextElement);
        $(activeElement).addClass(directionalClassName);
        $(nextElement).addClass(directionalClassName);
        var nextElementInterval = parseInt(nextElement.getAttribute('data-interval'), 10);

        if (nextElementInterval) {
          this._config.defaultInterval = this._config.defaultInterval || this._config.interval;
          this._config.interval = nextElementInterval;
        } else {
          this._config.interval = this._config.defaultInterval || this._config.interval;
        }

        var transitionDuration = Util.getTransitionDurationFromElement(activeElement);
        $(activeElement).one(Util.TRANSITION_END, function () {
          $(nextElement).removeClass(directionalClassName + " " + orderClassName).addClass(CLASS_NAME_ACTIVE$1);
          $(activeElement).removeClass(CLASS_NAME_ACTIVE$1 + " " + orderClassName + " " + directionalClassName);
          _this4._isSliding = false;
          setTimeout(function () {
            return $(_this4._element).trigger(slidEvent);
          }, 0);
        }).emulateTransitionEnd(transitionDuration);
      } else {
        $(activeElement).removeClass(CLASS_NAME_ACTIVE$1);
        $(nextElement).addClass(CLASS_NAME_ACTIVE$1);
        this._isSliding = false;
        $(this._element).trigger(slidEvent);
      }

      if (isCycling) {
        this.cycle();
      }
    } // Static
    ;

    Carousel._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $(this).data(DATA_KEY$2);

        var _config = _extends({}, Default, $(this).data());

        if (typeof config === 'object') {
          _config = _extends({}, _config, config);
        }

        var action = typeof config === 'string' ? config : _config.slide;

        if (!data) {
          data = new Carousel(this, _config);
          $(this).data(DATA_KEY$2, data);
        }

        if (typeof config === 'number') {
          data.to(config);
        } else if (typeof action === 'string') {
          if (typeof data[action] === 'undefined') {
            throw new TypeError("No method named \"" + action + "\"");
          }

          data[action]();
        } else if (_config.interval && _config.ride) {
          data.pause();
          data.cycle();
        }
      });
    };

    Carousel._dataApiClickHandler = function _dataApiClickHandler(event) {
      var selector = Util.getSelectorFromElement(this);

      if (!selector) {
        return;
      }

      var target = $(selector)[0];

      if (!target || !$(target).hasClass(CLASS_NAME_CAROUSEL)) {
        return;
      }

      var config = _extends({}, $(target).data(), $(this).data());

      var slideIndex = this.getAttribute('data-slide-to');

      if (slideIndex) {
        config.interval = false;
      }

      Carousel._jQueryInterface.call($(target), config);

      if (slideIndex) {
        $(target).data(DATA_KEY$2).to(slideIndex);
      }

      event.preventDefault();
    };

    _createClass(Carousel, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$2;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default;
      }
    }]);

    return Carousel;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $(document).on(EVENT_CLICK_DATA_API$2, SELECTOR_DATA_SLIDE, Carousel._dataApiClickHandler);
  $(window).on(EVENT_LOAD_DATA_API$1, function () {
    var carousels = [].slice.call(document.querySelectorAll(SELECTOR_DATA_RIDE));

    for (var i = 0, len = carousels.length; i < len; i++) {
      var $carousel = $(carousels[i]);

      Carousel._jQueryInterface.call($carousel, $carousel.data());
    }
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME$2] = Carousel._jQueryInterface;
  $.fn[NAME$2].Constructor = Carousel;

  $.fn[NAME$2].noConflict = function () {
    $.fn[NAME$2] = JQUERY_NO_CONFLICT$2;
    return Carousel._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$3 = 'collapse';
  var VERSION$3 = '4.5.2';
  var DATA_KEY$3 = 'bs.collapse';
  var EVENT_KEY$3 = "." + DATA_KEY$3;
  var DATA_API_KEY$3 = '.data-api';
  var JQUERY_NO_CONFLICT$3 = $.fn[NAME$3];
  var Default$1 = {
    toggle: true,
    parent: ''
  };
  var DefaultType$1 = {
    toggle: 'boolean',
    parent: '(string|element)'
  };
  var EVENT_SHOW = "show" + EVENT_KEY$3;
  var EVENT_SHOWN = "shown" + EVENT_KEY$3;
  var EVENT_HIDE = "hide" + EVENT_KEY$3;
  var EVENT_HIDDEN = "hidden" + EVENT_KEY$3;
  var EVENT_CLICK_DATA_API$3 = "click" + EVENT_KEY$3 + DATA_API_KEY$3;
  var CLASS_NAME_SHOW$1 = 'show';
  var CLASS_NAME_COLLAPSE = 'collapse';
  var CLASS_NAME_COLLAPSING = 'collapsing';
  var CLASS_NAME_COLLAPSED = 'collapsed';
  var DIMENSION_WIDTH = 'width';
  var DIMENSION_HEIGHT = 'height';
  var SELECTOR_ACTIVES = '.show, .collapsing';
  var SELECTOR_DATA_TOGGLE$1 = '[data-toggle="collapse"]';
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Collapse = /*#__PURE__*/function () {
    function Collapse(element, config) {
      this._isTransitioning = false;
      this._element = element;
      this._config = this._getConfig(config);
      this._triggerArray = [].slice.call(document.querySelectorAll("[data-toggle=\"collapse\"][href=\"#" + element.id + "\"]," + ("[data-toggle=\"collapse\"][data-target=\"#" + element.id + "\"]")));
      var toggleList = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLE$1));

      for (var i = 0, len = toggleList.length; i < len; i++) {
        var elem = toggleList[i];
        var selector = Util.getSelectorFromElement(elem);
        var filterElement = [].slice.call(document.querySelectorAll(selector)).filter(function (foundElem) {
          return foundElem === element;
        });

        if (selector !== null && filterElement.length > 0) {
          this._selector = selector;

          this._triggerArray.push(elem);
        }
      }

      this._parent = this._config.parent ? this._getParent() : null;

      if (!this._config.parent) {
        this._addAriaAndCollapsedClass(this._element, this._triggerArray);
      }

      if (this._config.toggle) {
        this.toggle();
      }
    } // Getters


    var _proto = Collapse.prototype;

    // Public
    _proto.toggle = function toggle() {
      if ($(this._element).hasClass(CLASS_NAME_SHOW$1)) {
        this.hide();
      } else {
        this.show();
      }
    };

    _proto.show = function show() {
      var _this = this;

      if (this._isTransitioning || $(this._element).hasClass(CLASS_NAME_SHOW$1)) {
        return;
      }

      var actives;
      var activesData;

      if (this._parent) {
        actives = [].slice.call(this._parent.querySelectorAll(SELECTOR_ACTIVES)).filter(function (elem) {
          if (typeof _this._config.parent === 'string') {
            return elem.getAttribute('data-parent') === _this._config.parent;
          }

          return elem.classList.contains(CLASS_NAME_COLLAPSE);
        });

        if (actives.length === 0) {
          actives = null;
        }
      }

      if (actives) {
        activesData = $(actives).not(this._selector).data(DATA_KEY$3);

        if (activesData && activesData._isTransitioning) {
          return;
        }
      }

      var startEvent = $.Event(EVENT_SHOW);
      $(this._element).trigger(startEvent);

      if (startEvent.isDefaultPrevented()) {
        return;
      }

      if (actives) {
        Collapse._jQueryInterface.call($(actives).not(this._selector), 'hide');

        if (!activesData) {
          $(actives).data(DATA_KEY$3, null);
        }
      }

      var dimension = this._getDimension();

      $(this._element).removeClass(CLASS_NAME_COLLAPSE).addClass(CLASS_NAME_COLLAPSING);
      this._element.style[dimension] = 0;

      if (this._triggerArray.length) {
        $(this._triggerArray).removeClass(CLASS_NAME_COLLAPSED).attr('aria-expanded', true);
      }

      this.setTransitioning(true);

      var complete = function complete() {
        $(_this._element).removeClass(CLASS_NAME_COLLAPSING).addClass(CLASS_NAME_COLLAPSE + " " + CLASS_NAME_SHOW$1);
        _this._element.style[dimension] = '';

        _this.setTransitioning(false);

        $(_this._element).trigger(EVENT_SHOWN);
      };

      var capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);
      var scrollSize = "scroll" + capitalizedDimension;
      var transitionDuration = Util.getTransitionDurationFromElement(this._element);
      $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
      this._element.style[dimension] = this._element[scrollSize] + "px";
    };

    _proto.hide = function hide() {
      var _this2 = this;

      if (this._isTransitioning || !$(this._element).hasClass(CLASS_NAME_SHOW$1)) {
        return;
      }

      var startEvent = $.Event(EVENT_HIDE);
      $(this._element).trigger(startEvent);

      if (startEvent.isDefaultPrevented()) {
        return;
      }

      var dimension = this._getDimension();

      this._element.style[dimension] = this._element.getBoundingClientRect()[dimension] + "px";
      Util.reflow(this._element);
      $(this._element).addClass(CLASS_NAME_COLLAPSING).removeClass(CLASS_NAME_COLLAPSE + " " + CLASS_NAME_SHOW$1);
      var triggerArrayLength = this._triggerArray.length;

      if (triggerArrayLength > 0) {
        for (var i = 0; i < triggerArrayLength; i++) {
          var trigger = this._triggerArray[i];
          var selector = Util.getSelectorFromElement(trigger);

          if (selector !== null) {
            var $elem = $([].slice.call(document.querySelectorAll(selector)));

            if (!$elem.hasClass(CLASS_NAME_SHOW$1)) {
              $(trigger).addClass(CLASS_NAME_COLLAPSED).attr('aria-expanded', false);
            }
          }
        }
      }

      this.setTransitioning(true);

      var complete = function complete() {
        _this2.setTransitioning(false);

        $(_this2._element).removeClass(CLASS_NAME_COLLAPSING).addClass(CLASS_NAME_COLLAPSE).trigger(EVENT_HIDDEN);
      };

      this._element.style[dimension] = '';
      var transitionDuration = Util.getTransitionDurationFromElement(this._element);
      $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
    };

    _proto.setTransitioning = function setTransitioning(isTransitioning) {
      this._isTransitioning = isTransitioning;
    };

    _proto.dispose = function dispose() {
      $.removeData(this._element, DATA_KEY$3);
      this._config = null;
      this._parent = null;
      this._element = null;
      this._triggerArray = null;
      this._isTransitioning = null;
    } // Private
    ;

    _proto._getConfig = function _getConfig(config) {
      config = _extends({}, Default$1, config);
      config.toggle = Boolean(config.toggle); // Coerce string values

      Util.typeCheckConfig(NAME$3, config, DefaultType$1);
      return config;
    };

    _proto._getDimension = function _getDimension() {
      var hasWidth = $(this._element).hasClass(DIMENSION_WIDTH);
      return hasWidth ? DIMENSION_WIDTH : DIMENSION_HEIGHT;
    };

    _proto._getParent = function _getParent() {
      var _this3 = this;

      var parent;

      if (Util.isElement(this._config.parent)) {
        parent = this._config.parent; // It's a jQuery object

        if (typeof this._config.parent.jquery !== 'undefined') {
          parent = this._config.parent[0];
        }
      } else {
        parent = document.querySelector(this._config.parent);
      }

      var selector = "[data-toggle=\"collapse\"][data-parent=\"" + this._config.parent + "\"]";
      var children = [].slice.call(parent.querySelectorAll(selector));
      $(children).each(function (i, element) {
        _this3._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element]);
      });
      return parent;
    };

    _proto._addAriaAndCollapsedClass = function _addAriaAndCollapsedClass(element, triggerArray) {
      var isOpen = $(element).hasClass(CLASS_NAME_SHOW$1);

      if (triggerArray.length) {
        $(triggerArray).toggleClass(CLASS_NAME_COLLAPSED, !isOpen).attr('aria-expanded', isOpen);
      }
    } // Static
    ;

    Collapse._getTargetFromElement = function _getTargetFromElement(element) {
      var selector = Util.getSelectorFromElement(element);
      return selector ? document.querySelector(selector) : null;
    };

    Collapse._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var $this = $(this);
        var data = $this.data(DATA_KEY$3);

        var _config = _extends({}, Default$1, $this.data(), typeof config === 'object' && config ? config : {});

        if (!data && _config.toggle && typeof config === 'string' && /show|hide/.test(config)) {
          _config.toggle = false;
        }

        if (!data) {
          data = new Collapse(this, _config);
          $this.data(DATA_KEY$3, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config]();
        }
      });
    };

    _createClass(Collapse, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$3;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default$1;
      }
    }]);

    return Collapse;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $(document).on(EVENT_CLICK_DATA_API$3, SELECTOR_DATA_TOGGLE$1, function (event) {
    // preventDefault only for <a> elements (which change the URL) not inside the collapsible element
    if (event.currentTarget.tagName === 'A') {
      event.preventDefault();
    }

    var $trigger = $(this);
    var selector = Util.getSelectorFromElement(this);
    var selectors = [].slice.call(document.querySelectorAll(selector));
    $(selectors).each(function () {
      var $target = $(this);
      var data = $target.data(DATA_KEY$3);
      var config = data ? 'toggle' : $trigger.data();

      Collapse._jQueryInterface.call($target, config);
    });
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME$3] = Collapse._jQueryInterface;
  $.fn[NAME$3].Constructor = Collapse;

  $.fn[NAME$3].noConflict = function () {
    $.fn[NAME$3] = JQUERY_NO_CONFLICT$3;
    return Collapse._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$4 = 'dropdown';
  var VERSION$4 = '4.5.2';
  var DATA_KEY$4 = 'bs.dropdown';
  var EVENT_KEY$4 = "." + DATA_KEY$4;
  var DATA_API_KEY$4 = '.data-api';
  var JQUERY_NO_CONFLICT$4 = $.fn[NAME$4];
  var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key

  var SPACE_KEYCODE = 32; // KeyboardEvent.which value for space key

  var TAB_KEYCODE = 9; // KeyboardEvent.which value for tab key

  var ARROW_UP_KEYCODE = 38; // KeyboardEvent.which value for up arrow key

  var ARROW_DOWN_KEYCODE = 40; // KeyboardEvent.which value for down arrow key

  var RIGHT_MOUSE_BUTTON_WHICH = 3; // MouseEvent.which value for the right button (assuming a right-handed mouse)

  var REGEXP_KEYDOWN = new RegExp(ARROW_UP_KEYCODE + "|" + ARROW_DOWN_KEYCODE + "|" + ESCAPE_KEYCODE);
  var EVENT_HIDE$1 = "hide" + EVENT_KEY$4;
  var EVENT_HIDDEN$1 = "hidden" + EVENT_KEY$4;
  var EVENT_SHOW$1 = "show" + EVENT_KEY$4;
  var EVENT_SHOWN$1 = "shown" + EVENT_KEY$4;
  var EVENT_CLICK = "click" + EVENT_KEY$4;
  var EVENT_CLICK_DATA_API$4 = "click" + EVENT_KEY$4 + DATA_API_KEY$4;
  var EVENT_KEYDOWN_DATA_API = "keydown" + EVENT_KEY$4 + DATA_API_KEY$4;
  var EVENT_KEYUP_DATA_API = "keyup" + EVENT_KEY$4 + DATA_API_KEY$4;
  var CLASS_NAME_DISABLED = 'disabled';
  var CLASS_NAME_SHOW$2 = 'show';
  var CLASS_NAME_DROPUP = 'dropup';
  var CLASS_NAME_DROPRIGHT = 'dropright';
  var CLASS_NAME_DROPLEFT = 'dropleft';
  var CLASS_NAME_MENURIGHT = 'dropdown-menu-right';
  var CLASS_NAME_POSITION_STATIC = 'position-static';
  var SELECTOR_DATA_TOGGLE$2 = '[data-toggle="dropdown"]';
  var SELECTOR_FORM_CHILD = '.dropdown form';
  var SELECTOR_MENU = '.dropdown-menu';
  var SELECTOR_NAVBAR_NAV = '.navbar-nav';
  var SELECTOR_VISIBLE_ITEMS = '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)';
  var PLACEMENT_TOP = 'top-start';
  var PLACEMENT_TOPEND = 'top-end';
  var PLACEMENT_BOTTOM = 'bottom-start';
  var PLACEMENT_BOTTOMEND = 'bottom-end';
  var PLACEMENT_RIGHT = 'right-start';
  var PLACEMENT_LEFT = 'left-start';
  var Default$2 = {
    offset: 0,
    flip: true,
    boundary: 'scrollParent',
    reference: 'toggle',
    display: 'dynamic',
    popperConfig: null
  };
  var DefaultType$2 = {
    offset: '(number|string|function)',
    flip: 'boolean',
    boundary: '(string|element)',
    reference: '(string|element)',
    display: 'string',
    popperConfig: '(null|object)'
  };
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Dropdown = /*#__PURE__*/function () {
    function Dropdown(element, config) {
      this._element = element;
      this._popper = null;
      this._config = this._getConfig(config);
      this._menu = this._getMenuElement();
      this._inNavbar = this._detectNavbar();

      this._addEventListeners();
    } // Getters


    var _proto = Dropdown.prototype;

    // Public
    _proto.toggle = function toggle() {
      if (this._element.disabled || $(this._element).hasClass(CLASS_NAME_DISABLED)) {
        return;
      }

      var isActive = $(this._menu).hasClass(CLASS_NAME_SHOW$2);

      Dropdown._clearMenus();

      if (isActive) {
        return;
      }

      this.show(true);
    };

    _proto.show = function show(usePopper) {
      if (usePopper === void 0) {
        usePopper = false;
      }

      if (this._element.disabled || $(this._element).hasClass(CLASS_NAME_DISABLED) || $(this._menu).hasClass(CLASS_NAME_SHOW$2)) {
        return;
      }

      var relatedTarget = {
        relatedTarget: this._element
      };
      var showEvent = $.Event(EVENT_SHOW$1, relatedTarget);

      var parent = Dropdown._getParentFromElement(this._element);

      $(parent).trigger(showEvent);

      if (showEvent.isDefaultPrevented()) {
        return;
      } // Disable totally Popper.js for Dropdown in Navbar


      if (!this._inNavbar && usePopper) {
        /**
         * Check for Popper dependency
         * Popper - https://popper.js.org
         */
        if (typeof Popper === 'undefined') {
          throw new TypeError('Bootstrap\'s dropdowns require Popper.js (https://popper.js.org/)');
        }

        var referenceElement = this._element;

        if (this._config.reference === 'parent') {
          referenceElement = parent;
        } else if (Util.isElement(this._config.reference)) {
          referenceElement = this._config.reference; // Check if it's jQuery element

          if (typeof this._config.reference.jquery !== 'undefined') {
            referenceElement = this._config.reference[0];
          }
        } // If boundary is not `scrollParent`, then set position to `static`
        // to allow the menu to "escape" the scroll parent's boundaries
        // https://github.com/twbs/bootstrap/issues/24251


        if (this._config.boundary !== 'scrollParent') {
          $(parent).addClass(CLASS_NAME_POSITION_STATIC);
        }

        this._popper = new Popper(referenceElement, this._menu, this._getPopperConfig());
      } // If this is a touch-enabled device we add extra
      // empty mouseover listeners to the body's immediate children;
      // only needed because of broken event delegation on iOS
      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html


      if ('ontouchstart' in document.documentElement && $(parent).closest(SELECTOR_NAVBAR_NAV).length === 0) {
        $(document.body).children().on('mouseover', null, $.noop);
      }

      this._element.focus();

      this._element.setAttribute('aria-expanded', true);

      $(this._menu).toggleClass(CLASS_NAME_SHOW$2);
      $(parent).toggleClass(CLASS_NAME_SHOW$2).trigger($.Event(EVENT_SHOWN$1, relatedTarget));
    };

    _proto.hide = function hide() {
      if (this._element.disabled || $(this._element).hasClass(CLASS_NAME_DISABLED) || !$(this._menu).hasClass(CLASS_NAME_SHOW$2)) {
        return;
      }

      var relatedTarget = {
        relatedTarget: this._element
      };
      var hideEvent = $.Event(EVENT_HIDE$1, relatedTarget);

      var parent = Dropdown._getParentFromElement(this._element);

      $(parent).trigger(hideEvent);

      if (hideEvent.isDefaultPrevented()) {
        return;
      }

      if (this._popper) {
        this._popper.destroy();
      }

      $(this._menu).toggleClass(CLASS_NAME_SHOW$2);
      $(parent).toggleClass(CLASS_NAME_SHOW$2).trigger($.Event(EVENT_HIDDEN$1, relatedTarget));
    };

    _proto.dispose = function dispose() {
      $.removeData(this._element, DATA_KEY$4);
      $(this._element).off(EVENT_KEY$4);
      this._element = null;
      this._menu = null;

      if (this._popper !== null) {
        this._popper.destroy();

        this._popper = null;
      }
    };

    _proto.update = function update() {
      this._inNavbar = this._detectNavbar();

      if (this._popper !== null) {
        this._popper.scheduleUpdate();
      }
    } // Private
    ;

    _proto._addEventListeners = function _addEventListeners() {
      var _this = this;

      $(this._element).on(EVENT_CLICK, function (event) {
        event.preventDefault();
        event.stopPropagation();

        _this.toggle();
      });
    };

    _proto._getConfig = function _getConfig(config) {
      config = _extends({}, this.constructor.Default, $(this._element).data(), config);
      Util.typeCheckConfig(NAME$4, config, this.constructor.DefaultType);
      return config;
    };

    _proto._getMenuElement = function _getMenuElement() {
      if (!this._menu) {
        var parent = Dropdown._getParentFromElement(this._element);

        if (parent) {
          this._menu = parent.querySelector(SELECTOR_MENU);
        }
      }

      return this._menu;
    };

    _proto._getPlacement = function _getPlacement() {
      var $parentDropdown = $(this._element.parentNode);
      var placement = PLACEMENT_BOTTOM; // Handle dropup

      if ($parentDropdown.hasClass(CLASS_NAME_DROPUP)) {
        placement = $(this._menu).hasClass(CLASS_NAME_MENURIGHT) ? PLACEMENT_TOPEND : PLACEMENT_TOP;
      } else if ($parentDropdown.hasClass(CLASS_NAME_DROPRIGHT)) {
        placement = PLACEMENT_RIGHT;
      } else if ($parentDropdown.hasClass(CLASS_NAME_DROPLEFT)) {
        placement = PLACEMENT_LEFT;
      } else if ($(this._menu).hasClass(CLASS_NAME_MENURIGHT)) {
        placement = PLACEMENT_BOTTOMEND;
      }

      return placement;
    };

    _proto._detectNavbar = function _detectNavbar() {
      return $(this._element).closest('.navbar').length > 0;
    };

    _proto._getOffset = function _getOffset() {
      var _this2 = this;

      var offset = {};

      if (typeof this._config.offset === 'function') {
        offset.fn = function (data) {
          data.offsets = _extends({}, data.offsets, _this2._config.offset(data.offsets, _this2._element) || {});
          return data;
        };
      } else {
        offset.offset = this._config.offset;
      }

      return offset;
    };

    _proto._getPopperConfig = function _getPopperConfig() {
      var popperConfig = {
        placement: this._getPlacement(),
        modifiers: {
          offset: this._getOffset(),
          flip: {
            enabled: this._config.flip
          },
          preventOverflow: {
            boundariesElement: this._config.boundary
          }
        }
      }; // Disable Popper.js if we have a static display

      if (this._config.display === 'static') {
        popperConfig.modifiers.applyStyle = {
          enabled: false
        };
      }

      return _extends({}, popperConfig, this._config.popperConfig);
    } // Static
    ;

    Dropdown._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $(this).data(DATA_KEY$4);

        var _config = typeof config === 'object' ? config : null;

        if (!data) {
          data = new Dropdown(this, _config);
          $(this).data(DATA_KEY$4, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config]();
        }
      });
    };

    Dropdown._clearMenus = function _clearMenus(event) {
      if (event && (event.which === RIGHT_MOUSE_BUTTON_WHICH || event.type === 'keyup' && event.which !== TAB_KEYCODE)) {
        return;
      }

      var toggles = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLE$2));

      for (var i = 0, len = toggles.length; i < len; i++) {
        var parent = Dropdown._getParentFromElement(toggles[i]);

        var context = $(toggles[i]).data(DATA_KEY$4);
        var relatedTarget = {
          relatedTarget: toggles[i]
        };

        if (event && event.type === 'click') {
          relatedTarget.clickEvent = event;
        }

        if (!context) {
          continue;
        }

        var dropdownMenu = context._menu;

        if (!$(parent).hasClass(CLASS_NAME_SHOW$2)) {
          continue;
        }

        if (event && (event.type === 'click' && /input|textarea/i.test(event.target.tagName) || event.type === 'keyup' && event.which === TAB_KEYCODE) && $.contains(parent, event.target)) {
          continue;
        }

        var hideEvent = $.Event(EVENT_HIDE$1, relatedTarget);
        $(parent).trigger(hideEvent);

        if (hideEvent.isDefaultPrevented()) {
          continue;
        } // If this is a touch-enabled device we remove the extra
        // empty mouseover listeners we added for iOS support


        if ('ontouchstart' in document.documentElement) {
          $(document.body).children().off('mouseover', null, $.noop);
        }

        toggles[i].setAttribute('aria-expanded', 'false');

        if (context._popper) {
          context._popper.destroy();
        }

        $(dropdownMenu).removeClass(CLASS_NAME_SHOW$2);
        $(parent).removeClass(CLASS_NAME_SHOW$2).trigger($.Event(EVENT_HIDDEN$1, relatedTarget));
      }
    };

    Dropdown._getParentFromElement = function _getParentFromElement(element) {
      var parent;
      var selector = Util.getSelectorFromElement(element);

      if (selector) {
        parent = document.querySelector(selector);
      }

      return parent || element.parentNode;
    } // eslint-disable-next-line complexity
    ;

    Dropdown._dataApiKeydownHandler = function _dataApiKeydownHandler(event) {
      // If not input/textarea:
      //  - And not a key in REGEXP_KEYDOWN => not a dropdown command
      // If input/textarea:
      //  - If space key => not a dropdown command
      //  - If key is other than escape
      //    - If key is not up or down => not a dropdown command
      //    - If trigger inside the menu => not a dropdown command
      if (/input|textarea/i.test(event.target.tagName) ? event.which === SPACE_KEYCODE || event.which !== ESCAPE_KEYCODE && (event.which !== ARROW_DOWN_KEYCODE && event.which !== ARROW_UP_KEYCODE || $(event.target).closest(SELECTOR_MENU).length) : !REGEXP_KEYDOWN.test(event.which)) {
        return;
      }

      if (this.disabled || $(this).hasClass(CLASS_NAME_DISABLED)) {
        return;
      }

      var parent = Dropdown._getParentFromElement(this);

      var isActive = $(parent).hasClass(CLASS_NAME_SHOW$2);

      if (!isActive && event.which === ESCAPE_KEYCODE) {
        return;
      }

      event.preventDefault();
      event.stopPropagation();

      if (!isActive || isActive && (event.which === ESCAPE_KEYCODE || event.which === SPACE_KEYCODE)) {
        if (event.which === ESCAPE_KEYCODE) {
          $(parent.querySelector(SELECTOR_DATA_TOGGLE$2)).trigger('focus');
        }

        $(this).trigger('click');
        return;
      }

      var items = [].slice.call(parent.querySelectorAll(SELECTOR_VISIBLE_ITEMS)).filter(function (item) {
        return $(item).is(':visible');
      });

      if (items.length === 0) {
        return;
      }

      var index = items.indexOf(event.target);

      if (event.which === ARROW_UP_KEYCODE && index > 0) {
        // Up
        index--;
      }

      if (event.which === ARROW_DOWN_KEYCODE && index < items.length - 1) {
        // Down
        index++;
      }

      if (index < 0) {
        index = 0;
      }

      items[index].focus();
    };

    _createClass(Dropdown, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$4;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default$2;
      }
    }, {
      key: "DefaultType",
      get: function get() {
        return DefaultType$2;
      }
    }]);

    return Dropdown;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $(document).on(EVENT_KEYDOWN_DATA_API, SELECTOR_DATA_TOGGLE$2, Dropdown._dataApiKeydownHandler).on(EVENT_KEYDOWN_DATA_API, SELECTOR_MENU, Dropdown._dataApiKeydownHandler).on(EVENT_CLICK_DATA_API$4 + " " + EVENT_KEYUP_DATA_API, Dropdown._clearMenus).on(EVENT_CLICK_DATA_API$4, SELECTOR_DATA_TOGGLE$2, function (event) {
    event.preventDefault();
    event.stopPropagation();

    Dropdown._jQueryInterface.call($(this), 'toggle');
  }).on(EVENT_CLICK_DATA_API$4, SELECTOR_FORM_CHILD, function (e) {
    e.stopPropagation();
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME$4] = Dropdown._jQueryInterface;
  $.fn[NAME$4].Constructor = Dropdown;

  $.fn[NAME$4].noConflict = function () {
    $.fn[NAME$4] = JQUERY_NO_CONFLICT$4;
    return Dropdown._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$5 = 'modal';
  var VERSION$5 = '4.5.2';
  var DATA_KEY$5 = 'bs.modal';
  var EVENT_KEY$5 = "." + DATA_KEY$5;
  var DATA_API_KEY$5 = '.data-api';
  var JQUERY_NO_CONFLICT$5 = $.fn[NAME$5];
  var ESCAPE_KEYCODE$1 = 27; // KeyboardEvent.which value for Escape (Esc) key

  var Default$3 = {
    backdrop: true,
    keyboard: true,
    focus: true,
    show: true
  };
  var DefaultType$3 = {
    backdrop: '(boolean|string)',
    keyboard: 'boolean',
    focus: 'boolean',
    show: 'boolean'
  };
  var EVENT_HIDE$2 = "hide" + EVENT_KEY$5;
  var EVENT_HIDE_PREVENTED = "hidePrevented" + EVENT_KEY$5;
  var EVENT_HIDDEN$2 = "hidden" + EVENT_KEY$5;
  var EVENT_SHOW$2 = "show" + EVENT_KEY$5;
  var EVENT_SHOWN$2 = "shown" + EVENT_KEY$5;
  var EVENT_FOCUSIN = "focusin" + EVENT_KEY$5;
  var EVENT_RESIZE = "resize" + EVENT_KEY$5;
  var EVENT_CLICK_DISMISS = "click.dismiss" + EVENT_KEY$5;
  var EVENT_KEYDOWN_DISMISS = "keydown.dismiss" + EVENT_KEY$5;
  var EVENT_MOUSEUP_DISMISS = "mouseup.dismiss" + EVENT_KEY$5;
  var EVENT_MOUSEDOWN_DISMISS = "mousedown.dismiss" + EVENT_KEY$5;
  var EVENT_CLICK_DATA_API$5 = "click" + EVENT_KEY$5 + DATA_API_KEY$5;
  var CLASS_NAME_SCROLLABLE = 'modal-dialog-scrollable';
  var CLASS_NAME_SCROLLBAR_MEASURER = 'modal-scrollbar-measure';
  var CLASS_NAME_BACKDROP = 'modal-backdrop';
  var CLASS_NAME_OPEN = 'modal-open';
  var CLASS_NAME_FADE$1 = 'fade';
  var CLASS_NAME_SHOW$3 = 'show';
  var CLASS_NAME_STATIC = 'modal-static';
  var SELECTOR_DIALOG = '.modal-dialog';
  var SELECTOR_MODAL_BODY = '.modal-body';
  var SELECTOR_DATA_TOGGLE$3 = '[data-toggle="modal"]';
  var SELECTOR_DATA_DISMISS = '[data-dismiss="modal"]';
  var SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top';
  var SELECTOR_STICKY_CONTENT = '.sticky-top';
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Modal = /*#__PURE__*/function () {
    function Modal(element, config) {
      this._config = this._getConfig(config);
      this._element = element;
      this._dialog = element.querySelector(SELECTOR_DIALOG);
      this._backdrop = null;
      this._isShown = false;
      this._isBodyOverflowing = false;
      this._ignoreBackdropClick = false;
      this._isTransitioning = false;
      this._scrollbarWidth = 0;
    } // Getters


    var _proto = Modal.prototype;

    // Public
    _proto.toggle = function toggle(relatedTarget) {
      return this._isShown ? this.hide() : this.show(relatedTarget);
    };

    _proto.show = function show(relatedTarget) {
      var _this = this;

      if (this._isShown || this._isTransitioning) {
        return;
      }

      if ($(this._element).hasClass(CLASS_NAME_FADE$1)) {
        this._isTransitioning = true;
      }

      var showEvent = $.Event(EVENT_SHOW$2, {
        relatedTarget: relatedTarget
      });
      $(this._element).trigger(showEvent);

      if (this._isShown || showEvent.isDefaultPrevented()) {
        return;
      }

      this._isShown = true;

      this._checkScrollbar();

      this._setScrollbar();

      this._adjustDialog();

      this._setEscapeEvent();

      this._setResizeEvent();

      $(this._element).on(EVENT_CLICK_DISMISS, SELECTOR_DATA_DISMISS, function (event) {
        return _this.hide(event);
      });
      $(this._dialog).on(EVENT_MOUSEDOWN_DISMISS, function () {
        $(_this._element).one(EVENT_MOUSEUP_DISMISS, function (event) {
          if ($(event.target).is(_this._element)) {
            _this._ignoreBackdropClick = true;
          }
        });
      });

      this._showBackdrop(function () {
        return _this._showElement(relatedTarget);
      });
    };

    _proto.hide = function hide(event) {
      var _this2 = this;

      if (event) {
        event.preventDefault();
      }

      if (!this._isShown || this._isTransitioning) {
        return;
      }

      var hideEvent = $.Event(EVENT_HIDE$2);
      $(this._element).trigger(hideEvent);

      if (!this._isShown || hideEvent.isDefaultPrevented()) {
        return;
      }

      this._isShown = false;
      var transition = $(this._element).hasClass(CLASS_NAME_FADE$1);

      if (transition) {
        this._isTransitioning = true;
      }

      this._setEscapeEvent();

      this._setResizeEvent();

      $(document).off(EVENT_FOCUSIN);
      $(this._element).removeClass(CLASS_NAME_SHOW$3);
      $(this._element).off(EVENT_CLICK_DISMISS);
      $(this._dialog).off(EVENT_MOUSEDOWN_DISMISS);

      if (transition) {
        var transitionDuration = Util.getTransitionDurationFromElement(this._element);
        $(this._element).one(Util.TRANSITION_END, function (event) {
          return _this2._hideModal(event);
        }).emulateTransitionEnd(transitionDuration);
      } else {
        this._hideModal();
      }
    };

    _proto.dispose = function dispose() {
      [window, this._element, this._dialog].forEach(function (htmlElement) {
        return $(htmlElement).off(EVENT_KEY$5);
      });
      /**
       * `document` has 2 events `EVENT_FOCUSIN` and `EVENT_CLICK_DATA_API`
       * Do not move `document` in `htmlElements` array
       * It will remove `EVENT_CLICK_DATA_API` event that should remain
       */

      $(document).off(EVENT_FOCUSIN);
      $.removeData(this._element, DATA_KEY$5);
      this._config = null;
      this._element = null;
      this._dialog = null;
      this._backdrop = null;
      this._isShown = null;
      this._isBodyOverflowing = null;
      this._ignoreBackdropClick = null;
      this._isTransitioning = null;
      this._scrollbarWidth = null;
    };

    _proto.handleUpdate = function handleUpdate() {
      this._adjustDialog();
    } // Private
    ;

    _proto._getConfig = function _getConfig(config) {
      config = _extends({}, Default$3, config);
      Util.typeCheckConfig(NAME$5, config, DefaultType$3);
      return config;
    };

    _proto._triggerBackdropTransition = function _triggerBackdropTransition() {
      var _this3 = this;

      if (this._config.backdrop === 'static') {
        var hideEventPrevented = $.Event(EVENT_HIDE_PREVENTED);
        $(this._element).trigger(hideEventPrevented);

        if (hideEventPrevented.defaultPrevented) {
          return;
        }

        var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;

        if (!isModalOverflowing) {
          this._element.style.overflowY = 'hidden';
        }

        this._element.classList.add(CLASS_NAME_STATIC);

        var modalTransitionDuration = Util.getTransitionDurationFromElement(this._dialog);
        $(this._element).off(Util.TRANSITION_END);
        $(this._element).one(Util.TRANSITION_END, function () {
          _this3._element.classList.remove(CLASS_NAME_STATIC);

          if (!isModalOverflowing) {
            $(_this3._element).one(Util.TRANSITION_END, function () {
              _this3._element.style.overflowY = '';
            }).emulateTransitionEnd(_this3._element, modalTransitionDuration);
          }
        }).emulateTransitionEnd(modalTransitionDuration);

        this._element.focus();
      } else {
        this.hide();
      }
    };

    _proto._showElement = function _showElement(relatedTarget) {
      var _this4 = this;

      var transition = $(this._element).hasClass(CLASS_NAME_FADE$1);
      var modalBody = this._dialog ? this._dialog.querySelector(SELECTOR_MODAL_BODY) : null;

      if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {
        // Don't move modal's DOM position
        document.body.appendChild(this._element);
      }

      this._element.style.display = 'block';

      this._element.removeAttribute('aria-hidden');

      this._element.setAttribute('aria-modal', true);

      this._element.setAttribute('role', 'dialog');

      if ($(this._dialog).hasClass(CLASS_NAME_SCROLLABLE) && modalBody) {
        modalBody.scrollTop = 0;
      } else {
        this._element.scrollTop = 0;
      }

      if (transition) {
        Util.reflow(this._element);
      }

      $(this._element).addClass(CLASS_NAME_SHOW$3);

      if (this._config.focus) {
        this._enforceFocus();
      }

      var shownEvent = $.Event(EVENT_SHOWN$2, {
        relatedTarget: relatedTarget
      });

      var transitionComplete = function transitionComplete() {
        if (_this4._config.focus) {
          _this4._element.focus();
        }

        _this4._isTransitioning = false;
        $(_this4._element).trigger(shownEvent);
      };

      if (transition) {
        var transitionDuration = Util.getTransitionDurationFromElement(this._dialog);
        $(this._dialog).one(Util.TRANSITION_END, transitionComplete).emulateTransitionEnd(transitionDuration);
      } else {
        transitionComplete();
      }
    };

    _proto._enforceFocus = function _enforceFocus() {
      var _this5 = this;

      $(document).off(EVENT_FOCUSIN) // Guard against infinite focus loop
      .on(EVENT_FOCUSIN, function (event) {
        if (document !== event.target && _this5._element !== event.target && $(_this5._element).has(event.target).length === 0) {
          _this5._element.focus();
        }
      });
    };

    _proto._setEscapeEvent = function _setEscapeEvent() {
      var _this6 = this;

      if (this._isShown) {
        $(this._element).on(EVENT_KEYDOWN_DISMISS, function (event) {
          if (_this6._config.keyboard && event.which === ESCAPE_KEYCODE$1) {
            event.preventDefault();

            _this6.hide();
          } else if (!_this6._config.keyboard && event.which === ESCAPE_KEYCODE$1) {
            _this6._triggerBackdropTransition();
          }
        });
      } else if (!this._isShown) {
        $(this._element).off(EVENT_KEYDOWN_DISMISS);
      }
    };

    _proto._setResizeEvent = function _setResizeEvent() {
      var _this7 = this;

      if (this._isShown) {
        $(window).on(EVENT_RESIZE, function (event) {
          return _this7.handleUpdate(event);
        });
      } else {
        $(window).off(EVENT_RESIZE);
      }
    };

    _proto._hideModal = function _hideModal() {
      var _this8 = this;

      this._element.style.display = 'none';

      this._element.setAttribute('aria-hidden', true);

      this._element.removeAttribute('aria-modal');

      this._element.removeAttribute('role');

      this._isTransitioning = false;

      this._showBackdrop(function () {
        $(document.body).removeClass(CLASS_NAME_OPEN);

        _this8._resetAdjustments();

        _this8._resetScrollbar();

        $(_this8._element).trigger(EVENT_HIDDEN$2);
      });
    };

    _proto._removeBackdrop = function _removeBackdrop() {
      if (this._backdrop) {
        $(this._backdrop).remove();
        this._backdrop = null;
      }
    };

    _proto._showBackdrop = function _showBackdrop(callback) {
      var _this9 = this;

      var animate = $(this._element).hasClass(CLASS_NAME_FADE$1) ? CLASS_NAME_FADE$1 : '';

      if (this._isShown && this._config.backdrop) {
        this._backdrop = document.createElement('div');
        this._backdrop.className = CLASS_NAME_BACKDROP;

        if (animate) {
          this._backdrop.classList.add(animate);
        }

        $(this._backdrop).appendTo(document.body);
        $(this._element).on(EVENT_CLICK_DISMISS, function (event) {
          if (_this9._ignoreBackdropClick) {
            _this9._ignoreBackdropClick = false;
            return;
          }

          if (event.target !== event.currentTarget) {
            return;
          }

          _this9._triggerBackdropTransition();
        });

        if (animate) {
          Util.reflow(this._backdrop);
        }

        $(this._backdrop).addClass(CLASS_NAME_SHOW$3);

        if (!callback) {
          return;
        }

        if (!animate) {
          callback();
          return;
        }

        var backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop);
        $(this._backdrop).one(Util.TRANSITION_END, callback).emulateTransitionEnd(backdropTransitionDuration);
      } else if (!this._isShown && this._backdrop) {
        $(this._backdrop).removeClass(CLASS_NAME_SHOW$3);

        var callbackRemove = function callbackRemove() {
          _this9._removeBackdrop();

          if (callback) {
            callback();
          }
        };

        if ($(this._element).hasClass(CLASS_NAME_FADE$1)) {
          var _backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop);

          $(this._backdrop).one(Util.TRANSITION_END, callbackRemove).emulateTransitionEnd(_backdropTransitionDuration);
        } else {
          callbackRemove();
        }
      } else if (callback) {
        callback();
      }
    } // ----------------------------------------------------------------------
    // the following methods are used to handle overflowing modals
    // todo (fat): these should probably be refactored out of modal.js
    // ----------------------------------------------------------------------
    ;

    _proto._adjustDialog = function _adjustDialog() {
      var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;

      if (!this._isBodyOverflowing && isModalOverflowing) {
        this._element.style.paddingLeft = this._scrollbarWidth + "px";
      }

      if (this._isBodyOverflowing && !isModalOverflowing) {
        this._element.style.paddingRight = this._scrollbarWidth + "px";
      }
    };

    _proto._resetAdjustments = function _resetAdjustments() {
      this._element.style.paddingLeft = '';
      this._element.style.paddingRight = '';
    };

    _proto._checkScrollbar = function _checkScrollbar() {
      var rect = document.body.getBoundingClientRect();
      this._isBodyOverflowing = Math.round(rect.left + rect.right) < window.innerWidth;
      this._scrollbarWidth = this._getScrollbarWidth();
    };

    _proto._setScrollbar = function _setScrollbar() {
      var _this10 = this;

      if (this._isBodyOverflowing) {
        // Note: DOMNode.style.paddingRight returns the actual value or '' if not set
        //   while $(DOMNode).css('padding-right') returns the calculated value or 0 if not set
        var fixedContent = [].slice.call(document.querySelectorAll(SELECTOR_FIXED_CONTENT));
        var stickyContent = [].slice.call(document.querySelectorAll(SELECTOR_STICKY_CONTENT)); // Adjust fixed content padding

        $(fixedContent).each(function (index, element) {
          var actualPadding = element.style.paddingRight;
          var calculatedPadding = $(element).css('padding-right');
          $(element).data('padding-right', actualPadding).css('padding-right', parseFloat(calculatedPadding) + _this10._scrollbarWidth + "px");
        }); // Adjust sticky content margin

        $(stickyContent).each(function (index, element) {
          var actualMargin = element.style.marginRight;
          var calculatedMargin = $(element).css('margin-right');
          $(element).data('margin-right', actualMargin).css('margin-right', parseFloat(calculatedMargin) - _this10._scrollbarWidth + "px");
        }); // Adjust body padding

        var actualPadding = document.body.style.paddingRight;
        var calculatedPadding = $(document.body).css('padding-right');
        $(document.body).data('padding-right', actualPadding).css('padding-right', parseFloat(calculatedPadding) + this._scrollbarWidth + "px");
      }

      $(document.body).addClass(CLASS_NAME_OPEN);
    };

    _proto._resetScrollbar = function _resetScrollbar() {
      // Restore fixed content padding
      var fixedContent = [].slice.call(document.querySelectorAll(SELECTOR_FIXED_CONTENT));
      $(fixedContent).each(function (index, element) {
        var padding = $(element).data('padding-right');
        $(element).removeData('padding-right');
        element.style.paddingRight = padding ? padding : '';
      }); // Restore sticky content

      var elements = [].slice.call(document.querySelectorAll("" + SELECTOR_STICKY_CONTENT));
      $(elements).each(function (index, element) {
        var margin = $(element).data('margin-right');

        if (typeof margin !== 'undefined') {
          $(element).css('margin-right', margin).removeData('margin-right');
        }
      }); // Restore body padding

      var padding = $(document.body).data('padding-right');
      $(document.body).removeData('padding-right');
      document.body.style.paddingRight = padding ? padding : '';
    };

    _proto._getScrollbarWidth = function _getScrollbarWidth() {
      // thx d.walsh
      var scrollDiv = document.createElement('div');
      scrollDiv.className = CLASS_NAME_SCROLLBAR_MEASURER;
      document.body.appendChild(scrollDiv);
      var scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;
      document.body.removeChild(scrollDiv);
      return scrollbarWidth;
    } // Static
    ;

    Modal._jQueryInterface = function _jQueryInterface(config, relatedTarget) {
      return this.each(function () {
        var data = $(this).data(DATA_KEY$5);

        var _config = _extends({}, Default$3, $(this).data(), typeof config === 'object' && config ? config : {});

        if (!data) {
          data = new Modal(this, _config);
          $(this).data(DATA_KEY$5, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config](relatedTarget);
        } else if (_config.show) {
          data.show(relatedTarget);
        }
      });
    };

    _createClass(Modal, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$5;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default$3;
      }
    }]);

    return Modal;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $(document).on(EVENT_CLICK_DATA_API$5, SELECTOR_DATA_TOGGLE$3, function (event) {
    var _this11 = this;

    var target;
    var selector = Util.getSelectorFromElement(this);

    if (selector) {
      target = document.querySelector(selector);
    }

    var config = $(target).data(DATA_KEY$5) ? 'toggle' : _extends({}, $(target).data(), $(this).data());

    if (this.tagName === 'A' || this.tagName === 'AREA') {
      event.preventDefault();
    }

    var $target = $(target).one(EVENT_SHOW$2, function (showEvent) {
      if (showEvent.isDefaultPrevented()) {
        // Only register focus restorer if modal will actually get shown
        return;
      }

      $target.one(EVENT_HIDDEN$2, function () {
        if ($(_this11).is(':visible')) {
          _this11.focus();
        }
      });
    });

    Modal._jQueryInterface.call($(target), config, this);
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME$5] = Modal._jQueryInterface;
  $.fn[NAME$5].Constructor = Modal;

  $.fn[NAME$5].noConflict = function () {
    $.fn[NAME$5] = JQUERY_NO_CONFLICT$5;
    return Modal._jQueryInterface;
  };

  /**
   * --------------------------------------------------------------------------
   * Bootstrap (v4.5.2): tools/sanitizer.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */
  var uriAttrs = ['background', 'cite', 'href', 'itemtype', 'longdesc', 'poster', 'src', 'xlink:href'];
  var ARIA_ATTRIBUTE_PATTERN = /^aria-[\w-]*$/i;
  var DefaultWhitelist = {
    // Global attributes allowed on any supplied element below.
    '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],
    a: ['target', 'href', 'title', 'rel'],
    area: [],
    b: [],
    br: [],
    col: [],
    code: [],
    div: [],
    em: [],
    hr: [],
    h1: [],
    h2: [],
    h3: [],
    h4: [],
    h5: [],
    h6: [],
    i: [],
    img: ['src', 'srcset', 'alt', 'title', 'width', 'height'],
    li: [],
    ol: [],
    p: [],
    pre: [],
    s: [],
    small: [],
    span: [],
    sub: [],
    sup: [],
    strong: [],
    u: [],
    ul: []
  };
  /**
   * A pattern that recognizes a commonly useful subset of URLs that are safe.
   *
   * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts
   */

  var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/gi;
  /**
   * A pattern that matches safe data URLs. Only matches image, video and audio types.
   *
   * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts
   */

  var DATA_URL_PATTERN = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i;

  function allowedAttribute(attr, allowedAttributeList) {
    var attrName = attr.nodeName.toLowerCase();

    if (allowedAttributeList.indexOf(attrName) !== -1) {
      if (uriAttrs.indexOf(attrName) !== -1) {
        return Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN));
      }

      return true;
    }

    var regExp = allowedAttributeList.filter(function (attrRegex) {
      return attrRegex instanceof RegExp;
    }); // Check if a regular expression validates the attribute.

    for (var i = 0, len = regExp.length; i < len; i++) {
      if (attrName.match(regExp[i])) {
        return true;
      }
    }

    return false;
  }

  function sanitizeHtml(unsafeHtml, whiteList, sanitizeFn) {
    if (unsafeHtml.length === 0) {
      return unsafeHtml;
    }

    if (sanitizeFn && typeof sanitizeFn === 'function') {
      return sanitizeFn(unsafeHtml);
    }

    var domParser = new window.DOMParser();
    var createdDocument = domParser.parseFromString(unsafeHtml, 'text/html');
    var whitelistKeys = Object.keys(whiteList);
    var elements = [].slice.call(createdDocument.body.querySelectorAll('*'));

    var _loop = function _loop(i, len) {
      var el = elements[i];
      var elName = el.nodeName.toLowerCase();

      if (whitelistKeys.indexOf(el.nodeName.toLowerCase()) === -1) {
        el.parentNode.removeChild(el);
        return "continue";
      }

      var attributeList = [].slice.call(el.attributes);
      var whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || []);
      attributeList.forEach(function (attr) {
        if (!allowedAttribute(attr, whitelistedAttributes)) {
          el.removeAttribute(attr.nodeName);
        }
      });
    };

    for (var i = 0, len = elements.length; i < len; i++) {
      var _ret = _loop(i);

      if (_ret === "continue") continue;
    }

    return createdDocument.body.innerHTML;
  }

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$6 = 'tooltip';
  var VERSION$6 = '4.5.2';
  var DATA_KEY$6 = 'bs.tooltip';
  var EVENT_KEY$6 = "." + DATA_KEY$6;
  var JQUERY_NO_CONFLICT$6 = $.fn[NAME$6];
  var CLASS_PREFIX = 'bs-tooltip';
  var BSCLS_PREFIX_REGEX = new RegExp("(^|\\s)" + CLASS_PREFIX + "\\S+", 'g');
  var DISALLOWED_ATTRIBUTES = ['sanitize', 'whiteList', 'sanitizeFn'];
  var DefaultType$4 = {
    animation: 'boolean',
    template: 'string',
    title: '(string|element|function)',
    trigger: 'string',
    delay: '(number|object)',
    html: 'boolean',
    selector: '(string|boolean)',
    placement: '(string|function)',
    offset: '(number|string|function)',
    container: '(string|element|boolean)',
    fallbackPlacement: '(string|array)',
    boundary: '(string|element)',
    sanitize: 'boolean',
    sanitizeFn: '(null|function)',
    whiteList: 'object',
    popperConfig: '(null|object)'
  };
  var AttachmentMap = {
    AUTO: 'auto',
    TOP: 'top',
    RIGHT: 'right',
    BOTTOM: 'bottom',
    LEFT: 'left'
  };
  var Default$4 = {
    animation: true,
    template: '<div class="tooltip" role="tooltip">' + '<div class="arrow"></div>' + '<div class="tooltip-inner"></div></div>',
    trigger: 'hover focus',
    title: '',
    delay: 0,
    html: false,
    selector: false,
    placement: 'top',
    offset: 0,
    container: false,
    fallbackPlacement: 'flip',
    boundary: 'scrollParent',
    sanitize: true,
    sanitizeFn: null,
    whiteList: DefaultWhitelist,
    popperConfig: null
  };
  var HOVER_STATE_SHOW = 'show';
  var HOVER_STATE_OUT = 'out';
  var Event = {
    HIDE: "hide" + EVENT_KEY$6,
    HIDDEN: "hidden" + EVENT_KEY$6,
    SHOW: "show" + EVENT_KEY$6,
    SHOWN: "shown" + EVENT_KEY$6,
    INSERTED: "inserted" + EVENT_KEY$6,
    CLICK: "click" + EVENT_KEY$6,
    FOCUSIN: "focusin" + EVENT_KEY$6,
    FOCUSOUT: "focusout" + EVENT_KEY$6,
    MOUSEENTER: "mouseenter" + EVENT_KEY$6,
    MOUSELEAVE: "mouseleave" + EVENT_KEY$6
  };
  var CLASS_NAME_FADE$2 = 'fade';
  var CLASS_NAME_SHOW$4 = 'show';
  var SELECTOR_TOOLTIP_INNER = '.tooltip-inner';
  var SELECTOR_ARROW = '.arrow';
  var TRIGGER_HOVER = 'hover';
  var TRIGGER_FOCUS = 'focus';
  var TRIGGER_CLICK = 'click';
  var TRIGGER_MANUAL = 'manual';
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Tooltip = /*#__PURE__*/function () {
    function Tooltip(element, config) {
      if (typeof Popper === 'undefined') {
        throw new TypeError('Bootstrap\'s tooltips require Popper.js (https://popper.js.org/)');
      } // private


      this._isEnabled = true;
      this._timeout = 0;
      this._hoverState = '';
      this._activeTrigger = {};
      this._popper = null; // Protected

      this.element = element;
      this.config = this._getConfig(config);
      this.tip = null;

      this._setListeners();
    } // Getters


    var _proto = Tooltip.prototype;

    // Public
    _proto.enable = function enable() {
      this._isEnabled = true;
    };

    _proto.disable = function disable() {
      this._isEnabled = false;
    };

    _proto.toggleEnabled = function toggleEnabled() {
      this._isEnabled = !this._isEnabled;
    };

    _proto.toggle = function toggle(event) {
      if (!this._isEnabled) {
        return;
      }

      if (event) {
        var dataKey = this.constructor.DATA_KEY;
        var context = $(event.currentTarget).data(dataKey);

        if (!context) {
          context = new this.constructor(event.currentTarget, this._getDelegateConfig());
          $(event.currentTarget).data(dataKey, context);
        }

        context._activeTrigger.click = !context._activeTrigger.click;

        if (context._isWithActiveTrigger()) {
          context._enter(null, context);
        } else {
          context._leave(null, context);
        }
      } else {
        if ($(this.getTipElement()).hasClass(CLASS_NAME_SHOW$4)) {
          this._leave(null, this);

          return;
        }

        this._enter(null, this);
      }
    };

    _proto.dispose = function dispose() {
      clearTimeout(this._timeout);
      $.removeData(this.element, this.constructor.DATA_KEY);
      $(this.element).off(this.constructor.EVENT_KEY);
      $(this.element).closest('.modal').off('hide.bs.modal', this._hideModalHandler);

      if (this.tip) {
        $(this.tip).remove();
      }

      this._isEnabled = null;
      this._timeout = null;
      this._hoverState = null;
      this._activeTrigger = null;

      if (this._popper) {
        this._popper.destroy();
      }

      this._popper = null;
      this.element = null;
      this.config = null;
      this.tip = null;
    };

    _proto.show = function show() {
      var _this = this;

      if ($(this.element).css('display') === 'none') {
        throw new Error('Please use show on visible elements');
      }

      var showEvent = $.Event(this.constructor.Event.SHOW);

      if (this.isWithContent() && this._isEnabled) {
        $(this.element).trigger(showEvent);
        var shadowRoot = Util.findShadowRoot(this.element);
        var isInTheDom = $.contains(shadowRoot !== null ? shadowRoot : this.element.ownerDocument.documentElement, this.element);

        if (showEvent.isDefaultPrevented() || !isInTheDom) {
          return;
        }

        var tip = this.getTipElement();
        var tipId = Util.getUID(this.constructor.NAME);
        tip.setAttribute('id', tipId);
        this.element.setAttribute('aria-describedby', tipId);
        this.setContent();

        if (this.config.animation) {
          $(tip).addClass(CLASS_NAME_FADE$2);
        }

        var placement = typeof this.config.placement === 'function' ? this.config.placement.call(this, tip, this.element) : this.config.placement;

        var attachment = this._getAttachment(placement);

        this.addAttachmentClass(attachment);

        var container = this._getContainer();

        $(tip).data(this.constructor.DATA_KEY, this);

        if (!$.contains(this.element.ownerDocument.documentElement, this.tip)) {
          $(tip).appendTo(container);
        }

        $(this.element).trigger(this.constructor.Event.INSERTED);
        this._popper = new Popper(this.element, tip, this._getPopperConfig(attachment));
        $(tip).addClass(CLASS_NAME_SHOW$4); // If this is a touch-enabled device we add extra
        // empty mouseover listeners to the body's immediate children;
        // only needed because of broken event delegation on iOS
        // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html

        if ('ontouchstart' in document.documentElement) {
          $(document.body).children().on('mouseover', null, $.noop);
        }

        var complete = function complete() {
          if (_this.config.animation) {
            _this._fixTransition();
          }

          var prevHoverState = _this._hoverState;
          _this._hoverState = null;
          $(_this.element).trigger(_this.constructor.Event.SHOWN);

          if (prevHoverState === HOVER_STATE_OUT) {
            _this._leave(null, _this);
          }
        };

        if ($(this.tip).hasClass(CLASS_NAME_FADE$2)) {
          var transitionDuration = Util.getTransitionDurationFromElement(this.tip);
          $(this.tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
        } else {
          complete();
        }
      }
    };

    _proto.hide = function hide(callback) {
      var _this2 = this;

      var tip = this.getTipElement();
      var hideEvent = $.Event(this.constructor.Event.HIDE);

      var complete = function complete() {
        if (_this2._hoverState !== HOVER_STATE_SHOW && tip.parentNode) {
          tip.parentNode.removeChild(tip);
        }

        _this2._cleanTipClass();

        _this2.element.removeAttribute('aria-describedby');

        $(_this2.element).trigger(_this2.constructor.Event.HIDDEN);

        if (_this2._popper !== null) {
          _this2._popper.destroy();
        }

        if (callback) {
          callback();
        }
      };

      $(this.element).trigger(hideEvent);

      if (hideEvent.isDefaultPrevented()) {
        return;
      }

      $(tip).removeClass(CLASS_NAME_SHOW$4); // If this is a touch-enabled device we remove the extra
      // empty mouseover listeners we added for iOS support

      if ('ontouchstart' in document.documentElement) {
        $(document.body).children().off('mouseover', null, $.noop);
      }

      this._activeTrigger[TRIGGER_CLICK] = false;
      this._activeTrigger[TRIGGER_FOCUS] = false;
      this._activeTrigger[TRIGGER_HOVER] = false;

      if ($(this.tip).hasClass(CLASS_NAME_FADE$2)) {
        var transitionDuration = Util.getTransitionDurationFromElement(tip);
        $(tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
      } else {
        complete();
      }

      this._hoverState = '';
    };

    _proto.update = function update() {
      if (this._popper !== null) {
        this._popper.scheduleUpdate();
      }
    } // Protected
    ;

    _proto.isWithContent = function isWithContent() {
      return Boolean(this.getTitle());
    };

    _proto.addAttachmentClass = function addAttachmentClass(attachment) {
      $(this.getTipElement()).addClass(CLASS_PREFIX + "-" + attachment);
    };

    _proto.getTipElement = function getTipElement() {
      this.tip = this.tip || $(this.config.template)[0];
      return this.tip;
    };

    _proto.setContent = function setContent() {
      var tip = this.getTipElement();
      this.setElementContent($(tip.querySelectorAll(SELECTOR_TOOLTIP_INNER)), this.getTitle());
      $(tip).removeClass(CLASS_NAME_FADE$2 + " " + CLASS_NAME_SHOW$4);
    };

    _proto.setElementContent = function setElementContent($element, content) {
      if (typeof content === 'object' && (content.nodeType || content.jquery)) {
        // Content is a DOM node or a jQuery
        if (this.config.html) {
          if (!$(content).parent().is($element)) {
            $element.empty().append(content);
          }
        } else {
          $element.text($(content).text());
        }

        return;
      }

      if (this.config.html) {
        if (this.config.sanitize) {
          content = sanitizeHtml(content, this.config.whiteList, this.config.sanitizeFn);
        }

        $element.html(content);
      } else {
        $element.text(content);
      }
    };

    _proto.getTitle = function getTitle() {
      var title = this.element.getAttribute('data-original-title');

      if (!title) {
        title = typeof this.config.title === 'function' ? this.config.title.call(this.element) : this.config.title;
      }

      return title;
    } // Private
    ;

    _proto._getPopperConfig = function _getPopperConfig(attachment) {
      var _this3 = this;

      var defaultBsConfig = {
        placement: attachment,
        modifiers: {
          offset: this._getOffset(),
          flip: {
            behavior: this.config.fallbackPlacement
          },
          arrow: {
            element: SELECTOR_ARROW
          },
          preventOverflow: {
            boundariesElement: this.config.boundary
          }
        },
        onCreate: function onCreate(data) {
          if (data.originalPlacement !== data.placement) {
            _this3._handlePopperPlacementChange(data);
          }
        },
        onUpdate: function onUpdate(data) {
          return _this3._handlePopperPlacementChange(data);
        }
      };
      return _extends({}, defaultBsConfig, this.config.popperConfig);
    };

    _proto._getOffset = function _getOffset() {
      var _this4 = this;

      var offset = {};

      if (typeof this.config.offset === 'function') {
        offset.fn = function (data) {
          data.offsets = _extends({}, data.offsets, _this4.config.offset(data.offsets, _this4.element) || {});
          return data;
        };
      } else {
        offset.offset = this.config.offset;
      }

      return offset;
    };

    _proto._getContainer = function _getContainer() {
      if (this.config.container === false) {
        return document.body;
      }

      if (Util.isElement(this.config.container)) {
        return $(this.config.container);
      }

      return $(document).find(this.config.container);
    };

    _proto._getAttachment = function _getAttachment(placement) {
      return AttachmentMap[placement.toUpperCase()];
    };

    _proto._setListeners = function _setListeners() {
      var _this5 = this;

      var triggers = this.config.trigger.split(' ');
      triggers.forEach(function (trigger) {
        if (trigger === 'click') {
          $(_this5.element).on(_this5.constructor.Event.CLICK, _this5.config.selector, function (event) {
            return _this5.toggle(event);
          });
        } else if (trigger !== TRIGGER_MANUAL) {
          var eventIn = trigger === TRIGGER_HOVER ? _this5.constructor.Event.MOUSEENTER : _this5.constructor.Event.FOCUSIN;
          var eventOut = trigger === TRIGGER_HOVER ? _this5.constructor.Event.MOUSELEAVE : _this5.constructor.Event.FOCUSOUT;
          $(_this5.element).on(eventIn, _this5.config.selector, function (event) {
            return _this5._enter(event);
          }).on(eventOut, _this5.config.selector, function (event) {
            return _this5._leave(event);
          });
        }
      });

      this._hideModalHandler = function () {
        if (_this5.element) {
          _this5.hide();
        }
      };

      $(this.element).closest('.modal').on('hide.bs.modal', this._hideModalHandler);

      if (this.config.selector) {
        this.config = _extends({}, this.config, {
          trigger: 'manual',
          selector: ''
        });
      } else {
        this._fixTitle();
      }
    };

    _proto._fixTitle = function _fixTitle() {
      var titleType = typeof this.element.getAttribute('data-original-title');

      if (this.element.getAttribute('title') || titleType !== 'string') {
        this.element.setAttribute('data-original-title', this.element.getAttribute('title') || '');
        this.element.setAttribute('title', '');
      }
    };

    _proto._enter = function _enter(event, context) {
      var dataKey = this.constructor.DATA_KEY;
      context = context || $(event.currentTarget).data(dataKey);

      if (!context) {
        context = new this.constructor(event.currentTarget, this._getDelegateConfig());
        $(event.currentTarget).data(dataKey, context);
      }

      if (event) {
        context._activeTrigger[event.type === 'focusin' ? TRIGGER_FOCUS : TRIGGER_HOVER] = true;
      }

      if ($(context.getTipElement()).hasClass(CLASS_NAME_SHOW$4) || context._hoverState === HOVER_STATE_SHOW) {
        context._hoverState = HOVER_STATE_SHOW;
        return;
      }

      clearTimeout(context._timeout);
      context._hoverState = HOVER_STATE_SHOW;

      if (!context.config.delay || !context.config.delay.show) {
        context.show();
        return;
      }

      context._timeout = setTimeout(function () {
        if (context._hoverState === HOVER_STATE_SHOW) {
          context.show();
        }
      }, context.config.delay.show);
    };

    _proto._leave = function _leave(event, context) {
      var dataKey = this.constructor.DATA_KEY;
      context = context || $(event.currentTarget).data(dataKey);

      if (!context) {
        context = new this.constructor(event.currentTarget, this._getDelegateConfig());
        $(event.currentTarget).data(dataKey, context);
      }

      if (event) {
        context._activeTrigger[event.type === 'focusout' ? TRIGGER_FOCUS : TRIGGER_HOVER] = false;
      }

      if (context._isWithActiveTrigger()) {
        return;
      }

      clearTimeout(context._timeout);
      context._hoverState = HOVER_STATE_OUT;

      if (!context.config.delay || !context.config.delay.hide) {
        context.hide();
        return;
      }

      context._timeout = setTimeout(function () {
        if (context._hoverState === HOVER_STATE_OUT) {
          context.hide();
        }
      }, context.config.delay.hide);
    };

    _proto._isWithActiveTrigger = function _isWithActiveTrigger() {
      for (var trigger in this._activeTrigger) {
        if (this._activeTrigger[trigger]) {
          return true;
        }
      }

      return false;
    };

    _proto._getConfig = function _getConfig(config) {
      var dataAttributes = $(this.element).data();
      Object.keys(dataAttributes).forEach(function (dataAttr) {
        if (DISALLOWED_ATTRIBUTES.indexOf(dataAttr) !== -1) {
          delete dataAttributes[dataAttr];
        }
      });
      config = _extends({}, this.constructor.Default, dataAttributes, typeof config === 'object' && config ? config : {});

      if (typeof config.delay === 'number') {
        config.delay = {
          show: config.delay,
          hide: config.delay
        };
      }

      if (typeof config.title === 'number') {
        config.title = config.title.toString();
      }

      if (typeof config.content === 'number') {
        config.content = config.content.toString();
      }

      Util.typeCheckConfig(NAME$6, config, this.constructor.DefaultType);

      if (config.sanitize) {
        config.template = sanitizeHtml(config.template, config.whiteList, config.sanitizeFn);
      }

      return config;
    };

    _proto._getDelegateConfig = function _getDelegateConfig() {
      var config = {};

      if (this.config) {
        for (var key in this.config) {
          if (this.constructor.Default[key] !== this.config[key]) {
            config[key] = this.config[key];
          }
        }
      }

      return config;
    };

    _proto._cleanTipClass = function _cleanTipClass() {
      var $tip = $(this.getTipElement());
      var tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX);

      if (tabClass !== null && tabClass.length) {
        $tip.removeClass(tabClass.join(''));
      }
    };

    _proto._handlePopperPlacementChange = function _handlePopperPlacementChange(popperData) {
      this.tip = popperData.instance.popper;

      this._cleanTipClass();

      this.addAttachmentClass(this._getAttachment(popperData.placement));
    };

    _proto._fixTransition = function _fixTransition() {
      var tip = this.getTipElement();
      var initConfigAnimation = this.config.animation;

      if (tip.getAttribute('x-placement') !== null) {
        return;
      }

      $(tip).removeClass(CLASS_NAME_FADE$2);
      this.config.animation = false;
      this.hide();
      this.show();
      this.config.animation = initConfigAnimation;
    } // Static
    ;

    Tooltip._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $(this).data(DATA_KEY$6);

        var _config = typeof config === 'object' && config;

        if (!data && /dispose|hide/.test(config)) {
          return;
        }

        if (!data) {
          data = new Tooltip(this, _config);
          $(this).data(DATA_KEY$6, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config]();
        }
      });
    };

    _createClass(Tooltip, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$6;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default$4;
      }
    }, {
      key: "NAME",
      get: function get() {
        return NAME$6;
      }
    }, {
      key: "DATA_KEY",
      get: function get() {
        return DATA_KEY$6;
      }
    }, {
      key: "Event",
      get: function get() {
        return Event;
      }
    }, {
      key: "EVENT_KEY",
      get: function get() {
        return EVENT_KEY$6;
      }
    }, {
      key: "DefaultType",
      get: function get() {
        return DefaultType$4;
      }
    }]);

    return Tooltip;
  }();
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */


  $.fn[NAME$6] = Tooltip._jQueryInterface;
  $.fn[NAME$6].Constructor = Tooltip;

  $.fn[NAME$6].noConflict = function () {
    $.fn[NAME$6] = JQUERY_NO_CONFLICT$6;
    return Tooltip._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$7 = 'popover';
  var VERSION$7 = '4.5.2';
  var DATA_KEY$7 = 'bs.popover';
  var EVENT_KEY$7 = "." + DATA_KEY$7;
  var JQUERY_NO_CONFLICT$7 = $.fn[NAME$7];
  var CLASS_PREFIX$1 = 'bs-popover';
  var BSCLS_PREFIX_REGEX$1 = new RegExp("(^|\\s)" + CLASS_PREFIX$1 + "\\S+", 'g');

  var Default$5 = _extends({}, Tooltip.Default, {
    placement: 'right',
    trigger: 'click',
    content: '',
    template: '<div class="popover" role="tooltip">' + '<div class="arrow"></div>' + '<h3 class="popover-header"></h3>' + '<div class="popover-body"></div></div>'
  });

  var DefaultType$5 = _extends({}, Tooltip.DefaultType, {
    content: '(string|element|function)'
  });

  var CLASS_NAME_FADE$3 = 'fade';
  var CLASS_NAME_SHOW$5 = 'show';
  var SELECTOR_TITLE = '.popover-header';
  var SELECTOR_CONTENT = '.popover-body';
  var Event$1 = {
    HIDE: "hide" + EVENT_KEY$7,
    HIDDEN: "hidden" + EVENT_KEY$7,
    SHOW: "show" + EVENT_KEY$7,
    SHOWN: "shown" + EVENT_KEY$7,
    INSERTED: "inserted" + EVENT_KEY$7,
    CLICK: "click" + EVENT_KEY$7,
    FOCUSIN: "focusin" + EVENT_KEY$7,
    FOCUSOUT: "focusout" + EVENT_KEY$7,
    MOUSEENTER: "mouseenter" + EVENT_KEY$7,
    MOUSELEAVE: "mouseleave" + EVENT_KEY$7
  };
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Popover = /*#__PURE__*/function (_Tooltip) {
    _inheritsLoose(Popover, _Tooltip);

    function Popover() {
      return _Tooltip.apply(this, arguments) || this;
    }

    var _proto = Popover.prototype;

    // Overrides
    _proto.isWithContent = function isWithContent() {
      return this.getTitle() || this._getContent();
    };

    _proto.addAttachmentClass = function addAttachmentClass(attachment) {
      $(this.getTipElement()).addClass(CLASS_PREFIX$1 + "-" + attachment);
    };

    _proto.getTipElement = function getTipElement() {
      this.tip = this.tip || $(this.config.template)[0];
      return this.tip;
    };

    _proto.setContent = function setContent() {
      var $tip = $(this.getTipElement()); // We use append for html objects to maintain js events

      this.setElementContent($tip.find(SELECTOR_TITLE), this.getTitle());

      var content = this._getContent();

      if (typeof content === 'function') {
        content = content.call(this.element);
      }

      this.setElementContent($tip.find(SELECTOR_CONTENT), content);
      $tip.removeClass(CLASS_NAME_FADE$3 + " " + CLASS_NAME_SHOW$5);
    } // Private
    ;

    _proto._getContent = function _getContent() {
      return this.element.getAttribute('data-content') || this.config.content;
    };

    _proto._cleanTipClass = function _cleanTipClass() {
      var $tip = $(this.getTipElement());
      var tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX$1);

      if (tabClass !== null && tabClass.length > 0) {
        $tip.removeClass(tabClass.join(''));
      }
    } // Static
    ;

    Popover._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $(this).data(DATA_KEY$7);

        var _config = typeof config === 'object' ? config : null;

        if (!data && /dispose|hide/.test(config)) {
          return;
        }

        if (!data) {
          data = new Popover(this, _config);
          $(this).data(DATA_KEY$7, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config]();
        }
      });
    };

    _createClass(Popover, null, [{
      key: "VERSION",
      // Getters
      get: function get() {
        return VERSION$7;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default$5;
      }
    }, {
      key: "NAME",
      get: function get() {
        return NAME$7;
      }
    }, {
      key: "DATA_KEY",
      get: function get() {
        return DATA_KEY$7;
      }
    }, {
      key: "Event",
      get: function get() {
        return Event$1;
      }
    }, {
      key: "EVENT_KEY",
      get: function get() {
        return EVENT_KEY$7;
      }
    }, {
      key: "DefaultType",
      get: function get() {
        return DefaultType$5;
      }
    }]);

    return Popover;
  }(Tooltip);
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */


  $.fn[NAME$7] = Popover._jQueryInterface;
  $.fn[NAME$7].Constructor = Popover;

  $.fn[NAME$7].noConflict = function () {
    $.fn[NAME$7] = JQUERY_NO_CONFLICT$7;
    return Popover._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$8 = 'scrollspy';
  var VERSION$8 = '4.5.2';
  var DATA_KEY$8 = 'bs.scrollspy';
  var EVENT_KEY$8 = "." + DATA_KEY$8;
  var DATA_API_KEY$6 = '.data-api';
  var JQUERY_NO_CONFLICT$8 = $.fn[NAME$8];
  var Default$6 = {
    offset: 10,
    method: 'auto',
    target: ''
  };
  var DefaultType$6 = {
    offset: 'number',
    method: 'string',
    target: '(string|element)'
  };
  var EVENT_ACTIVATE = "activate" + EVENT_KEY$8;
  var EVENT_SCROLL = "scroll" + EVENT_KEY$8;
  var EVENT_LOAD_DATA_API$2 = "load" + EVENT_KEY$8 + DATA_API_KEY$6;
  var CLASS_NAME_DROPDOWN_ITEM = 'dropdown-item';
  var CLASS_NAME_ACTIVE$2 = 'active';
  var SELECTOR_DATA_SPY = '[data-spy="scroll"]';
  var SELECTOR_NAV_LIST_GROUP = '.nav, .list-group';
  var SELECTOR_NAV_LINKS = '.nav-link';
  var SELECTOR_NAV_ITEMS = '.nav-item';
  var SELECTOR_LIST_ITEMS = '.list-group-item';
  var SELECTOR_DROPDOWN = '.dropdown';
  var SELECTOR_DROPDOWN_ITEMS = '.dropdown-item';
  var SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle';
  var METHOD_OFFSET = 'offset';
  var METHOD_POSITION = 'position';
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var ScrollSpy = /*#__PURE__*/function () {
    function ScrollSpy(element, config) {
      var _this = this;

      this._element = element;
      this._scrollElement = element.tagName === 'BODY' ? window : element;
      this._config = this._getConfig(config);
      this._selector = this._config.target + " " + SELECTOR_NAV_LINKS + "," + (this._config.target + " " + SELECTOR_LIST_ITEMS + ",") + (this._config.target + " " + SELECTOR_DROPDOWN_ITEMS);
      this._offsets = [];
      this._targets = [];
      this._activeTarget = null;
      this._scrollHeight = 0;
      $(this._scrollElement).on(EVENT_SCROLL, function (event) {
        return _this._process(event);
      });
      this.refresh();

      this._process();
    } // Getters


    var _proto = ScrollSpy.prototype;

    // Public
    _proto.refresh = function refresh() {
      var _this2 = this;

      var autoMethod = this._scrollElement === this._scrollElement.window ? METHOD_OFFSET : METHOD_POSITION;
      var offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;
      var offsetBase = offsetMethod === METHOD_POSITION ? this._getScrollTop() : 0;
      this._offsets = [];
      this._targets = [];
      this._scrollHeight = this._getScrollHeight();
      var targets = [].slice.call(document.querySelectorAll(this._selector));
      targets.map(function (element) {
        var target;
        var targetSelector = Util.getSelectorFromElement(element);

        if (targetSelector) {
          target = document.querySelector(targetSelector);
        }

        if (target) {
          var targetBCR = target.getBoundingClientRect();

          if (targetBCR.width || targetBCR.height) {
            // TODO (fat): remove sketch reliance on jQuery position/offset
            return [$(target)[offsetMethod]().top + offsetBase, targetSelector];
          }
        }

        return null;
      }).filter(function (item) {
        return item;
      }).sort(function (a, b) {
        return a[0] - b[0];
      }).forEach(function (item) {
        _this2._offsets.push(item[0]);

        _this2._targets.push(item[1]);
      });
    };

    _proto.dispose = function dispose() {
      $.removeData(this._element, DATA_KEY$8);
      $(this._scrollElement).off(EVENT_KEY$8);
      this._element = null;
      this._scrollElement = null;
      this._config = null;
      this._selector = null;
      this._offsets = null;
      this._targets = null;
      this._activeTarget = null;
      this._scrollHeight = null;
    } // Private
    ;

    _proto._getConfig = function _getConfig(config) {
      config = _extends({}, Default$6, typeof config === 'object' && config ? config : {});

      if (typeof config.target !== 'string' && Util.isElement(config.target)) {
        var id = $(config.target).attr('id');

        if (!id) {
          id = Util.getUID(NAME$8);
          $(config.target).attr('id', id);
        }

        config.target = "#" + id;
      }

      Util.typeCheckConfig(NAME$8, config, DefaultType$6);
      return config;
    };

    _proto._getScrollTop = function _getScrollTop() {
      return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;
    };

    _proto._getScrollHeight = function _getScrollHeight() {
      return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);
    };

    _proto._getOffsetHeight = function _getOffsetHeight() {
      return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;
    };

    _proto._process = function _process() {
      var scrollTop = this._getScrollTop() + this._config.offset;

      var scrollHeight = this._getScrollHeight();

      var maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();

      if (this._scrollHeight !== scrollHeight) {
        this.refresh();
      }

      if (scrollTop >= maxScroll) {
        var target = this._targets[this._targets.length - 1];

        if (this._activeTarget !== target) {
          this._activate(target);
        }

        return;
      }

      if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {
        this._activeTarget = null;

        this._clear();

        return;
      }

      for (var i = this._offsets.length; i--;) {
        var isActiveTarget = this._activeTarget !== this._targets[i] && scrollTop >= this._offsets[i] && (typeof this._offsets[i + 1] === 'undefined' || scrollTop < this._offsets[i + 1]);

        if (isActiveTarget) {
          this._activate(this._targets[i]);
        }
      }
    };

    _proto._activate = function _activate(target) {
      this._activeTarget = target;

      this._clear();

      var queries = this._selector.split(',').map(function (selector) {
        return selector + "[data-target=\"" + target + "\"]," + selector + "[href=\"" + target + "\"]";
      });

      var $link = $([].slice.call(document.querySelectorAll(queries.join(','))));

      if ($link.hasClass(CLASS_NAME_DROPDOWN_ITEM)) {
        $link.closest(SELECTOR_DROPDOWN).find(SELECTOR_DROPDOWN_TOGGLE).addClass(CLASS_NAME_ACTIVE$2);
        $link.addClass(CLASS_NAME_ACTIVE$2);
      } else {
        // Set triggered link as active
        $link.addClass(CLASS_NAME_ACTIVE$2); // Set triggered links parents as active
        // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor

        $link.parents(SELECTOR_NAV_LIST_GROUP).prev(SELECTOR_NAV_LINKS + ", " + SELECTOR_LIST_ITEMS).addClass(CLASS_NAME_ACTIVE$2); // Handle special case when .nav-link is inside .nav-item

        $link.parents(SELECTOR_NAV_LIST_GROUP).prev(SELECTOR_NAV_ITEMS).children(SELECTOR_NAV_LINKS).addClass(CLASS_NAME_ACTIVE$2);
      }

      $(this._scrollElement).trigger(EVENT_ACTIVATE, {
        relatedTarget: target
      });
    };

    _proto._clear = function _clear() {
      [].slice.call(document.querySelectorAll(this._selector)).filter(function (node) {
        return node.classList.contains(CLASS_NAME_ACTIVE$2);
      }).forEach(function (node) {
        return node.classList.remove(CLASS_NAME_ACTIVE$2);
      });
    } // Static
    ;

    ScrollSpy._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $(this).data(DATA_KEY$8);

        var _config = typeof config === 'object' && config;

        if (!data) {
          data = new ScrollSpy(this, _config);
          $(this).data(DATA_KEY$8, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config]();
        }
      });
    };

    _createClass(ScrollSpy, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$8;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default$6;
      }
    }]);

    return ScrollSpy;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $(window).on(EVENT_LOAD_DATA_API$2, function () {
    var scrollSpys = [].slice.call(document.querySelectorAll(SELECTOR_DATA_SPY));
    var scrollSpysLength = scrollSpys.length;

    for (var i = scrollSpysLength; i--;) {
      var $spy = $(scrollSpys[i]);

      ScrollSpy._jQueryInterface.call($spy, $spy.data());
    }
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME$8] = ScrollSpy._jQueryInterface;
  $.fn[NAME$8].Constructor = ScrollSpy;

  $.fn[NAME$8].noConflict = function () {
    $.fn[NAME$8] = JQUERY_NO_CONFLICT$8;
    return ScrollSpy._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$9 = 'tab';
  var VERSION$9 = '4.5.2';
  var DATA_KEY$9 = 'bs.tab';
  var EVENT_KEY$9 = "." + DATA_KEY$9;
  var DATA_API_KEY$7 = '.data-api';
  var JQUERY_NO_CONFLICT$9 = $.fn[NAME$9];
  var EVENT_HIDE$3 = "hide" + EVENT_KEY$9;
  var EVENT_HIDDEN$3 = "hidden" + EVENT_KEY$9;
  var EVENT_SHOW$3 = "show" + EVENT_KEY$9;
  var EVENT_SHOWN$3 = "shown" + EVENT_KEY$9;
  var EVENT_CLICK_DATA_API$6 = "click" + EVENT_KEY$9 + DATA_API_KEY$7;
  var CLASS_NAME_DROPDOWN_MENU = 'dropdown-menu';
  var CLASS_NAME_ACTIVE$3 = 'active';
  var CLASS_NAME_DISABLED$1 = 'disabled';
  var CLASS_NAME_FADE$4 = 'fade';
  var CLASS_NAME_SHOW$6 = 'show';
  var SELECTOR_DROPDOWN$1 = '.dropdown';
  var SELECTOR_NAV_LIST_GROUP$1 = '.nav, .list-group';
  var SELECTOR_ACTIVE$2 = '.active';
  var SELECTOR_ACTIVE_UL = '> li > .active';
  var SELECTOR_DATA_TOGGLE$4 = '[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]';
  var SELECTOR_DROPDOWN_TOGGLE$1 = '.dropdown-toggle';
  var SELECTOR_DROPDOWN_ACTIVE_CHILD = '> .dropdown-menu .active';
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Tab = /*#__PURE__*/function () {
    function Tab(element) {
      this._element = element;
    } // Getters


    var _proto = Tab.prototype;

    // Public
    _proto.show = function show() {
      var _this = this;

      if (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && $(this._element).hasClass(CLASS_NAME_ACTIVE$3) || $(this._element).hasClass(CLASS_NAME_DISABLED$1)) {
        return;
      }

      var target;
      var previous;
      var listElement = $(this._element).closest(SELECTOR_NAV_LIST_GROUP$1)[0];
      var selector = Util.getSelectorFromElement(this._element);

      if (listElement) {
        var itemSelector = listElement.nodeName === 'UL' || listElement.nodeName === 'OL' ? SELECTOR_ACTIVE_UL : SELECTOR_ACTIVE$2;
        previous = $.makeArray($(listElement).find(itemSelector));
        previous = previous[previous.length - 1];
      }

      var hideEvent = $.Event(EVENT_HIDE$3, {
        relatedTarget: this._element
      });
      var showEvent = $.Event(EVENT_SHOW$3, {
        relatedTarget: previous
      });

      if (previous) {
        $(previous).trigger(hideEvent);
      }

      $(this._element).trigger(showEvent);

      if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) {
        return;
      }

      if (selector) {
        target = document.querySelector(selector);
      }

      this._activate(this._element, listElement);

      var complete = function complete() {
        var hiddenEvent = $.Event(EVENT_HIDDEN$3, {
          relatedTarget: _this._element
        });
        var shownEvent = $.Event(EVENT_SHOWN$3, {
          relatedTarget: previous
        });
        $(previous).trigger(hiddenEvent);
        $(_this._element).trigger(shownEvent);
      };

      if (target) {
        this._activate(target, target.parentNode, complete);
      } else {
        complete();
      }
    };

    _proto.dispose = function dispose() {
      $.removeData(this._element, DATA_KEY$9);
      this._element = null;
    } // Private
    ;

    _proto._activate = function _activate(element, container, callback) {
      var _this2 = this;

      var activeElements = container && (container.nodeName === 'UL' || container.nodeName === 'OL') ? $(container).find(SELECTOR_ACTIVE_UL) : $(container).children(SELECTOR_ACTIVE$2);
      var active = activeElements[0];
      var isTransitioning = callback && active && $(active).hasClass(CLASS_NAME_FADE$4);

      var complete = function complete() {
        return _this2._transitionComplete(element, active, callback);
      };

      if (active && isTransitioning) {
        var transitionDuration = Util.getTransitionDurationFromElement(active);
        $(active).removeClass(CLASS_NAME_SHOW$6).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
      } else {
        complete();
      }
    };

    _proto._transitionComplete = function _transitionComplete(element, active, callback) {
      if (active) {
        $(active).removeClass(CLASS_NAME_ACTIVE$3);
        var dropdownChild = $(active.parentNode).find(SELECTOR_DROPDOWN_ACTIVE_CHILD)[0];

        if (dropdownChild) {
          $(dropdownChild).removeClass(CLASS_NAME_ACTIVE$3);
        }

        if (active.getAttribute('role') === 'tab') {
          active.setAttribute('aria-selected', false);
        }
      }

      $(element).addClass(CLASS_NAME_ACTIVE$3);

      if (element.getAttribute('role') === 'tab') {
        element.setAttribute('aria-selected', true);
      }

      Util.reflow(element);

      if (element.classList.contains(CLASS_NAME_FADE$4)) {
        element.classList.add(CLASS_NAME_SHOW$6);
      }

      if (element.parentNode && $(element.parentNode).hasClass(CLASS_NAME_DROPDOWN_MENU)) {
        var dropdownElement = $(element).closest(SELECTOR_DROPDOWN$1)[0];

        if (dropdownElement) {
          var dropdownToggleList = [].slice.call(dropdownElement.querySelectorAll(SELECTOR_DROPDOWN_TOGGLE$1));
          $(dropdownToggleList).addClass(CLASS_NAME_ACTIVE$3);
        }

        element.setAttribute('aria-expanded', true);
      }

      if (callback) {
        callback();
      }
    } // Static
    ;

    Tab._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var $this = $(this);
        var data = $this.data(DATA_KEY$9);

        if (!data) {
          data = new Tab(this);
          $this.data(DATA_KEY$9, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config]();
        }
      });
    };

    _createClass(Tab, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$9;
      }
    }]);

    return Tab;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $(document).on(EVENT_CLICK_DATA_API$6, SELECTOR_DATA_TOGGLE$4, function (event) {
    event.preventDefault();

    Tab._jQueryInterface.call($(this), 'show');
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME$9] = Tab._jQueryInterface;
  $.fn[NAME$9].Constructor = Tab;

  $.fn[NAME$9].noConflict = function () {
    $.fn[NAME$9] = JQUERY_NO_CONFLICT$9;
    return Tab._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$a = 'toast';
  var VERSION$a = '4.5.2';
  var DATA_KEY$a = 'bs.toast';
  var EVENT_KEY$a = "." + DATA_KEY$a;
  var JQUERY_NO_CONFLICT$a = $.fn[NAME$a];
  var EVENT_CLICK_DISMISS$1 = "click.dismiss" + EVENT_KEY$a;
  var EVENT_HIDE$4 = "hide" + EVENT_KEY$a;
  var EVENT_HIDDEN$4 = "hidden" + EVENT_KEY$a;
  var EVENT_SHOW$4 = "show" + EVENT_KEY$a;
  var EVENT_SHOWN$4 = "shown" + EVENT_KEY$a;
  var CLASS_NAME_FADE$5 = 'fade';
  var CLASS_NAME_HIDE = 'hide';
  var CLASS_NAME_SHOW$7 = 'show';
  var CLASS_NAME_SHOWING = 'showing';
  var DefaultType$7 = {
    animation: 'boolean',
    autohide: 'boolean',
    delay: 'number'
  };
  var Default$7 = {
    animation: true,
    autohide: true,
    delay: 500
  };
  var SELECTOR_DATA_DISMISS$1 = '[data-dismiss="toast"]';
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Toast = /*#__PURE__*/function () {
    function Toast(element, config) {
      this._element = element;
      this._config = this._getConfig(config);
      this._timeout = null;

      this._setListeners();
    } // Getters


    var _proto = Toast.prototype;

    // Public
    _proto.show = function show() {
      var _this = this;

      var showEvent = $.Event(EVENT_SHOW$4);
      $(this._element).trigger(showEvent);

      if (showEvent.isDefaultPrevented()) {
        return;
      }

      this._clearTimeout();

      if (this._config.animation) {
        this._element.classList.add(CLASS_NAME_FADE$5);
      }

      var complete = function complete() {
        _this._element.classList.remove(CLASS_NAME_SHOWING);

        _this._element.classList.add(CLASS_NAME_SHOW$7);

        $(_this._element).trigger(EVENT_SHOWN$4);

        if (_this._config.autohide) {
          _this._timeout = setTimeout(function () {
            _this.hide();
          }, _this._config.delay);
        }
      };

      this._element.classList.remove(CLASS_NAME_HIDE);

      Util.reflow(this._element);

      this._element.classList.add(CLASS_NAME_SHOWING);

      if (this._config.animation) {
        var transitionDuration = Util.getTransitionDurationFromElement(this._element);
        $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
      } else {
        complete();
      }
    };

    _proto.hide = function hide() {
      if (!this._element.classList.contains(CLASS_NAME_SHOW$7)) {
        return;
      }

      var hideEvent = $.Event(EVENT_HIDE$4);
      $(this._element).trigger(hideEvent);

      if (hideEvent.isDefaultPrevented()) {
        return;
      }

      this._close();
    };

    _proto.dispose = function dispose() {
      this._clearTimeout();

      if (this._element.classList.contains(CLASS_NAME_SHOW$7)) {
        this._element.classList.remove(CLASS_NAME_SHOW$7);
      }

      $(this._element).off(EVENT_CLICK_DISMISS$1);
      $.removeData(this._element, DATA_KEY$a);
      this._element = null;
      this._config = null;
    } // Private
    ;

    _proto._getConfig = function _getConfig(config) {
      config = _extends({}, Default$7, $(this._element).data(), typeof config === 'object' && config ? config : {});
      Util.typeCheckConfig(NAME$a, config, this.constructor.DefaultType);
      return config;
    };

    _proto._setListeners = function _setListeners() {
      var _this2 = this;

      $(this._element).on(EVENT_CLICK_DISMISS$1, SELECTOR_DATA_DISMISS$1, function () {
        return _this2.hide();
      });
    };

    _proto._close = function _close() {
      var _this3 = this;

      var complete = function complete() {
        _this3._element.classList.add(CLASS_NAME_HIDE);

        $(_this3._element).trigger(EVENT_HIDDEN$4);
      };

      this._element.classList.remove(CLASS_NAME_SHOW$7);

      if (this._config.animation) {
        var transitionDuration = Util.getTransitionDurationFromElement(this._element);
        $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
      } else {
        complete();
      }
    };

    _proto._clearTimeout = function _clearTimeout() {
      clearTimeout(this._timeout);
      this._timeout = null;
    } // Static
    ;

    Toast._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var $element = $(this);
        var data = $element.data(DATA_KEY$a);

        var _config = typeof config === 'object' && config;

        if (!data) {
          data = new Toast(this, _config);
          $element.data(DATA_KEY$a, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config](this);
        }
      });
    };

    _createClass(Toast, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$a;
      }
    }, {
      key: "DefaultType",
      get: function get() {
        return DefaultType$7;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default$7;
      }
    }]);

    return Toast;
  }();
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */


  $.fn[NAME$a] = Toast._jQueryInterface;
  $.fn[NAME$a].Constructor = Toast;

  $.fn[NAME$a].noConflict = function () {
    $.fn[NAME$a] = JQUERY_NO_CONFLICT$a;
    return Toast._jQueryInterface;
  };

  exports.Alert = Alert;
  exports.Button = Button;
  exports.Carousel = Carousel;
  exports.Collapse = Collapse;
  exports.Dropdown = Dropdown;
  exports.Modal = Modal;
  exports.Popover = Popover;
  exports.Scrollspy = ScrollSpy;
  exports.Tab = Tab;
  exports.Toast = Toast;
  exports.Tooltip = Tooltip;
  exports.Util = Util;

  Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=bootstrap.js.map


/***/ }),

/***/ "./node_modules/jquery/dist/jquery.js":
/*!********************************************!*\
  !*** ./node_modules/jquery/dist/jquery.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery JavaScript Library v3.5.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2020-05-04T22:49Z
 */
( function( global, factory ) {

	"use strict";

	if (  true && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var flat = arr.flat ? function( array ) {
	return arr.flat.call( array );
} : function( array ) {
	return arr.concat.apply( [], array );
};


var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};

var isFunction = function isFunction( obj ) {

      // Support: Chrome <=57, Firefox <=52
      // In some browsers, typeof returns "function" for HTML <object> elements
      // (i.e., `typeof document.createElement( "object" ) === "function"`).
      // We don't want to classify *any* DOM node as a function.
      return typeof obj === "function" && typeof obj.nodeType !== "number";
  };


var isWindow = function isWindow( obj ) {
		return obj != null && obj === obj.window;
	};


var document = window.document;



	var preservedScriptAttributes = {
		type: true,
		src: true,
		nonce: true,
		noModule: true
	};

	function DOMEval( code, node, doc ) {
		doc = doc || document;

		var i, val,
			script = doc.createElement( "script" );

		script.text = code;
		if ( node ) {
			for ( i in preservedScriptAttributes ) {

				// Support: Firefox 64+, Edge 18+
				// Some browsers don't support the "nonce" property on scripts.
				// On the other hand, just using `getAttribute` is not enough as
				// the `nonce` attribute is reset to an empty string whenever it
				// becomes browsing-context connected.
				// See https://github.com/whatwg/html/issues/2369
				// See https://html.spec.whatwg.org/#nonce-attributes
				// The `node.getAttribute` check was added for the sake of
				// `jQuery.globalEval` so that it can fake a nonce-containing node
				// via an object.
				val = node[ i ] || node.getAttribute && node.getAttribute( i );
				if ( val ) {
					script.setAttribute( i, val );
				}
			}
		}
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}


function toType( obj ) {
	if ( obj == null ) {
		return obj + "";
	}

	// Support: Android <=2.3 only (functionish RegExp)
	return typeof obj === "object" || typeof obj === "function" ?
		class2type[ toString.call( obj ) ] || "object" :
		typeof obj;
}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.5.1",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	even: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return ( i + 1 ) % 2;
		} ) );
	},

	odd: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return i % 2;
		} ) );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				copy = options[ name ];

				// Prevent Object.prototype pollution
				// Prevent never-ending loop
				if ( name === "__proto__" || target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = Array.isArray( copy ) ) ) ) {
					src = target[ name ];

					// Ensure proper type for the source value
					if ( copyIsArray && !Array.isArray( src ) ) {
						clone = [];
					} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {
						clone = {};
					} else {
						clone = src;
					}
					copyIsArray = false;

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	// Evaluates a script in a provided context; falls back to the global one
	// if not specified.
	globalEval: function( code, options, doc ) {
		DOMEval( code, { nonce: options && options.nonce }, doc );
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return flat( ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
function( _i, name ) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = toType( obj );

	if ( isFunction( obj ) || isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.5
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2020-03-14
 */
( function( window ) {
var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	nonnativeSelectorCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ( {} ).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	pushNative = arr.push,
	push = arr.push,
	slice = arr.slice,

	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[ i ] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|" +
		"ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram
	identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace +
		"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +

		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +

		// "Attribute values must be CSS identifiers [capture 5]
		// or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" +
		whitespace + "*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +

		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +

		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +

		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" +
		whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace +
		"*" ),
	rdescend = new RegExp( whitespace + "|>" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
			whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" +
			whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),

		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace +
			"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace +
			"*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rhtml = /HTML$/i,
	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\([^\\r\\n\\f])", "g" ),
	funescape = function( escape, nonHex ) {
		var high = "0x" + escape.slice( 1 ) - 0x10000;

		return nonHex ?

			// Strip the backslash prefix from a non-hex escape sequence
			nonHex :

			// Replace a hexadecimal escape sequence with the encoded Unicode code point
			// Support: IE <=11+
			// For values outside the Basic Multilingual Plane (BMP), manually construct a
			// surrogate pair
			high < 0 ?
				String.fromCharCode( high + 0x10000 ) :
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" +
				ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	inDisabledFieldset = addCombinator(
		function( elem ) {
			return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		( arr = slice.call( preferredDoc.childNodes ) ),
		preferredDoc.childNodes
	);

	// Support: Android<4.0
	// Detect silently failing push.apply
	// eslint-disable-next-line no-unused-expressions
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			pushNative.apply( target, slice.call( els ) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;

			// Can't trust NodeList.length
			while ( ( target[ j++ ] = els[ i++ ] ) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {
		setDocument( context );
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {

				// ID selector
				if ( ( m = match[ 1 ] ) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( ( elem = context.getElementById( m ) ) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && ( elem = newContext.getElementById( m ) ) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[ 2 ] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!nonnativeSelectorCache[ selector + " " ] &&
				( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&

				// Support: IE 8 only
				// Exclude object elements
				( nodeType !== 1 || context.nodeName.toLowerCase() !== "object" ) ) {

				newSelector = selector;
				newContext = context;

				// qSA considers elements outside a scoping root when evaluating child or
				// descendant combinators, which is not what we want.
				// In such cases, we work around the behavior by prefixing every selector in the
				// list with an ID selector referencing the scope context.
				// The technique has to be used as well when a leading combinator is used
				// as such selectors are not recognized by querySelectorAll.
				// Thanks to Andrew Dupont for this technique.
				if ( nodeType === 1 &&
					( rdescend.test( selector ) || rcombinators.test( selector ) ) ) {

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;

					// We can use :scope instead of the ID hack if the browser
					// supports it & if we're not changing the context.
					if ( newContext !== context || !support.scope ) {

						// Capture the context ID, setting it first if necessary
						if ( ( nid = context.getAttribute( "id" ) ) ) {
							nid = nid.replace( rcssescape, fcssescape );
						} else {
							context.setAttribute( "id", ( nid = expando ) );
						}
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[ i ] = ( nid ? "#" + nid : ":scope" ) + " " +
							toSelector( groups[ i ] );
					}
					newSelector = groups.join( "," );
				}

				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch ( qsaError ) {
					nonnativeSelectorCache( selector, true );
				} finally {
					if ( nid === expando ) {
						context.removeAttribute( "id" );
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {

		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {

			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return ( cache[ key + " " ] = value );
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement( "fieldset" );

	try {
		return !!fn( el );
	} catch ( e ) {
		return false;
	} finally {

		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}

		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split( "|" ),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[ i ] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( ( cur = cur.nextSibling ) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return ( name === "input" || name === "button" ) && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
					inDisabledFieldset( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction( function( argument ) {
		argument = +argument;
		return markFunction( function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ ( j = matchIndexes[ i ] ) ] ) {
					seed[ j ] = !( matches[ j ] = seed[ j ] );
				}
			}
		} );
	} );
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	var namespace = elem.namespaceURI,
		docElem = ( elem.ownerDocument || elem ).documentElement;

	// Support: IE <=8
	// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
	// https://bugs.jquery.com/ticket/4833
	return !rhtml.test( namespace || docElem && docElem.nodeName || "HTML" );
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9 - 11+, Edge 12 - 18+
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( preferredDoc != document &&
		( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,
	// Safari 4 - 5 only, Opera <=11.6 - 12.x only
	// IE/Edge & older browsers don't support the :scope pseudo-class.
	// Support: Safari 6.0 only
	// Safari 6.0 supports :scope but it's an alias of :root there.
	support.scope = assert( function( el ) {
		docElem.appendChild( el ).appendChild( document.createElement( "div" ) );
		return typeof el.querySelectorAll !== "undefined" &&
			!el.querySelectorAll( ":scope fieldset div" ).length;
	} );

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert( function( el ) {
		el.className = "i";
		return !el.getAttribute( "className" );
	} );

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert( function( el ) {
		el.appendChild( document.createComment( "" ) );
		return !el.getElementsByTagName( "*" ).length;
	} );

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert( function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	} );

	// ID filter and find
	if ( support.getById ) {
		Expr.filter[ "ID" ] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute( "id" ) === attrId;
			};
		};
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter[ "ID" ] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode( "id" );
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode( "id" );
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( ( elem = elems[ i++ ] ) ) {
						node = elem.getAttributeNode( "id" );
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find[ "TAG" ] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,

				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( ( elem = results[ i++ ] ) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find[ "CLASS" ] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {

		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert( function( el ) {

			var input;

			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll( "[msallowcapture^='']" ).length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll( "[selected]" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push( "~=" );
			}

			// Support: IE 11+, Edge 15 - 18+
			// IE 11/Edge don't find elements on a `[name='']` query in some cases.
			// Adding a temporary attribute to the document before the selection works
			// around the issue.
			// Interestingly, IE 10 & older don't seem to have the issue.
			input = document.createElement( "input" );
			input.setAttribute( "name", "" );
			el.appendChild( input );
			if ( !el.querySelectorAll( "[name='']" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*name" + whitespace + "*=" +
					whitespace + "*(?:''|\"\")" );
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll( ":checked" ).length ) {
				rbuggyQSA.push( ":checked" );
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push( ".#.+[+~]" );
			}

			// Support: Firefox <=3.6 - 5 only
			// Old Firefox doesn't throw on a badly-escaped identifier.
			el.querySelectorAll( "\\\f" );
			rbuggyQSA.push( "[\\r\\n\\f]" );
		} );

		assert( function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement( "input" );
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll( "[name=d]" ).length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll( ":enabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll( ":disabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: Opera 10 - 11 only
			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll( "*,:x" );
			rbuggyQSA.push( ",.*:" );
		} );
	}

	if ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector ) ) ) ) {

		assert( function( el ) {

			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		} );
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( "|" ) );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( "|" ) );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			) );
		} :
		function( a, b ) {
			if ( b ) {
				while ( ( b = b.parentNode ) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		// Support: IE 11+, Edge 17 - 18+
		// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
		// two documents; shallow comparisons work.
		// eslint-disable-next-line eqeqeq
		compare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {

			// Choose the first element that is related to our preferred document
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( a == document || a.ownerDocument == preferredDoc &&
				contains( preferredDoc, a ) ) {
				return -1;
			}

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( b == document || b.ownerDocument == preferredDoc &&
				contains( preferredDoc, b ) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {

		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			return a == document ? -1 :
				b == document ? 1 :
				/* eslint-enable eqeqeq */
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( ( cur = cur.parentNode ) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( ( cur = cur.parentNode ) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[ i ] === bp[ i ] ) {
			i++;
		}

		return i ?

			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[ i ], bp[ i ] ) :

			// Otherwise nodes in our document sort first
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			ap[ i ] == preferredDoc ? -1 :
			bp[ i ] == preferredDoc ? 1 :
			/* eslint-enable eqeqeq */
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	setDocument( elem );

	if ( support.matchesSelector && documentIsHTML &&
		!nonnativeSelectorCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||

				// As well, disconnected nodes are said to be in a document
				// fragment in IE 9
				elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch ( e ) {
			nonnativeSelectorCache( expr, true );
		}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( context.ownerDocument || context ) != document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( elem.ownerDocument || elem ) != document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],

		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			( val = elem.getAttributeNode( name ) ) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return ( sel + "" ).replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( ( elem = results[ i++ ] ) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {

		// If no nodeType, this is expected to be an array
		while ( ( node = elem[ i++ ] ) ) {

			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {

		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {

			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}

	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[ 1 ] = match[ 1 ].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[ 3 ] = ( match[ 3 ] || match[ 4 ] ||
				match[ 5 ] || "" ).replace( runescape, funescape );

			if ( match[ 2 ] === "~=" ) {
				match[ 3 ] = " " + match[ 3 ] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {

			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[ 1 ] = match[ 1 ].toLowerCase();

			if ( match[ 1 ].slice( 0, 3 ) === "nth" ) {

				// nth-* requires argument
				if ( !match[ 3 ] ) {
					Sizzle.error( match[ 0 ] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[ 4 ] = +( match[ 4 ] ?
					match[ 5 ] + ( match[ 6 ] || 1 ) :
					2 * ( match[ 3 ] === "even" || match[ 3 ] === "odd" ) );
				match[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === "odd" );

				// other types prohibit arguments
			} else if ( match[ 3 ] ) {
				Sizzle.error( match[ 0 ] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[ 6 ] && match[ 2 ];

			if ( matchExpr[ "CHILD" ].test( match[ 0 ] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[ 3 ] ) {
				match[ 2 ] = match[ 4 ] || match[ 5 ] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&

				// Get excess from tokenize (recursively)
				( excess = tokenize( unquoted, true ) ) &&

				// advance to the next closing parenthesis
				( excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length ) ) {

				// excess is a negative index
				match[ 0 ] = match[ 0 ].slice( 0, excess );
				match[ 2 ] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() {
					return true;
				} :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				( pattern = new RegExp( "(^|" + whitespace +
					")" + className + "(" + whitespace + "|$)" ) ) && classCache(
						className, function( elem ) {
							return pattern.test(
								typeof elem.className === "string" && elem.className ||
								typeof elem.getAttribute !== "undefined" &&
									elem.getAttribute( "class" ) ||
								""
							);
				} );
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				/* eslint-disable max-len */

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
				/* eslint-enable max-len */

			};
		},

		"CHILD": function( type, what, _argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, _context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( ( node = node[ dir ] ) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}

								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || ( node[ expando ] = {} );

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								( outerCache[ node.uniqueID ] = {} );

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( ( node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								( diff = nodeIndex = 0 ) || start.pop() ) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {

							// Use previously-cached element index if available
							if ( useCache ) {

								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || ( node[ expando ] = {} );

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									( outerCache[ node.uniqueID ] = {} );

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {

								// Use the same loop as above to seek `elem` from the start
								while ( ( node = ++nodeIndex && node && node[ dir ] ||
									( diff = nodeIndex = 0 ) || start.pop() ) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] ||
												( node[ expando ] = {} );

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												( outerCache[ node.uniqueID ] = {} );

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {

			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction( function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[ i ] );
							seed[ idx ] = !( matches[ idx ] = matched[ i ] );
						}
					} ) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {

		// Potentially complex pseudos
		"not": markFunction( function( selector ) {

			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction( function( seed, matches, _context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( ( elem = unmatched[ i ] ) ) {
							seed[ i ] = !( matches[ i ] = elem );
						}
					}
				} ) :
				function( elem, _context, xml ) {
					input[ 0 ] = elem;
					matcher( input, null, xml, results );

					// Don't keep the element (issue #299)
					input[ 0 ] = null;
					return !results.pop();
				};
		} ),

		"has": markFunction( function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		} ),

		"contains": markFunction( function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;
			};
		} ),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {

			// lang value must be a valid identifier
			if ( !ridentifier.test( lang || "" ) ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( ( elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute( "xml:lang" ) || elem.getAttribute( "lang" ) ) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );
				return false;
			};
		} ),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement &&
				( !document.hasFocus || document.hasFocus() ) &&
				!!( elem.type || elem.href || ~elem.tabIndex );
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {

			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return ( nodeName === "input" && !!elem.checked ) ||
				( nodeName === "option" && !!elem.selected );
		},

		"selected": function( elem ) {

			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				// eslint-disable-next-line no-unused-expressions
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {

			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos[ "empty" ]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( ( attr = elem.getAttribute( "type" ) ) == null ||
					attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo( function() {
			return [ 0 ];
		} ),

		"last": createPositionalPseudo( function( _matchIndexes, length ) {
			return [ length - 1 ];
		} ),

		"eq": createPositionalPseudo( function( _matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		} ),

		"even": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"odd": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"lt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ?
				argument + length :
				argument > length ?
					length :
					argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"gt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} )
	}
};

Expr.pseudos[ "nth" ] = Expr.pseudos[ "eq" ];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || ( match = rcomma.exec( soFar ) ) ) {
			if ( match ) {

				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[ 0 ].length ) || soFar;
			}
			groups.push( ( tokens = [] ) );
		}

		matched = false;

		// Combinators
		if ( ( match = rcombinators.exec( soFar ) ) ) {
			matched = match.shift();
			tokens.push( {
				value: matched,

				// Cast descendant combinators to space
				type: match[ 0 ].replace( rtrim, " " )
			} );
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||
				( match = preFilters[ type ]( match ) ) ) ) {
				matched = match.shift();
				tokens.push( {
					value: matched,
					type: type,
					matches: match
				} );
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :

			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[ i ].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?

		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( ( elem = elem[ dir ] ) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || ( elem[ expando ] = {} );

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] ||
							( outerCache[ elem.uniqueID ] = {} );

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( ( oldCache = uniqueCache[ key ] ) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return ( newCache[ 2 ] = oldCache[ 2 ] );
						} else {

							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[ i ]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[ 0 ];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[ i ], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( ( elem = unmatched[ i ] ) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction( function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts(
				selector || "*",
				context.nodeType ? [ context ] : context,
				[]
			),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?

				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( ( elem = temp[ i ] ) ) {
					matcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {

					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( ( elem = matcherOut[ i ] ) ) {

							// Restore matcherIn since elem is not yet a final match
							temp.push( ( matcherIn[ i ] = elem ) );
						}
					}
					postFinder( null, ( matcherOut = [] ), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( ( elem = matcherOut[ i ] ) &&
						( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {

						seed[ temp ] = !( results[ temp ] = elem );
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	} );
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[ 0 ].type ],
		implicitRelative = leadingRelative || Expr.relative[ " " ],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				( checkContext = context ).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );

			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {
			matchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];
		} else {
			matcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {

				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[ j ].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(

					// If the preceding token was a descendant combinator, insert an implicit any-element `*`
					tokens
						.slice( 0, i - 1 )
						.concat( { value: tokens[ i - 2 ].type === " " ? "*" : "" } )
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,

				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find[ "TAG" ]( "*", outermost ),

				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),
				len = elems.length;

			if ( outermost ) {

				// Support: IE 11+, Edge 17 - 18+
				// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
				// two documents; shallow comparisons work.
				// eslint-disable-next-line eqeqeq
				outermostContext = context == document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;

					// Support: IE 11+, Edge 17 - 18+
					// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
					// two documents; shallow comparisons work.
					// eslint-disable-next-line eqeqeq
					if ( !context && elem.ownerDocument != document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( ( matcher = elementMatchers[ j++ ] ) ) {
						if ( matcher( elem, context || document, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {

					// They will have gone through all possible matchers
					if ( ( elem = !matcher && elem ) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( ( matcher = setMatchers[ j++ ] ) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {

					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !( unmatched[ i ] || setMatched[ i ] ) ) {
								setMatched[ i ] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {

		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[ i ] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache(
			selector,
			matcherFromGroupMatchers( elementMatchers, setMatchers )
		);

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( ( selector = compiled.selector || selector ) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[ 0 ] = match[ 0 ].slice( 0 );
		if ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === "ID" &&
			context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {

			context = ( Expr.find[ "ID" ]( token.matches[ 0 ]
				.replace( runescape, funescape ), context ) || [] )[ 0 ];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr[ "needsContext" ].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[ i ];

			// Abort if we hit a combinator
			if ( Expr.relative[ ( type = token.type ) ] ) {
				break;
			}
			if ( ( find = Expr.find[ type ] ) ) {

				// Search, expanding context for leading sibling combinators
				if ( ( seed = find(
					token.matches[ 0 ].replace( runescape, funescape ),
					rsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||
						context
				) ) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split( "" ).sort( sortOrder ).join( "" ) === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert( function( el ) {

	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement( "fieldset" ) ) & 1;
} );

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert( function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute( "href" ) === "#";
} ) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	} );
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert( function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
} ) ) {
	addHandle( "value", function( elem, _name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	} );
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert( function( el ) {
	return el.getAttribute( "disabled" ) == null;
} ) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
				( val = elem.getAttributeNode( name ) ) && val.specified ?
					val.value :
					null;
		}
	} );
}

return Sizzle;

} )( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;



function nodeName( elem, name ) {

  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

};
var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Filtered directly for both simple and complex selectors
	return jQuery.filter( qualifier, elements, not );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, _i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, _i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, _i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		if ( elem.contentDocument != null &&

			// Support: IE 11+
			// <object> elements with no `data` attribute has an object
			// `contentDocument` with a `null` prototype.
			getProto( elem.contentDocument ) ) {

			return elem.contentDocument;
		}

		// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
		// Treat the template element as a regular one in browsers that
		// don't support it.
		if ( nodeName( elem, "template" ) ) {
			elem = elem.content || elem;
		}

		return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = locked || options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && toType( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject, noValue ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
			// * false: [ value ].slice( 0 ) => resolve( value )
			// * true: [ value ].slice( 1 ) => resolve()
			resolve.apply( undefined, [ value ].slice( noValue ) );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.apply( undefined, [ value ] );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( _i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// rejected_handlers.disable
					// fulfilled_handlers.disable
					tuples[ 3 - i ][ 3 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock,

					// progress_handlers.lock
					tuples[ 0 ][ 3 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the master Deferred
			master = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						master.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,
				!remaining );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( master.state() === "pending" ||
				isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return master.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), master.reject );
		}

		return master.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( toType( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, _key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
					value :
					value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};


// Matches dashed string for camelizing
var rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g;

// Used by camelCase as callback to replace()
function fcamelCase( _all, letter ) {
	return letter.toUpperCase();
}

// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (#9572)
function camelCase( string ) {
	return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
}
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( Array.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( camelCase );
			} else {
				key = camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || Array.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var documentElement = document.documentElement;



	var isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem );
		},
		composed = { composed: true };

	// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
	// Check attachment across shadow DOM boundaries when possible (gh-3504)
	// Support: iOS 10.0-10.2 only
	// Early iOS 10 versions support `attachShadow` but not `getRootNode`,
	// leading to errors. We need to check for `getRootNode`.
	if ( documentElement.getRootNode ) {
		isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem ) ||
				elem.getRootNode( composed ) === elem.ownerDocument;
		};
	}
var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			isAttached( elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};



function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted, scale,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = elem.nodeType &&
			( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Support: Firefox <=54
		// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
		initial = initial / 2;

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		while ( maxIterations-- ) {

			// Evaluate and update our best guess (doubling guesses that zero out).
			// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
			jQuery.style( elem, prop, initialInUnit + unit );
			if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
				maxIterations = 0;
			}
			initialInUnit = initialInUnit / scale;

		}

		initialInUnit = initialInUnit * 2;
		jQuery.style( elem, prop, initialInUnit + unit );

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]*)/i );

var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );



( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;

	// Support: IE <=9 only
	// IE <=9 replaces <option> tags with their contents when inserted outside of
	// the select element.
	div.innerHTML = "<option></option>";
	support.option = !!div.lastChild;
} )();


// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// Support: IE <=9 only
if ( !support.option ) {
	wrapMap.optgroup = wrapMap.option = [ 1, "<select multiple='multiple'>", "</select>" ];
}


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, attached, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( toType( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		attached = isAttached( elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( attached ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


var
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 - 11+
// focus() and blur() are asynchronous, except when they are no-op.
// So expect focus to be synchronous when the element is already active,
// and blur to be synchronous when the element is not already active.
// (focus and blur are always synchronous in other supported browsers,
// this just defines when we can count on it).
function expectSync( elem, type ) {
	return ( elem === safeActiveElement() ) === ( type === "focus" );
}

// Support: IE <=9 only
// Accessing document.activeElement can throw unexpectedly
// https://bugs.jquery.com/ticket/13393
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Only attach events to objects that accept data
		if ( !acceptData( elem ) ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = Object.create( null );
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),

			// Make a writable jQuery.Event from the native event object
			event = jQuery.event.fix( nativeEvent ),

			handlers = (
					dataPriv.get( this, "events" ) || Object.create( null )
				)[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// If the event is namespaced, then each handler is only invoked if it is
				// specially universal or its namespaces are a superset of the event's.
				if ( !event.rnamespace || handleObj.namespace === false ||
					event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
							return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
							return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		click: {

			// Utilize native event to ensure correct state for checkable inputs
			setup: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Claim the first handler
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					// dataPriv.set( el, "click", ... )
					leverageNative( el, "click", returnTrue );
				}

				// Return false to allow normal processing in the caller
				return false;
			},
			trigger: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Force setup before triggering a click
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					leverageNative( el, "click" );
				}

				// Return non-false to allow normal event-path propagation
				return true;
			},

			// For cross-browser consistency, suppress native .click() on links
			// Also prevent it if we're currently inside a leveraged native-event stack
			_default: function( event ) {
				var target = event.target;
				return rcheckableType.test( target.type ) &&
					target.click && nodeName( target, "input" ) &&
					dataPriv.get( target, "click" ) ||
					nodeName( target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

// Ensure the presence of an event listener that handles manually-triggered
// synthetic events by interrupting progress until reinvoked in response to
// *native* events that it fires directly, ensuring that state changes have
// already occurred before other listeners are invoked.
function leverageNative( el, type, expectSync ) {

	// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
	if ( !expectSync ) {
		if ( dataPriv.get( el, type ) === undefined ) {
			jQuery.event.add( el, type, returnTrue );
		}
		return;
	}

	// Register the controller as a special universal handler for all event namespaces
	dataPriv.set( el, type, false );
	jQuery.event.add( el, type, {
		namespace: false,
		handler: function( event ) {
			var notAsync, result,
				saved = dataPriv.get( this, type );

			if ( ( event.isTrigger & 1 ) && this[ type ] ) {

				// Interrupt processing of the outer synthetic .trigger()ed event
				// Saved data should be false in such cases, but might be a leftover capture object
				// from an async native handler (gh-4350)
				if ( !saved.length ) {

					// Store arguments for use when handling the inner native event
					// There will always be at least one argument (an event object), so this array
					// will not be confused with a leftover capture object.
					saved = slice.call( arguments );
					dataPriv.set( this, type, saved );

					// Trigger the native event and capture its result
					// Support: IE <=9 - 11+
					// focus() and blur() are asynchronous
					notAsync = expectSync( this, type );
					this[ type ]();
					result = dataPriv.get( this, type );
					if ( saved !== result || notAsync ) {
						dataPriv.set( this, type, false );
					} else {
						result = {};
					}
					if ( saved !== result ) {

						// Cancel the outer synthetic event
						event.stopImmediatePropagation();
						event.preventDefault();
						return result.value;
					}

				// If this is an inner synthetic event for an event with a bubbling surrogate
				// (focus or blur), assume that the surrogate already propagated from triggering the
				// native event and prevent that from happening again here.
				// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
				// bubbling surrogate propagates *after* the non-bubbling base), but that seems
				// less bad than duplication.
				} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {
					event.stopPropagation();
				}

			// If this is a native event triggered above, everything is now in order
			// Fire an inner synthetic event with the original arguments
			} else if ( saved.length ) {

				// ...and capture the result
				dataPriv.set( this, type, {
					value: jQuery.event.trigger(

						// Support: IE <=9 - 11+
						// Extend with the prototype to reset the above stopImmediatePropagation()
						jQuery.extend( saved[ 0 ], jQuery.Event.prototype ),
						saved.slice( 1 ),
						this
					)
				} );

				// Abort handling of the native event
				event.stopImmediatePropagation();
			}
		}
	} );
}

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || Date.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	code: true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,

	which: function( event ) {
		var button = event.button;

		// Add which for key events
		if ( event.which == null && rkeyEvent.test( event.type ) ) {
			return event.charCode != null ? event.charCode : event.keyCode;
		}

		// Add which for click: 1 === left; 2 === middle; 3 === right
		if ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {
			if ( button & 1 ) {
				return 1;
			}

			if ( button & 2 ) {
				return 3;
			}

			if ( button & 4 ) {
				return 2;
			}

			return 0;
		}

		return event.which;
	}
}, jQuery.event.addProp );

jQuery.each( { focus: "focusin", blur: "focusout" }, function( type, delegateType ) {
	jQuery.event.special[ type ] = {

		// Utilize native event if possible so blur/focus sequence is correct
		setup: function() {

			// Claim the first handler
			// dataPriv.set( this, "focus", ... )
			// dataPriv.set( this, "blur", ... )
			leverageNative( this, type, expectSync );

			// Return false to allow normal processing in the caller
			return false;
		},
		trigger: function() {

			// Force setup before trigger
			leverageNative( this, type );

			// Return non-false to allow normal event-path propagation
			return true;
		},

		delegateType: delegateType
	};
} );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	// Support: IE <=10 - 11, Edge 12 - 13 only
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) &&
		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
		elem.type = elem.type.slice( 5 );
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.get( src );
		events = pdataOld.events;

		if ( events ) {
			dataPriv.remove( dest, "handle events" );

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = flat( args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		valueIsFunction = isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( valueIsFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( valueIsFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl && !node.noModule ) {
								jQuery._evalUrl( node.src, {
									nonce: node.nonce || node.getAttribute( "nonce" )
								}, doc );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), node, doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && isAttached( node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html;
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = isAttached( elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

var swap = function( elem, options, callback ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.call( elem );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
			"margin-top:1px;padding:0;border:0";
		div.style.cssText =
			"position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
			"margin:auto;border:1px;padding:1px;" +
			"width:60%;top:1%";
		documentElement.appendChild( container ).appendChild( div );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;

		// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
		// Some styles come back with percentage values, even though they shouldn't
		div.style.right = "60%";
		pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;

		// Support: IE 9 - 11 only
		// Detect misreporting of content dimensions for box-sizing:border-box elements
		boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;

		// Support: IE 9 only
		// Detect overflow:scroll screwiness (gh-3699)
		// Support: Chrome <=64
		// Don't get tricked when zoom affects offsetWidth (gh-4029)
		div.style.position = "absolute";
		scrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	function roundPixelMeasures( measure ) {
		return Math.round( parseFloat( measure ) );
	}

	var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
		reliableTrDimensionsVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	jQuery.extend( support, {
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelBoxStyles: function() {
			computeStyleTests();
			return pixelBoxStylesVal;
		},
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		},
		scrollboxSize: function() {
			computeStyleTests();
			return scrollboxSizeVal;
		},

		// Support: IE 9 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Behavior in IE 9 is more subtle than in newer versions & it passes
		// some versions of this test; make sure not to make it pass there!
		reliableTrDimensions: function() {
			var table, tr, trChild, trStyle;
			if ( reliableTrDimensionsVal == null ) {
				table = document.createElement( "table" );
				tr = document.createElement( "tr" );
				trChild = document.createElement( "div" );

				table.style.cssText = "position:absolute;left:-11111px";
				tr.style.height = "1px";
				trChild.style.height = "9px";

				documentElement
					.appendChild( table )
					.appendChild( tr )
					.appendChild( trChild );

				trStyle = window.getComputedStyle( tr );
				reliableTrDimensionsVal = parseInt( trStyle.height ) > 3;

				documentElement.removeChild( table );
			}
			return reliableTrDimensionsVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,

		// Support: Firefox 51+
		// Retrieving style before computed somehow
		// fixes an issue with getting wrong values
		// on detached elements
		style = elem.style;

	computed = computed || getStyles( elem );

	// getPropertyValue is needed for:
	//   .css('filter') (IE 9 only, #12537)
	//   .css('--customProperty) (#3144)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !isAttached( elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style,
	vendorProps = {};

// Return a vendor-prefixed property or undefined
function vendorPropName( name ) {

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

// Return a potentially-mapped jQuery.cssProps or vendor prefixed property
function finalPropName( name ) {
	var final = jQuery.cssProps[ name ] || vendorProps[ name ];

	if ( final ) {
		return final;
	}
	if ( name in emptyStyle ) {
		return name;
	}
	return vendorProps[ name ] = vendorPropName( name ) || name;
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rcustomProp = /^--/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	};

function setPositiveNumber( _elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
	var i = dimension === "width" ? 1 : 0,
		extra = 0,
		delta = 0;

	// Adjustment may not be necessary
	if ( box === ( isBorderBox ? "border" : "content" ) ) {
		return 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin
		if ( box === "margin" ) {
			delta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
		}

		// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
		if ( !isBorderBox ) {

			// Add padding
			delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// For "border" or "margin", add border
			if ( box !== "padding" ) {
				delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );

			// But still keep track of it otherwise
			} else {
				extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}

		// If we get here with a border-box (content + padding + border), we're seeking "content" or
		// "padding" or "margin"
		} else {

			// For "content", subtract padding
			if ( box === "content" ) {
				delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// For "content" or "padding", subtract border
			if ( box !== "margin" ) {
				delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	// Account for positive content-box scroll gutter when requested by providing computedVal
	if ( !isBorderBox && computedVal >= 0 ) {

		// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
		// Assuming integer scroll gutter, subtract the rest and round down
		delta += Math.max( 0, Math.ceil(
			elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
			computedVal -
			delta -
			extra -
			0.5

		// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
		// Use an explicit zero to avoid NaN (gh-3964)
		) ) || 0;
	}

	return delta;
}

function getWidthOrHeight( elem, dimension, extra ) {

	// Start with computed style
	var styles = getStyles( elem ),

		// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
		// Fake content-box until we know it's needed to know the true value.
		boxSizingNeeded = !support.boxSizingReliable() || extra,
		isBorderBox = boxSizingNeeded &&
			jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
		valueIsBorderBox = isBorderBox,

		val = curCSS( elem, dimension, styles ),
		offsetProp = "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );

	// Support: Firefox <=54
	// Return a confounding non-pixel value or feign ignorance, as appropriate.
	if ( rnumnonpx.test( val ) ) {
		if ( !extra ) {
			return val;
		}
		val = "auto";
	}


	// Support: IE 9 - 11 only
	// Use offsetWidth/offsetHeight for when box sizing is unreliable.
	// In those cases, the computed value can be trusted to be border-box.
	if ( ( !support.boxSizingReliable() && isBorderBox ||

		// Support: IE 10 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Interestingly, in some cases IE 9 doesn't suffer from this issue.
		!support.reliableTrDimensions() && nodeName( elem, "tr" ) ||

		// Fall back to offsetWidth/offsetHeight when value is "auto"
		// This happens for inline elements with no explicit setting (gh-3571)
		val === "auto" ||

		// Support: Android <=4.1 - 4.3 only
		// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
		!parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) &&

		// Make sure the element is visible & connected
		elem.getClientRects().length ) {

		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

		// Where available, offsetWidth/offsetHeight approximate border box dimensions.
		// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
		// retrieved value as a content box dimension.
		valueIsBorderBox = offsetProp in elem;
		if ( valueIsBorderBox ) {
			val = elem[ offsetProp ];
		}
	}

	// Normalize "" and auto
	val = parseFloat( val ) || 0;

	// Adjust for the element's box model
	return ( val +
		boxModelAdjustment(
			elem,
			dimension,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles,

			// Provide the current computed size to request scroll gutter calculation (gh-3589)
			val
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"gridArea": true,
		"gridColumn": true,
		"gridColumnEnd": true,
		"gridColumnStart": true,
		"gridRow": true,
		"gridRowEnd": true,
		"gridRowStart": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name ),
			style = elem.style;

		// Make sure that we're working with the right name. We don't
		// want to query the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
			// "px" to a few hardcoded values.
			if ( type === "number" && !isCustomProp ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				if ( isCustomProp ) {
					style.setProperty( name, value );
				} else {
					style[ name ] = value;
				}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name );

		// Make sure that we're working with the right name. We don't
		// want to modify the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}

		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( _i, dimension ) {
	jQuery.cssHooks[ dimension ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
						swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, dimension, extra );
						} ) :
						getWidthOrHeight( elem, dimension, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = getStyles( elem ),

				// Only read styles.position if the test has a chance to fail
				// to avoid forcing a reflow.
				scrollboxSizeBuggy = !support.scrollboxSize() &&
					styles.position === "absolute",

				// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
				boxSizingNeeded = scrollboxSizeBuggy || extra,
				isBorderBox = boxSizingNeeded &&
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
				subtract = extra ?
					boxModelAdjustment(
						elem,
						dimension,
						extra,
						isBorderBox,
						styles
					) :
					0;

			// Account for unreliable border-box dimensions by comparing offset* to computed and
			// faking a content-box to get border and padding (gh-3699)
			if ( isBorderBox && scrollboxSizeBuggy ) {
				subtract -= Math.ceil(
					elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
					parseFloat( styles[ dimension ] ) -
					boxModelAdjustment( elem, dimension, "border", false, styles ) -
					0.5
				);
			}

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ dimension ] = value;
				value = jQuery.css( elem, dimension );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
				) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( prefix !== "margin" ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( Array.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 && (
					jQuery.cssHooks[ tween.prop ] ||
					tween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, inProgress,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function schedule() {
	if ( inProgress ) {
		if ( document.hidden === false && window.requestAnimationFrame ) {
			window.requestAnimationFrame( schedule );
		} else {
			window.setTimeout( schedule, jQuery.fx.interval );
		}

		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = Date.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 15
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY and Edge just mirrors
		// the overflowX value there.
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

			/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( Array.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			// If there's more to do, yield
			if ( percent < 1 && length ) {
				return remaining;
			}

			// If this was an empty animation, synthesize a final progress notification
			if ( !length ) {
				deferred.notifyWith( elem, [ animation, 1, 0 ] );
			}

			// Resolve the animation and report its conclusion
			deferred.resolveWith( elem, [ animation ] );
			return false;
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					result.stop.bind( result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	// Attach callbacks from options
	animation
		.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	return animation;
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !isFunction( easing ) && easing
	};

	// Go to the end state if fx are off
	if ( jQuery.fx.off ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( _i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = Date.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Run the timer and safely remove it when done (allowing for external removal)
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( inProgress ) {
		return;
	}

	inProgress = true;
	schedule();
};

jQuery.fx.stop = function() {
	inProgress = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( _i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

function classesToArray( value ) {
	if ( Array.isArray( value ) ) {
		return value;
	}
	if ( typeof value === "string" ) {
		return value.match( rnothtmlwhite ) || [];
	}
	return [];
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isValidValue = type === "string" || Array.isArray( value );

		if ( typeof stateVal === "boolean" && isValidValue ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( isValidValue ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = classesToArray( value );

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
						"" :
						dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
					return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, valueIsFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		valueIsFunction = isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( valueIsFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( Array.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( Array.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


support.focusin = "onfocusin" in window;


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	stopPropagationCallback = function( e ) {
		e.stopPropagation();
	};

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = lastElement = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
			lastElement = cur;
			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = (
					dataPriv.get( cur, "events" ) || Object.create( null )
				)[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;

					if ( event.isPropagationStopped() ) {
						lastElement.addEventListener( type, stopPropagationCallback );
					}

					elem[ type ]();

					if ( event.isPropagationStopped() ) {
						lastElement.removeEventListener( type, stopPropagationCallback );
					}

					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {

				// Handle: regular nodes (via `this.ownerDocument`), window
				// (via `this.document`) & document (via `this`).
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = { guid: Date.now() };

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {
		xml = undefined;
	}

	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( Array.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && toType( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	if ( a == null ) {
		return "";
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} )
		.filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} )
		.map( function( _i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( Array.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );
	originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() + " " ] =
									( responseHeaders[ match[ 1 ].toLowerCase() + " " ] || [] )
										.concat( match[ 2 ] );
							}
						}
						match = responseHeaders[ key.toLowerCase() + " " ];
					}
					return match == null ? null : match.join( ", " );
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 15
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available and should be processed, append data to url
			if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce.guid++ ) +
					uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Use a noop converter for missing script
			if ( !isSuccess && jQuery.inArray( "script", s.dataTypes ) > -1 ) {
				s.converters[ "text script" ] = function() {};
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( _i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );

jQuery.ajaxPrefilter( function( s ) {
	var i;
	for ( i in s.headers ) {
		if ( i.toLowerCase() === "content-type" ) {
			s.contentType = s.headers[ i ] || "";
		}
	}
} );


jQuery._evalUrl = function( url, options, doc ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,

		// Only evaluate the response if it is successful (gh-4126)
		// dataFilter is not invoked for failure responses, so using it instead
		// of the default converter is kludgy but it works.
		converters: {
			"text script": function() {}
		},
		dataFilter: function( response ) {
			jQuery.globalEval( response, options, doc );
		}
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var htmlIsFunction = isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.ontimeout =
									xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain or forced-by-attrs requests
	if ( s.crossDomain || s.scriptAttrs ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" )
					.attr( s.scriptAttrs || {} )
					.prop( { charset: s.scriptCharset, src: s.url } )
					.on( "load error", callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					} );

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce.guid++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			if ( typeof props.top === "number" ) {
				props.top += "px";
			}
			if ( typeof props.left === "number" ) {
				props.left += "px";
			}
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {

	// offset() relates an element's border box to the document origin
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var rect, win,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		// Get document-relative position by adding viewport scroll to viewport-relative gBCR
		rect = elem.getBoundingClientRect();
		win = elem.ownerDocument.defaultView;
		return {
			top: rect.top + win.pageYOffset,
			left: rect.left + win.pageXOffset
		};
	},

	// position() relates an element's margin box to its offset parent's padding box
	// This corresponds to the behavior of CSS absolute positioning
	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset, doc,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// position:fixed elements are offset from the viewport, which itself always has zero offset
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume position:fixed implies availability of getBoundingClientRect
			offset = elem.getBoundingClientRect();

		} else {
			offset = this.offset();

			// Account for the *real* offset parent, which can be the document or its root element
			// when a statically positioned element is identified
			doc = elem.ownerDocument;
			offsetParent = elem.offsetParent || doc.documentElement;
			while ( offsetParent &&
				( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) {

				offsetParent = offsetParent.parentNode;
			}
			if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {

				// Incorporate borders into its offset, since they are outside its content origin
				parentOffset = jQuery( offsetParent ).offset();
				parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
			}
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {

			// Coalesce documents and windows
			var win;
			if ( isWindow( elem ) ) {
				win = elem;
			} else if ( elem.nodeType === 9 ) {
				win = elem.defaultView;
			}

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( _i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
		function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( _i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	},

	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );

jQuery.each( ( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( _i, name ) {

		// Handle event binding
		jQuery.fn[ name ] = function( data, fn ) {
			return arguments.length > 0 ?
				this.on( name, null, data, fn ) :
				this.trigger( name );
		};
	} );




// Support: Android <=4.0 only
// Make sure we trim BOM and NBSP
var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
jQuery.proxy = function( fn, context ) {
	var tmp, args, proxy;

	if ( typeof context === "string" ) {
		tmp = fn[ context ];
		context = fn;
		fn = tmp;
	}

	// Quick check to determine if target is callable, in the spec
	// this throws a TypeError, but we will just return undefined.
	if ( !isFunction( fn ) ) {
		return undefined;
	}

	// Simulated bind
	args = slice.call( arguments, 2 );
	proxy = function() {
		return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
	};

	// Set the guid of unique handler to the same of original handler, so it can be removed
	proxy.guid = fn.guid = fn.guid || jQuery.guid++;

	return proxy;
};

jQuery.holdReady = function( hold ) {
	if ( hold ) {
		jQuery.readyWait++;
	} else {
		jQuery.ready( true );
	}
};
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;
jQuery.isFunction = isFunction;
jQuery.isWindow = isWindow;
jQuery.camelCase = camelCase;
jQuery.type = toType;

jQuery.now = Date.now;

jQuery.isNumeric = function( obj ) {

	// As of jQuery 3.0, isNumeric is limited to
	// strings and numbers (primitives or objects)
	// that can be coerced to finite numbers (gh-2662)
	var type = jQuery.type( obj );
	return ( type === "number" || type === "string" ) &&

		// parseFloat NaNs numeric-cast false positives ("")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		!isNaN( obj - parseFloat( obj ) );
};

jQuery.trim = function( text ) {
	return text == null ?
		"" :
		( text + "" ).replace( rtrim, "" );
};



// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( true ) {
	!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {
		return jQuery;
	}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( typeof noGlobal === "undefined" ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;
} );


/***/ }),

/***/ "./node_modules/popper.js/dist/esm/popper.js":
/*!***************************************************!*\
  !*** ./node_modules/popper.js/dist/esm/popper.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.16.1
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';

var timeoutDuration = function () {
  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];
  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
      return 1;
    }
  }
  return 0;
}();

function microtaskDebounce(fn) {
  var called = false;
  return function () {
    if (called) {
      return;
    }
    called = true;
    window.Promise.resolve().then(function () {
      called = false;
      fn();
    });
  };
}

function taskDebounce(fn) {
  var scheduled = false;
  return function () {
    if (!scheduled) {
      scheduled = true;
      setTimeout(function () {
        scheduled = false;
        fn();
      }, timeoutDuration);
    }
  };
}

var supportsMicroTasks = isBrowser && window.Promise;

/**
* Create a debounced version of a method, that's asynchronously deferred
* but called in the minimum time possible.
*
* @method
* @memberof Popper.Utils
* @argument {Function} fn
* @returns {Function}
*/
var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;

/**
 * Check if the given variable is a function
 * @method
 * @memberof Popper.Utils
 * @argument {Any} functionToCheck - variable to check
 * @returns {Boolean} answer to: is a function?
 */
function isFunction(functionToCheck) {
  var getType = {};
  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
}

/**
 * Get CSS computed property of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Eement} element
 * @argument {String} property
 */
function getStyleComputedProperty(element, property) {
  if (element.nodeType !== 1) {
    return [];
  }
  // NOTE: 1 DOM access here
  var window = element.ownerDocument.defaultView;
  var css = window.getComputedStyle(element, null);
  return property ? css[property] : css;
}

/**
 * Returns the parentNode or the host of the element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} parent
 */
function getParentNode(element) {
  if (element.nodeName === 'HTML') {
    return element;
  }
  return element.parentNode || element.host;
}

/**
 * Returns the scrolling parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} scroll parent
 */
function getScrollParent(element) {
  // Return body, `getScroll` will take care to get the correct `scrollTop` from it
  if (!element) {
    return document.body;
  }

  switch (element.nodeName) {
    case 'HTML':
    case 'BODY':
      return element.ownerDocument.body;
    case '#document':
      return element.body;
  }

  // Firefox want us to check `-x` and `-y` variations as well

  var _getStyleComputedProp = getStyleComputedProperty(element),
      overflow = _getStyleComputedProp.overflow,
      overflowX = _getStyleComputedProp.overflowX,
      overflowY = _getStyleComputedProp.overflowY;

  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {
    return element;
  }

  return getScrollParent(getParentNode(element));
}

/**
 * Returns the reference node of the reference object, or the reference object itself.
 * @method
 * @memberof Popper.Utils
 * @param {Element|Object} reference - the reference element (the popper will be relative to this)
 * @returns {Element} parent
 */
function getReferenceNode(reference) {
  return reference && reference.referenceNode ? reference.referenceNode : reference;
}

var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);
var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);

/**
 * Determines if the browser is Internet Explorer
 * @method
 * @memberof Popper.Utils
 * @param {Number} version to check
 * @returns {Boolean} isIE
 */
function isIE(version) {
  if (version === 11) {
    return isIE11;
  }
  if (version === 10) {
    return isIE10;
  }
  return isIE11 || isIE10;
}

/**
 * Returns the offset parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} offset parent
 */
function getOffsetParent(element) {
  if (!element) {
    return document.documentElement;
  }

  var noOffsetParent = isIE(10) ? document.body : null;

  // NOTE: 1 DOM access here
  var offsetParent = element.offsetParent || null;
  // Skip hidden elements which don't have an offsetParent
  while (offsetParent === noOffsetParent && element.nextElementSibling) {
    offsetParent = (element = element.nextElementSibling).offsetParent;
  }

  var nodeName = offsetParent && offsetParent.nodeName;

  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
    return element ? element.ownerDocument.documentElement : document.documentElement;
  }

  // .offsetParent will return the closest TH, TD or TABLE in case
  // no offsetParent is present, I hate this job...
  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {
    return getOffsetParent(offsetParent);
  }

  return offsetParent;
}

function isOffsetContainer(element) {
  var nodeName = element.nodeName;

  if (nodeName === 'BODY') {
    return false;
  }
  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;
}

/**
 * Finds the root node (document, shadowDOM root) of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} node
 * @returns {Element} root node
 */
function getRoot(node) {
  if (node.parentNode !== null) {
    return getRoot(node.parentNode);
  }

  return node;
}

/**
 * Finds the offset parent common to the two provided nodes
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element1
 * @argument {Element} element2
 * @returns {Element} common offset parent
 */
function findCommonOffsetParent(element1, element2) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
    return document.documentElement;
  }

  // Here we make sure to give as "start" the element that comes first in the DOM
  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
  var start = order ? element1 : element2;
  var end = order ? element2 : element1;

  // Get common ancestor container
  var range = document.createRange();
  range.setStart(start, 0);
  range.setEnd(end, 0);
  var commonAncestorContainer = range.commonAncestorContainer;

  // Both nodes are inside #document

  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
    if (isOffsetContainer(commonAncestorContainer)) {
      return commonAncestorContainer;
    }

    return getOffsetParent(commonAncestorContainer);
  }

  // one of the nodes is inside shadowDOM, find which one
  var element1root = getRoot(element1);
  if (element1root.host) {
    return findCommonOffsetParent(element1root.host, element2);
  } else {
    return findCommonOffsetParent(element1, getRoot(element2).host);
  }
}

/**
 * Gets the scroll value of the given element in the given side (top and left)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {String} side `top` or `left`
 * @returns {number} amount of scrolled pixels
 */
function getScroll(element) {
  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';

  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
  var nodeName = element.nodeName;

  if (nodeName === 'BODY' || nodeName === 'HTML') {
    var html = element.ownerDocument.documentElement;
    var scrollingElement = element.ownerDocument.scrollingElement || html;
    return scrollingElement[upperSide];
  }

  return element[upperSide];
}

/*
 * Sum or subtract the element scroll values (left and top) from a given rect object
 * @method
 * @memberof Popper.Utils
 * @param {Object} rect - Rect object you want to change
 * @param {HTMLElement} element - The element from the function reads the scroll values
 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
 * @return {Object} rect - The modifier rect object
 */
function includeScroll(rect, element) {
  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var scrollTop = getScroll(element, 'top');
  var scrollLeft = getScroll(element, 'left');
  var modifier = subtract ? -1 : 1;
  rect.top += scrollTop * modifier;
  rect.bottom += scrollTop * modifier;
  rect.left += scrollLeft * modifier;
  rect.right += scrollLeft * modifier;
  return rect;
}

/*
 * Helper to detect borders of a given element
 * @method
 * @memberof Popper.Utils
 * @param {CSSStyleDeclaration} styles
 * Result of `getStyleComputedProperty` on the given element
 * @param {String} axis - `x` or `y`
 * @return {number} borders - The borders size of the given axis
 */

function getBordersSize(styles, axis) {
  var sideA = axis === 'x' ? 'Left' : 'Top';
  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';

  return parseFloat(styles['border' + sideA + 'Width']) + parseFloat(styles['border' + sideB + 'Width']);
}

function getSize(axis, body, html, computedStyle) {
  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);
}

function getWindowSizes(document) {
  var body = document.body;
  var html = document.documentElement;
  var computedStyle = isIE(10) && getComputedStyle(html);

  return {
    height: getSize('Height', body, html, computedStyle),
    width: getSize('Width', body, html, computedStyle)
  };
}

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();





var defineProperty = function (obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/**
 * Given element offsets, generate an output similar to getBoundingClientRect
 * @method
 * @memberof Popper.Utils
 * @argument {Object} offsets
 * @returns {Object} ClientRect like output
 */
function getClientRect(offsets) {
  return _extends({}, offsets, {
    right: offsets.left + offsets.width,
    bottom: offsets.top + offsets.height
  });
}

/**
 * Get bounding client rect of given element
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} element
 * @return {Object} client rect
 */
function getBoundingClientRect(element) {
  var rect = {};

  // IE10 10 FIX: Please, don't ask, the element isn't
  // considered in DOM in some circumstances...
  // This isn't reproducible in IE10 compatibility mode of IE11
  try {
    if (isIE(10)) {
      rect = element.getBoundingClientRect();
      var scrollTop = getScroll(element, 'top');
      var scrollLeft = getScroll(element, 'left');
      rect.top += scrollTop;
      rect.left += scrollLeft;
      rect.bottom += scrollTop;
      rect.right += scrollLeft;
    } else {
      rect = element.getBoundingClientRect();
    }
  } catch (e) {}

  var result = {
    left: rect.left,
    top: rect.top,
    width: rect.right - rect.left,
    height: rect.bottom - rect.top
  };

  // subtract scrollbar size from sizes
  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};
  var width = sizes.width || element.clientWidth || result.width;
  var height = sizes.height || element.clientHeight || result.height;

  var horizScrollbar = element.offsetWidth - width;
  var vertScrollbar = element.offsetHeight - height;

  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
  // we make this check conditional for performance reasons
  if (horizScrollbar || vertScrollbar) {
    var styles = getStyleComputedProperty(element);
    horizScrollbar -= getBordersSize(styles, 'x');
    vertScrollbar -= getBordersSize(styles, 'y');

    result.width -= horizScrollbar;
    result.height -= vertScrollbar;
  }

  return getClientRect(result);
}

function getOffsetRectRelativeToArbitraryNode(children, parent) {
  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var isIE10 = isIE(10);
  var isHTML = parent.nodeName === 'HTML';
  var childrenRect = getBoundingClientRect(children);
  var parentRect = getBoundingClientRect(parent);
  var scrollParent = getScrollParent(children);

  var styles = getStyleComputedProperty(parent);
  var borderTopWidth = parseFloat(styles.borderTopWidth);
  var borderLeftWidth = parseFloat(styles.borderLeftWidth);

  // In cases where the parent is fixed, we must ignore negative scroll in offset calc
  if (fixedPosition && isHTML) {
    parentRect.top = Math.max(parentRect.top, 0);
    parentRect.left = Math.max(parentRect.left, 0);
  }
  var offsets = getClientRect({
    top: childrenRect.top - parentRect.top - borderTopWidth,
    left: childrenRect.left - parentRect.left - borderLeftWidth,
    width: childrenRect.width,
    height: childrenRect.height
  });
  offsets.marginTop = 0;
  offsets.marginLeft = 0;

  // Subtract margins of documentElement in case it's being used as parent
  // we do this only on HTML because it's the only element that behaves
  // differently when margins are applied to it. The margins are included in
  // the box of the documentElement, in the other cases not.
  if (!isIE10 && isHTML) {
    var marginTop = parseFloat(styles.marginTop);
    var marginLeft = parseFloat(styles.marginLeft);

    offsets.top -= borderTopWidth - marginTop;
    offsets.bottom -= borderTopWidth - marginTop;
    offsets.left -= borderLeftWidth - marginLeft;
    offsets.right -= borderLeftWidth - marginLeft;

    // Attach marginTop and marginLeft because in some circumstances we may need them
    offsets.marginTop = marginTop;
    offsets.marginLeft = marginLeft;
  }

  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {
    offsets = includeScroll(offsets, parent);
  }

  return offsets;
}

function getViewportOffsetRectRelativeToArtbitraryNode(element) {
  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var html = element.ownerDocument.documentElement;
  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
  var width = Math.max(html.clientWidth, window.innerWidth || 0);
  var height = Math.max(html.clientHeight, window.innerHeight || 0);

  var scrollTop = !excludeScroll ? getScroll(html) : 0;
  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;

  var offset = {
    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
    width: width,
    height: height
  };

  return getClientRect(offset);
}

/**
 * Check if the given element is fixed or is inside a fixed parent
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {Element} customContainer
 * @returns {Boolean} answer to "isFixed?"
 */
function isFixed(element) {
  var nodeName = element.nodeName;
  if (nodeName === 'BODY' || nodeName === 'HTML') {
    return false;
  }
  if (getStyleComputedProperty(element, 'position') === 'fixed') {
    return true;
  }
  var parentNode = getParentNode(element);
  if (!parentNode) {
    return false;
  }
  return isFixed(parentNode);
}

/**
 * Finds the first parent of an element that has a transformed property defined
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} first transformed parent or documentElement
 */

function getFixedPositionOffsetParent(element) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element || !element.parentElement || isIE()) {
    return document.documentElement;
  }
  var el = element.parentElement;
  while (el && getStyleComputedProperty(el, 'transform') === 'none') {
    el = el.parentElement;
  }
  return el || document.documentElement;
}

/**
 * Computed the boundaries limits and return them
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} popper
 * @param {HTMLElement} reference
 * @param {number} padding
 * @param {HTMLElement} boundariesElement - Element used to define the boundaries
 * @param {Boolean} fixedPosition - Is in fixed position mode
 * @returns {Object} Coordinates of the boundaries
 */
function getBoundaries(popper, reference, padding, boundariesElement) {
  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

  // NOTE: 1 DOM access here

  var boundaries = { top: 0, left: 0 };
  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));

  // Handle viewport case
  if (boundariesElement === 'viewport') {
    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
  } else {
    // Handle other cases based on DOM element used as boundaries
    var boundariesNode = void 0;
    if (boundariesElement === 'scrollParent') {
      boundariesNode = getScrollParent(getParentNode(reference));
      if (boundariesNode.nodeName === 'BODY') {
        boundariesNode = popper.ownerDocument.documentElement;
      }
    } else if (boundariesElement === 'window') {
      boundariesNode = popper.ownerDocument.documentElement;
    } else {
      boundariesNode = boundariesElement;
    }

    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);

    // In case of HTML, we need a different computation
    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
      var _getWindowSizes = getWindowSizes(popper.ownerDocument),
          height = _getWindowSizes.height,
          width = _getWindowSizes.width;

      boundaries.top += offsets.top - offsets.marginTop;
      boundaries.bottom = height + offsets.top;
      boundaries.left += offsets.left - offsets.marginLeft;
      boundaries.right = width + offsets.left;
    } else {
      // for all the other DOM elements, this one is good
      boundaries = offsets;
    }
  }

  // Add paddings
  padding = padding || 0;
  var isPaddingNumber = typeof padding === 'number';
  boundaries.left += isPaddingNumber ? padding : padding.left || 0;
  boundaries.top += isPaddingNumber ? padding : padding.top || 0;
  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;

  return boundaries;
}

function getArea(_ref) {
  var width = _ref.width,
      height = _ref.height;

  return width * height;
}

/**
 * Utility used to transform the `auto` placement to the placement with more
 * available space.
 * @method
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;

  if (placement.indexOf('auto') === -1) {
    return placement;
  }

  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);

  var rects = {
    top: {
      width: boundaries.width,
      height: refRect.top - boundaries.top
    },
    right: {
      width: boundaries.right - refRect.right,
      height: boundaries.height
    },
    bottom: {
      width: boundaries.width,
      height: boundaries.bottom - refRect.bottom
    },
    left: {
      width: refRect.left - boundaries.left,
      height: boundaries.height
    }
  };

  var sortedAreas = Object.keys(rects).map(function (key) {
    return _extends({
      key: key
    }, rects[key], {
      area: getArea(rects[key])
    });
  }).sort(function (a, b) {
    return b.area - a.area;
  });

  var filteredAreas = sortedAreas.filter(function (_ref2) {
    var width = _ref2.width,
        height = _ref2.height;
    return width >= popper.clientWidth && height >= popper.clientHeight;
  });

  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;

  var variation = placement.split('-')[1];

  return computedPlacement + (variation ? '-' + variation : '');
}

/**
 * Get offsets to the reference element
 * @method
 * @memberof Popper.Utils
 * @param {Object} state
 * @param {Element} popper - the popper element
 * @param {Element} reference - the reference element (the popper will be relative to this)
 * @param {Element} fixedPosition - is in fixed position mode
 * @returns {Object} An object containing the offsets which will be applied to the popper
 */
function getReferenceOffsets(state, popper, reference) {
  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));
  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
}

/**
 * Get the outer sizes of the given element (offset size + margins)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Object} object containing width and height properties
 */
function getOuterSizes(element) {
  var window = element.ownerDocument.defaultView;
  var styles = window.getComputedStyle(element);
  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);
  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);
  var result = {
    width: element.offsetWidth + y,
    height: element.offsetHeight + x
  };
  return result;
}

/**
 * Get the opposite placement of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement
 * @returns {String} flipped placement
 */
function getOppositePlacement(placement) {
  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash[matched];
  });
}

/**
 * Get offsets to the popper
 * @method
 * @memberof Popper.Utils
 * @param {Object} position - CSS position the Popper will get applied
 * @param {HTMLElement} popper - the popper element
 * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
 * @param {String} placement - one of the valid placement options
 * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
 */
function getPopperOffsets(popper, referenceOffsets, placement) {
  placement = placement.split('-')[0];

  // Get popper node sizes
  var popperRect = getOuterSizes(popper);

  // Add position, width and height to our offsets object
  var popperOffsets = {
    width: popperRect.width,
    height: popperRect.height
  };

  // depending by the popper placement we have to compute its offsets slightly differently
  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;
  var mainSide = isHoriz ? 'top' : 'left';
  var secondarySide = isHoriz ? 'left' : 'top';
  var measurement = isHoriz ? 'height' : 'width';
  var secondaryMeasurement = !isHoriz ? 'height' : 'width';

  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;
  if (placement === secondarySide) {
    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
  } else {
    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
  }

  return popperOffsets;
}

/**
 * Mimics the `find` method of Array
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */
function find(arr, check) {
  // use native find if supported
  if (Array.prototype.find) {
    return arr.find(check);
  }

  // use `filter` to obtain the same behavior of `find`
  return arr.filter(check)[0];
}

/**
 * Return the index of the matching object
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */
function findIndex(arr, prop, value) {
  // use native findIndex if supported
  if (Array.prototype.findIndex) {
    return arr.findIndex(function (cur) {
      return cur[prop] === value;
    });
  }

  // use `find` + `indexOf` if `findIndex` isn't supported
  var match = find(arr, function (obj) {
    return obj[prop] === value;
  });
  return arr.indexOf(match);
}

/**
 * Loop trough the list of modifiers and run them in order,
 * each of them will then edit the data object.
 * @method
 * @memberof Popper.Utils
 * @param {dataObject} data
 * @param {Array} modifiers
 * @param {String} ends - Optional modifier name used as stopper
 * @returns {dataObject}
 */
function runModifiers(modifiers, data, ends) {
  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));

  modifiersToRun.forEach(function (modifier) {
    if (modifier['function']) {
      // eslint-disable-line dot-notation
      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
    }
    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation
    if (modifier.enabled && isFunction(fn)) {
      // Add properties to offsets to make them a complete clientRect object
      // we do this before each modifier to make sure the previous one doesn't
      // mess with these values
      data.offsets.popper = getClientRect(data.offsets.popper);
      data.offsets.reference = getClientRect(data.offsets.reference);

      data = fn(data, modifier);
    }
  });

  return data;
}

/**
 * Updates the position of the popper, computing the new offsets and applying
 * the new style.<br />
 * Prefer `scheduleUpdate` over `update` because of performance reasons.
 * @method
 * @memberof Popper
 */
function update() {
  // if popper is destroyed, don't perform any further update
  if (this.state.isDestroyed) {
    return;
  }

  var data = {
    instance: this,
    styles: {},
    arrowStyles: {},
    attributes: {},
    flipped: false,
    offsets: {}
  };

  // compute reference element offsets
  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);

  // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value
  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);

  // store the computed placement inside `originalPlacement`
  data.originalPlacement = data.placement;

  data.positionFixed = this.options.positionFixed;

  // compute the popper offsets
  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);

  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';

  // run the modifiers
  data = runModifiers(this.modifiers, data);

  // the first `update` will call `onCreate` callback
  // the other ones will call `onUpdate` callback
  if (!this.state.isCreated) {
    this.state.isCreated = true;
    this.options.onCreate(data);
  } else {
    this.options.onUpdate(data);
  }
}

/**
 * Helper used to know if the given modifier is enabled.
 * @method
 * @memberof Popper.Utils
 * @returns {Boolean}
 */
function isModifierEnabled(modifiers, modifierName) {
  return modifiers.some(function (_ref) {
    var name = _ref.name,
        enabled = _ref.enabled;
    return enabled && name === modifierName;
  });
}

/**
 * Get the prefixed supported property name
 * @method
 * @memberof Popper.Utils
 * @argument {String} property (camelCase)
 * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
 */
function getSupportedPropertyName(property) {
  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];
  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);

  for (var i = 0; i < prefixes.length; i++) {
    var prefix = prefixes[i];
    var toCheck = prefix ? '' + prefix + upperProp : property;
    if (typeof document.body.style[toCheck] !== 'undefined') {
      return toCheck;
    }
  }
  return null;
}

/**
 * Destroys the popper.
 * @method
 * @memberof Popper
 */
function destroy() {
  this.state.isDestroyed = true;

  // touch DOM only if `applyStyle` modifier is enabled
  if (isModifierEnabled(this.modifiers, 'applyStyle')) {
    this.popper.removeAttribute('x-placement');
    this.popper.style.position = '';
    this.popper.style.top = '';
    this.popper.style.left = '';
    this.popper.style.right = '';
    this.popper.style.bottom = '';
    this.popper.style.willChange = '';
    this.popper.style[getSupportedPropertyName('transform')] = '';
  }

  this.disableEventListeners();

  // remove the popper if user explicitly asked for the deletion on destroy
  // do not use `remove` because IE11 doesn't support it
  if (this.options.removeOnDestroy) {
    this.popper.parentNode.removeChild(this.popper);
  }
  return this;
}

/**
 * Get the window associated with the element
 * @argument {Element} element
 * @returns {Window}
 */
function getWindow(element) {
  var ownerDocument = element.ownerDocument;
  return ownerDocument ? ownerDocument.defaultView : window;
}

function attachToScrollParents(scrollParent, event, callback, scrollParents) {
  var isBody = scrollParent.nodeName === 'BODY';
  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
  target.addEventListener(event, callback, { passive: true });

  if (!isBody) {
    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
  }
  scrollParents.push(target);
}

/**
 * Setup needed event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */
function setupEventListeners(reference, options, state, updateBound) {
  // Resize event listener on window
  state.updateBound = updateBound;
  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });

  // Scroll event listener on scroll parents
  var scrollElement = getScrollParent(reference);
  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
  state.scrollElement = scrollElement;
  state.eventsEnabled = true;

  return state;
}

/**
 * It will add resize/scroll events and start recalculating
 * position of the popper element when they are triggered.
 * @method
 * @memberof Popper
 */
function enableEventListeners() {
  if (!this.state.eventsEnabled) {
    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
  }
}

/**
 * Remove event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */
function removeEventListeners(reference, state) {
  // Remove resize event listener on window
  getWindow(reference).removeEventListener('resize', state.updateBound);

  // Remove scroll event listener on scroll parents
  state.scrollParents.forEach(function (target) {
    target.removeEventListener('scroll', state.updateBound);
  });

  // Reset state
  state.updateBound = null;
  state.scrollParents = [];
  state.scrollElement = null;
  state.eventsEnabled = false;
  return state;
}

/**
 * It will remove resize/scroll events and won't recalculate popper position
 * when they are triggered. It also won't trigger `onUpdate` callback anymore,
 * unless you call `update` method manually.
 * @method
 * @memberof Popper
 */
function disableEventListeners() {
  if (this.state.eventsEnabled) {
    cancelAnimationFrame(this.scheduleUpdate);
    this.state = removeEventListeners(this.reference, this.state);
  }
}

/**
 * Tells if a given input is a number
 * @method
 * @memberof Popper.Utils
 * @param {*} input to check
 * @return {Boolean}
 */
function isNumeric(n) {
  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
}

/**
 * Set the style to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the style to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */
function setStyles(element, styles) {
  Object.keys(styles).forEach(function (prop) {
    var unit = '';
    // add unit if the value is numeric and is one of the following
    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
      unit = 'px';
    }
    element.style[prop] = styles[prop] + unit;
  });
}

/**
 * Set the attributes to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the attributes to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */
function setAttributes(element, attributes) {
  Object.keys(attributes).forEach(function (prop) {
    var value = attributes[prop];
    if (value !== false) {
      element.setAttribute(prop, attributes[prop]);
    } else {
      element.removeAttribute(prop);
    }
  });
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} data.styles - List of style properties - values to apply to popper element
 * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The same data object
 */
function applyStyle(data) {
  // any property present in `data.styles` will be applied to the popper,
  // in this way we can make the 3rd party modifiers add custom styles to it
  // Be aware, modifiers could override the properties defined in the previous
  // lines of this modifier!
  setStyles(data.instance.popper, data.styles);

  // any property present in `data.attributes` will be applied to the popper,
  // they will be set as HTML attributes of the element
  setAttributes(data.instance.popper, data.attributes);

  // if arrowElement is defined and arrowStyles has some properties
  if (data.arrowElement && Object.keys(data.arrowStyles).length) {
    setStyles(data.arrowElement, data.arrowStyles);
  }

  return data;
}

/**
 * Set the x-placement attribute before everything else because it could be used
 * to add margins to the popper margins needs to be calculated to get the
 * correct popper offsets.
 * @method
 * @memberof Popper.modifiers
 * @param {HTMLElement} reference - The reference element used to position the popper
 * @param {HTMLElement} popper - The HTML element used as popper
 * @param {Object} options - Popper.js options
 */
function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
  // compute reference element offsets
  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);

  // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value
  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);

  popper.setAttribute('x-placement', placement);

  // Apply `position` to popper before anything else because
  // without the position applied we can't guarantee correct computations
  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });

  return options;
}

/**
 * @function
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Boolean} shouldRound - If the offsets should be rounded at all
 * @returns {Object} The popper's position offsets rounded
 *
 * The tale of pixel-perfect positioning. It's still not 100% perfect, but as
 * good as it can be within reason.
 * Discussion here: https://github.com/FezVrasta/popper.js/pull/715
 *
 * Low DPI screens cause a popper to be blurry if not using full pixels (Safari
 * as well on High DPI screens).
 *
 * Firefox prefers no rounding for positioning and does not have blurriness on
 * high DPI screens.
 *
 * Only horizontal placement and left/right values need to be considered.
 */
function getRoundedOffsets(data, shouldRound) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var round = Math.round,
      floor = Math.floor;

  var noRound = function noRound(v) {
    return v;
  };

  var referenceWidth = round(reference.width);
  var popperWidth = round(popper.width);

  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;
  var isVariation = data.placement.indexOf('-') !== -1;
  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;
  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;

  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;
  var verticalToInteger = !shouldRound ? noRound : round;

  return {
    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),
    top: verticalToInteger(popper.top),
    bottom: verticalToInteger(popper.bottom),
    right: horizontalToInteger(popper.right)
  };
}

var isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function computeStyle(data, options) {
  var x = options.x,
      y = options.y;
  var popper = data.offsets.popper;

  // Remove this legacy support in Popper.js v2

  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'applyStyle';
  }).gpuAcceleration;
  if (legacyGpuAccelerationOption !== undefined) {
    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
  }
  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;

  var offsetParent = getOffsetParent(data.instance.popper);
  var offsetParentRect = getBoundingClientRect(offsetParent);

  // Styles
  var styles = {
    position: popper.position
  };

  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);

  var sideA = x === 'bottom' ? 'top' : 'bottom';
  var sideB = y === 'right' ? 'left' : 'right';

  // if gpuAcceleration is set to `true` and transform is supported,
  //  we use `translate3d` to apply the position to the popper we
  // automatically use the supported prefixed version if needed
  var prefixedProperty = getSupportedPropertyName('transform');

  // now, let's make a step back and look at this code closely (wtf?)
  // If the content of the popper grows once it's been positioned, it
  // may happen that the popper gets misplaced because of the new content
  // overflowing its reference element
  // To avoid this problem, we provide two options (x and y), which allow
  // the consumer to define the offset origin.
  // If we position a popper on top of a reference element, we can set
  // `x` to `top` to make the popper grow towards its top instead of
  // its bottom.
  var left = void 0,
      top = void 0;
  if (sideA === 'bottom') {
    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)
    // and not the bottom of the html element
    if (offsetParent.nodeName === 'HTML') {
      top = -offsetParent.clientHeight + offsets.bottom;
    } else {
      top = -offsetParentRect.height + offsets.bottom;
    }
  } else {
    top = offsets.top;
  }
  if (sideB === 'right') {
    if (offsetParent.nodeName === 'HTML') {
      left = -offsetParent.clientWidth + offsets.right;
    } else {
      left = -offsetParentRect.width + offsets.right;
    }
  } else {
    left = offsets.left;
  }
  if (gpuAcceleration && prefixedProperty) {
    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
    styles[sideA] = 0;
    styles[sideB] = 0;
    styles.willChange = 'transform';
  } else {
    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
    var invertTop = sideA === 'bottom' ? -1 : 1;
    var invertLeft = sideB === 'right' ? -1 : 1;
    styles[sideA] = top * invertTop;
    styles[sideB] = left * invertLeft;
    styles.willChange = sideA + ', ' + sideB;
  }

  // Attributes
  var attributes = {
    'x-placement': data.placement
  };

  // Update `data` attributes, styles and arrowStyles
  data.attributes = _extends({}, attributes, data.attributes);
  data.styles = _extends({}, styles, data.styles);
  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);

  return data;
}

/**
 * Helper used to know if the given modifier depends from another one.<br />
 * It checks if the needed modifier is listed and enabled.
 * @method
 * @memberof Popper.Utils
 * @param {Array} modifiers - list of modifiers
 * @param {String} requestingName - name of requesting modifier
 * @param {String} requestedName - name of requested modifier
 * @returns {Boolean}
 */
function isModifierRequired(modifiers, requestingName, requestedName) {
  var requesting = find(modifiers, function (_ref) {
    var name = _ref.name;
    return name === requestingName;
  });

  var isRequired = !!requesting && modifiers.some(function (modifier) {
    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
  });

  if (!isRequired) {
    var _requesting = '`' + requestingName + '`';
    var requested = '`' + requestedName + '`';
    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
  }
  return isRequired;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function arrow(data, options) {
  var _data$offsets$arrow;

  // arrow depends on keepTogether in order to work
  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {
    return data;
  }

  var arrowElement = options.element;

  // if arrowElement is a string, suppose it's a CSS selector
  if (typeof arrowElement === 'string') {
    arrowElement = data.instance.popper.querySelector(arrowElement);

    // if arrowElement is not found, don't run the modifier
    if (!arrowElement) {
      return data;
    }
  } else {
    // if the arrowElement isn't a query selector we must check that the
    // provided DOM node is child of its popper node
    if (!data.instance.popper.contains(arrowElement)) {
      console.warn('WARNING: `arrow.element` must be child of its popper element!');
      return data;
    }
  }

  var placement = data.placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var isVertical = ['left', 'right'].indexOf(placement) !== -1;

  var len = isVertical ? 'height' : 'width';
  var sideCapitalized = isVertical ? 'Top' : 'Left';
  var side = sideCapitalized.toLowerCase();
  var altSide = isVertical ? 'left' : 'top';
  var opSide = isVertical ? 'bottom' : 'right';
  var arrowElementSize = getOuterSizes(arrowElement)[len];

  //
  // extends keepTogether behavior making sure the popper and its
  // reference have enough pixels in conjunction
  //

  // top/left side
  if (reference[opSide] - arrowElementSize < popper[side]) {
    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
  }
  // bottom/right side
  if (reference[side] + arrowElementSize > popper[opSide]) {
    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
  }
  data.offsets.popper = getClientRect(data.offsets.popper);

  // compute center of the popper
  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;

  // Compute the sideValue using the updated popper offsets
  // take popper margin in account because we don't have this info available
  var css = getStyleComputedProperty(data.instance.popper);
  var popperMarginSide = parseFloat(css['margin' + sideCapitalized]);
  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width']);
  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;

  // prevent arrowElement from being placed not contiguously to its popper
  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);

  data.arrowElement = arrowElement;
  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);

  return data;
}

/**
 * Get the opposite placement variation of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement variation
 * @returns {String} flipped placement variation
 */
function getOppositeVariation(variation) {
  if (variation === 'end') {
    return 'start';
  } else if (variation === 'start') {
    return 'end';
  }
  return variation;
}

/**
 * List of accepted placements to use as values of the `placement` option.<br />
 * Valid placements are:
 * - `auto`
 * - `top`
 * - `right`
 * - `bottom`
 * - `left`
 *
 * Each placement can have a variation from this list:
 * - `-start`
 * - `-end`
 *
 * Variations are interpreted easily if you think of them as the left to right
 * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
 * is right.<br />
 * Vertically (`left` and `right`), `start` is top and `end` is bottom.
 *
 * Some valid examples are:
 * - `top-end` (on top of reference, right aligned)
 * - `right-start` (on right of reference, top aligned)
 * - `bottom` (on bottom, centered)
 * - `auto-end` (on the side with more space available, alignment depends by placement)
 *
 * @static
 * @type {Array}
 * @enum {String}
 * @readonly
 * @method placements
 * @memberof Popper
 */
var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];

// Get rid of `auto` `auto-start` and `auto-end`
var validPlacements = placements.slice(3);

/**
 * Given an initial placement, returns all the subsequent placements
 * clockwise (or counter-clockwise).
 *
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement - A valid placement (it accepts variations)
 * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
 * @returns {Array} placements including their variations
 */
function clockwise(placement) {
  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var index = validPlacements.indexOf(placement);
  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
  return counter ? arr.reverse() : arr;
}

var BEHAVIORS = {
  FLIP: 'flip',
  CLOCKWISE: 'clockwise',
  COUNTERCLOCKWISE: 'counterclockwise'
};

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function flip(data, options) {
  // if `inner` modifier is enabled, we can't use the `flip` modifier
  if (isModifierEnabled(data.instance.modifiers, 'inner')) {
    return data;
  }

  if (data.flipped && data.placement === data.originalPlacement) {
    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
    return data;
  }

  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);

  var placement = data.placement.split('-')[0];
  var placementOpposite = getOppositePlacement(placement);
  var variation = data.placement.split('-')[1] || '';

  var flipOrder = [];

  switch (options.behavior) {
    case BEHAVIORS.FLIP:
      flipOrder = [placement, placementOpposite];
      break;
    case BEHAVIORS.CLOCKWISE:
      flipOrder = clockwise(placement);
      break;
    case BEHAVIORS.COUNTERCLOCKWISE:
      flipOrder = clockwise(placement, true);
      break;
    default:
      flipOrder = options.behavior;
  }

  flipOrder.forEach(function (step, index) {
    if (placement !== step || flipOrder.length === index + 1) {
      return data;
    }

    placement = data.placement.split('-')[0];
    placementOpposite = getOppositePlacement(placement);

    var popperOffsets = data.offsets.popper;
    var refOffsets = data.offsets.reference;

    // using floor because the reference offsets may contain decimals we are not going to consider here
    var floor = Math.floor;
    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);

    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);

    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;

    // flip the variation if required
    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;

    // flips variation if reference element overflows boundaries
    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);

    // flips variation if popper content overflows boundaries
    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);

    var flippedVariation = flippedVariationByRef || flippedVariationByContent;

    if (overlapsRef || overflowsBoundaries || flippedVariation) {
      // this boolean to detect any flip loop
      data.flipped = true;

      if (overlapsRef || overflowsBoundaries) {
        placement = flipOrder[index + 1];
      }

      if (flippedVariation) {
        variation = getOppositeVariation(variation);
      }

      data.placement = placement + (variation ? '-' + variation : '');

      // this object contains `position`, we want to preserve it along with
      // any additional property we may add in the future
      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));

      data = runModifiers(data.instance.modifiers, data, 'flip');
    }
  });
  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function keepTogether(data) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var placement = data.placement.split('-')[0];
  var floor = Math.floor;
  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
  var side = isVertical ? 'right' : 'bottom';
  var opSide = isVertical ? 'left' : 'top';
  var measurement = isVertical ? 'width' : 'height';

  if (popper[side] < floor(reference[opSide])) {
    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
  }
  if (popper[opSide] > floor(reference[side])) {
    data.offsets.popper[opSide] = floor(reference[side]);
  }

  return data;
}

/**
 * Converts a string containing value + unit into a px value number
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} str - Value + unit string
 * @argument {String} measurement - `height` or `width`
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @returns {Number|String}
 * Value in pixels, or original string if no values were extracted
 */
function toValue(str, measurement, popperOffsets, referenceOffsets) {
  // separate value from unit
  var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
  var value = +split[1];
  var unit = split[2];

  // If it's not a number it's an operator, I guess
  if (!value) {
    return str;
  }

  if (unit.indexOf('%') === 0) {
    var element = void 0;
    switch (unit) {
      case '%p':
        element = popperOffsets;
        break;
      case '%':
      case '%r':
      default:
        element = referenceOffsets;
    }

    var rect = getClientRect(element);
    return rect[measurement] / 100 * value;
  } else if (unit === 'vh' || unit === 'vw') {
    // if is a vh or vw, we calculate the size based on the viewport
    var size = void 0;
    if (unit === 'vh') {
      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
    } else {
      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
    }
    return size / 100 * value;
  } else {
    // if is an explicit pixel unit, we get rid of the unit and keep the value
    // if is an implicit unit, it's px, and we return just the value
    return value;
  }
}

/**
 * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} offset
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @argument {String} basePlacement
 * @returns {Array} a two cells array with x and y offsets in numbers
 */
function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
  var offsets = [0, 0];

  // Use height if placement is left or right and index is 0 otherwise use width
  // in this way the first offset will use an axis and the second one
  // will use the other one
  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;

  // Split the offset string to obtain a list of values and operands
  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)
  var fragments = offset.split(/(\+|\-)/).map(function (frag) {
    return frag.trim();
  });

  // Detect if the offset string contains a pair of values or a single one
  // they could be separated by comma or space
  var divider = fragments.indexOf(find(fragments, function (frag) {
    return frag.search(/,|\s/) !== -1;
  }));

  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
  }

  // If divider is found, we divide the list of values and operands to divide
  // them by ofset X and Y.
  var splitRegex = /\s*,\s*|\s+/;
  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];

  // Convert the values with units to absolute pixels to allow our computations
  ops = ops.map(function (op, index) {
    // Most of the units rely on the orientation of the popper
    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
    var mergeWithPrevious = false;
    return op
    // This aggregates any `+` or `-` sign that aren't considered operators
    // e.g.: 10 + +5 => [10, +, +5]
    .reduce(function (a, b) {
      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {
        a[a.length - 1] = b;
        mergeWithPrevious = true;
        return a;
      } else if (mergeWithPrevious) {
        a[a.length - 1] += b;
        mergeWithPrevious = false;
        return a;
      } else {
        return a.concat(b);
      }
    }, [])
    // Here we convert the string values into number values (in px)
    .map(function (str) {
      return toValue(str, measurement, popperOffsets, referenceOffsets);
    });
  });

  // Loop trough the offsets arrays and execute the operations
  ops.forEach(function (op, index) {
    op.forEach(function (frag, index2) {
      if (isNumeric(frag)) {
        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
      }
    });
  });
  return offsets;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @argument {Number|String} options.offset=0
 * The offset value as described in the modifier description
 * @returns {Object} The data object, properly modified
 */
function offset(data, _ref) {
  var offset = _ref.offset;
  var placement = data.placement,
      _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var basePlacement = placement.split('-')[0];

  var offsets = void 0;
  if (isNumeric(+offset)) {
    offsets = [+offset, 0];
  } else {
    offsets = parseOffset(offset, popper, reference, basePlacement);
  }

  if (basePlacement === 'left') {
    popper.top += offsets[0];
    popper.left -= offsets[1];
  } else if (basePlacement === 'right') {
    popper.top += offsets[0];
    popper.left += offsets[1];
  } else if (basePlacement === 'top') {
    popper.left += offsets[0];
    popper.top -= offsets[1];
  } else if (basePlacement === 'bottom') {
    popper.left += offsets[0];
    popper.top += offsets[1];
  }

  data.popper = popper;
  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function preventOverflow(data, options) {
  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);

  // If offsetParent is the reference element, we really want to
  // go one step up and use the next offsetParent as reference to
  // avoid to make this modifier completely useless and look like broken
  if (data.instance.reference === boundariesElement) {
    boundariesElement = getOffsetParent(boundariesElement);
  }

  // NOTE: DOM access here
  // resets the popper's position so that the document size can be calculated excluding
  // the size of the popper element itself
  var transformProp = getSupportedPropertyName('transform');
  var popperStyles = data.instance.popper.style; // assignment to help minification
  var top = popperStyles.top,
      left = popperStyles.left,
      transform = popperStyles[transformProp];

  popperStyles.top = '';
  popperStyles.left = '';
  popperStyles[transformProp] = '';

  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);

  // NOTE: DOM access here
  // restores the original style properties after the offsets have been computed
  popperStyles.top = top;
  popperStyles.left = left;
  popperStyles[transformProp] = transform;

  options.boundaries = boundaries;

  var order = options.priority;
  var popper = data.offsets.popper;

  var check = {
    primary: function primary(placement) {
      var value = popper[placement];
      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
        value = Math.max(popper[placement], boundaries[placement]);
      }
      return defineProperty({}, placement, value);
    },
    secondary: function secondary(placement) {
      var mainSide = placement === 'right' ? 'left' : 'top';
      var value = popper[mainSide];
      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
      }
      return defineProperty({}, mainSide, value);
    }
  };

  order.forEach(function (placement) {
    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';
    popper = _extends({}, popper, check[side](placement));
  });

  data.offsets.popper = popper;

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function shift(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var shiftvariation = placement.split('-')[1];

  // if shift shiftvariation is specified, run the modifier
  if (shiftvariation) {
    var _data$offsets = data.offsets,
        reference = _data$offsets.reference,
        popper = _data$offsets.popper;

    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
    var side = isVertical ? 'left' : 'top';
    var measurement = isVertical ? 'width' : 'height';

    var shiftOffsets = {
      start: defineProperty({}, side, reference[side]),
      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
    };

    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);
  }

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function hide(data) {
  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {
    return data;
  }

  var refRect = data.offsets.reference;
  var bound = find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'preventOverflow';
  }).boundaries;

  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === true) {
      return data;
    }

    data.hide = true;
    data.attributes['x-out-of-boundaries'] = '';
  } else {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === false) {
      return data;
    }

    data.hide = false;
    data.attributes['x-out-of-boundaries'] = false;
  }

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function inner(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;

  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;

  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);

  data.placement = getOppositePlacement(placement);
  data.offsets.popper = getClientRect(popper);

  return data;
}

/**
 * Modifier function, each modifier can have a function of this type assigned
 * to its `fn` property.<br />
 * These functions will be called on each update, this means that you must
 * make sure they are performant enough to avoid performance bottlenecks.
 *
 * @function ModifierFn
 * @argument {dataObject} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {dataObject} The data object, properly modified
 */

/**
 * Modifiers are plugins used to alter the behavior of your poppers.<br />
 * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
 * needed by the library.
 *
 * Usually you don't want to override the `order`, `fn` and `onLoad` props.
 * All the other properties are configurations that could be tweaked.
 * @namespace modifiers
 */
var modifiers = {
  /**
   * Modifier used to shift the popper on the start or end of its reference
   * element.<br />
   * It will read the variation of the `placement` property.<br />
   * It can be one either `-end` or `-start`.
   * @memberof modifiers
   * @inner
   */
  shift: {
    /** @prop {number} order=100 - Index used to define the order of execution */
    order: 100,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: shift
  },

  /**
   * The `offset` modifier can shift your popper on both its axis.
   *
   * It accepts the following units:
   * - `px` or unit-less, interpreted as pixels
   * - `%` or `%r`, percentage relative to the length of the reference element
   * - `%p`, percentage relative to the length of the popper element
   * - `vw`, CSS viewport width unit
   * - `vh`, CSS viewport height unit
   *
   * For length is intended the main axis relative to the placement of the popper.<br />
   * This means that if the placement is `top` or `bottom`, the length will be the
   * `width`. In case of `left` or `right`, it will be the `height`.
   *
   * You can provide a single value (as `Number` or `String`), or a pair of values
   * as `String` divided by a comma or one (or more) white spaces.<br />
   * The latter is a deprecated method because it leads to confusion and will be
   * removed in v2.<br />
   * Additionally, it accepts additions and subtractions between different units.
   * Note that multiplications and divisions aren't supported.
   *
   * Valid examples are:
   * ```
   * 10
   * '10%'
   * '10, 10'
   * '10%, 10'
   * '10 + 10%'
   * '10 - 5vh + 3%'
   * '-10px + 5vh, 5px - 6%'
   * ```
   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).
   *
   * @memberof modifiers
   * @inner
   */
  offset: {
    /** @prop {number} order=200 - Index used to define the order of execution */
    order: 200,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: offset,
    /** @prop {Number|String} offset=0
     * The offset value as described in the modifier description
     */
    offset: 0
  },

  /**
   * Modifier used to prevent the popper from being positioned outside the boundary.
   *
   * A scenario exists where the reference itself is not within the boundaries.<br />
   * We can say it has "escaped the boundaries" — or just "escaped".<br />
   * In this case we need to decide whether the popper should either:
   *
   * - detach from the reference and remain "trapped" in the boundaries, or
   * - if it should ignore the boundary and "escape with its reference"
   *
   * When `escapeWithReference` is set to`true` and reference is completely
   * outside its boundaries, the popper will overflow (or completely leave)
   * the boundaries in order to remain attached to the edge of the reference.
   *
   * @memberof modifiers
   * @inner
   */
  preventOverflow: {
    /** @prop {number} order=300 - Index used to define the order of execution */
    order: 300,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: preventOverflow,
    /**
     * @prop {Array} [priority=['left','right','top','bottom']]
     * Popper will try to prevent overflow following these priorities by default,
     * then, it could overflow on the left and on top of the `boundariesElement`
     */
    priority: ['left', 'right', 'top', 'bottom'],
    /**
     * @prop {number} padding=5
     * Amount of pixel used to define a minimum distance between the boundaries
     * and the popper. This makes sure the popper always has a little padding
     * between the edges of its container
     */
    padding: 5,
    /**
     * @prop {String|HTMLElement} boundariesElement='scrollParent'
     * Boundaries used by the modifier. Can be `scrollParent`, `window`,
     * `viewport` or any DOM element.
     */
    boundariesElement: 'scrollParent'
  },

  /**
   * Modifier used to make sure the reference and its popper stay near each other
   * without leaving any gap between the two. Especially useful when the arrow is
   * enabled and you want to ensure that it points to its reference element.
   * It cares only about the first axis. You can still have poppers with margin
   * between the popper and its reference element.
   * @memberof modifiers
   * @inner
   */
  keepTogether: {
    /** @prop {number} order=400 - Index used to define the order of execution */
    order: 400,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: keepTogether
  },

  /**
   * This modifier is used to move the `arrowElement` of the popper to make
   * sure it is positioned between the reference element and its popper element.
   * It will read the outer size of the `arrowElement` node to detect how many
   * pixels of conjunction are needed.
   *
   * It has no effect if no `arrowElement` is provided.
   * @memberof modifiers
   * @inner
   */
  arrow: {
    /** @prop {number} order=500 - Index used to define the order of execution */
    order: 500,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: arrow,
    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
    element: '[x-arrow]'
  },

  /**
   * Modifier used to flip the popper's placement when it starts to overlap its
   * reference element.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   *
   * **NOTE:** this modifier will interrupt the current update cycle and will
   * restart it if it detects the need to flip the placement.
   * @memberof modifiers
   * @inner
   */
  flip: {
    /** @prop {number} order=600 - Index used to define the order of execution */
    order: 600,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: flip,
    /**
     * @prop {String|Array} behavior='flip'
     * The behavior used to change the popper's placement. It can be one of
     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
     * placements (with optional variations)
     */
    behavior: 'flip',
    /**
     * @prop {number} padding=5
     * The popper will flip if it hits the edges of the `boundariesElement`
     */
    padding: 5,
    /**
     * @prop {String|HTMLElement} boundariesElement='viewport'
     * The element which will define the boundaries of the popper position.
     * The popper will never be placed outside of the defined boundaries
     * (except if `keepTogether` is enabled)
     */
    boundariesElement: 'viewport',
    /**
     * @prop {Boolean} flipVariations=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the reference element overlaps its boundaries.
     *
     * The original placement should have a set variation.
     */
    flipVariations: false,
    /**
     * @prop {Boolean} flipVariationsByContent=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the popper element overlaps its reference boundaries.
     *
     * The original placement should have a set variation.
     */
    flipVariationsByContent: false
  },

  /**
   * Modifier used to make the popper flow toward the inner of the reference element.
   * By default, when this modifier is disabled, the popper will be placed outside
   * the reference element.
   * @memberof modifiers
   * @inner
   */
  inner: {
    /** @prop {number} order=700 - Index used to define the order of execution */
    order: 700,
    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
    enabled: false,
    /** @prop {ModifierFn} */
    fn: inner
  },

  /**
   * Modifier used to hide the popper when its reference element is outside of the
   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
   * be used to hide with a CSS selector the popper when its reference is
   * out of boundaries.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   * @memberof modifiers
   * @inner
   */
  hide: {
    /** @prop {number} order=800 - Index used to define the order of execution */
    order: 800,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: hide
  },

  /**
   * Computes the style that will be applied to the popper element to gets
   * properly positioned.
   *
   * Note that this modifier will not touch the DOM, it just prepares the styles
   * so that `applyStyle` modifier can apply it. This separation is useful
   * in case you need to replace `applyStyle` with a custom implementation.
   *
   * This modifier has `850` as `order` value to maintain backward compatibility
   * with previous versions of Popper.js. Expect the modifiers ordering method
   * to change in future major versions of the library.
   *
   * @memberof modifiers
   * @inner
   */
  computeStyle: {
    /** @prop {number} order=850 - Index used to define the order of execution */
    order: 850,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: computeStyle,
    /**
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: true,
    /**
     * @prop {string} [x='bottom']
     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
     * Change this if your popper should grow in a direction different from `bottom`
     */
    x: 'bottom',
    /**
     * @prop {string} [x='left']
     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
     * Change this if your popper should grow in a direction different from `right`
     */
    y: 'right'
  },

  /**
   * Applies the computed styles to the popper element.
   *
   * All the DOM manipulations are limited to this modifier. This is useful in case
   * you want to integrate Popper.js inside a framework or view library and you
   * want to delegate all the DOM manipulations to it.
   *
   * Note that if you disable this modifier, you must make sure the popper element
   * has its position set to `absolute` before Popper.js can do its work!
   *
   * Just disable this modifier and define your own to achieve the desired effect.
   *
   * @memberof modifiers
   * @inner
   */
  applyStyle: {
    /** @prop {number} order=900 - Index used to define the order of execution */
    order: 900,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: applyStyle,
    /** @prop {Function} */
    onLoad: applyStyleOnLoad,
    /**
     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: undefined
  }
};

/**
 * The `dataObject` is an object containing all the information used by Popper.js.
 * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
 * @name dataObject
 * @property {Object} data.instance The Popper.js instance
 * @property {String} data.placement Placement applied to popper
 * @property {String} data.originalPlacement Placement originally defined on init
 * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
 * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper
 * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
 * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.boundaries Offsets of the popper boundaries
 * @property {Object} data.offsets The measurements of popper, reference and arrow elements
 * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
 */

/**
 * Default options provided to Popper.js constructor.<br />
 * These can be overridden using the `options` argument of Popper.js.<br />
 * To override an option, simply pass an object with the same
 * structure of the `options` object, as the 3rd argument. For example:
 * ```
 * new Popper(ref, pop, {
 *   modifiers: {
 *     preventOverflow: { enabled: false }
 *   }
 * })
 * ```
 * @type {Object}
 * @static
 * @memberof Popper
 */
var Defaults = {
  /**
   * Popper's placement.
   * @prop {Popper.placements} placement='bottom'
   */
  placement: 'bottom',

  /**
   * Set this to true if you want popper to position it self in 'fixed' mode
   * @prop {Boolean} positionFixed=false
   */
  positionFixed: false,

  /**
   * Whether events (resize, scroll) are initially enabled.
   * @prop {Boolean} eventsEnabled=true
   */
  eventsEnabled: true,

  /**
   * Set to true if you want to automatically remove the popper when
   * you call the `destroy` method.
   * @prop {Boolean} removeOnDestroy=false
   */
  removeOnDestroy: false,

  /**
   * Callback called when the popper is created.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onCreate}
   */
  onCreate: function onCreate() {},

  /**
   * Callback called when the popper is updated. This callback is not called
   * on the initialization/creation of the popper, but only on subsequent
   * updates.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onUpdate}
   */
  onUpdate: function onUpdate() {},

  /**
   * List of modifiers used to modify the offsets before they are applied to the popper.
   * They provide most of the functionalities of Popper.js.
   * @prop {modifiers}
   */
  modifiers: modifiers
};

/**
 * @callback onCreate
 * @param {dataObject} data
 */

/**
 * @callback onUpdate
 * @param {dataObject} data
 */

// Utils
// Methods
var Popper = function () {
  /**
   * Creates a new Popper.js instance.
   * @class Popper
   * @param {Element|referenceObject} reference - The reference element used to position the popper
   * @param {Element} popper - The HTML / XML element used as the popper
   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
   * @return {Object} instance - The generated Popper.js instance
   */
  function Popper(reference, popper) {
    var _this = this;

    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    classCallCheck(this, Popper);

    this.scheduleUpdate = function () {
      return requestAnimationFrame(_this.update);
    };

    // make update() debounced, so that it only runs at most once-per-tick
    this.update = debounce(this.update.bind(this));

    // with {} we create a new object with the options inside it
    this.options = _extends({}, Popper.Defaults, options);

    // init state
    this.state = {
      isDestroyed: false,
      isCreated: false,
      scrollParents: []
    };

    // get reference and popper elements (allow jQuery wrappers)
    this.reference = reference && reference.jquery ? reference[0] : reference;
    this.popper = popper && popper.jquery ? popper[0] : popper;

    // Deep merge modifiers options
    this.options.modifiers = {};
    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {
      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
    });

    // Refactoring modifiers' list (Object => Array)
    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {
      return _extends({
        name: name
      }, _this.options.modifiers[name]);
    })
    // sort the modifiers by order
    .sort(function (a, b) {
      return a.order - b.order;
    });

    // modifiers have the ability to execute arbitrary code when Popper.js get inited
    // such code is executed in the same order of its modifier
    // they could add new properties to their options configuration
    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!
    this.modifiers.forEach(function (modifierOptions) {
      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
      }
    });

    // fire the first update to position the popper in the right place
    this.update();

    var eventsEnabled = this.options.eventsEnabled;
    if (eventsEnabled) {
      // setup event listeners, they will take care of update the position in specific situations
      this.enableEventListeners();
    }

    this.state.eventsEnabled = eventsEnabled;
  }

  // We can't use class properties because they don't get listed in the
  // class prototype and break stuff like Sinon stubs


  createClass(Popper, [{
    key: 'update',
    value: function update$$1() {
      return update.call(this);
    }
  }, {
    key: 'destroy',
    value: function destroy$$1() {
      return destroy.call(this);
    }
  }, {
    key: 'enableEventListeners',
    value: function enableEventListeners$$1() {
      return enableEventListeners.call(this);
    }
  }, {
    key: 'disableEventListeners',
    value: function disableEventListeners$$1() {
      return disableEventListeners.call(this);
    }

    /**
     * Schedules an update. It will run on the next UI update available.
     * @method scheduleUpdate
     * @memberof Popper
     */


    /**
     * Collection of utilities useful when writing custom modifiers.
     * Starting from version 1.7, this method is available only if you
     * include `popper-utils.js` before `popper.js`.
     *
     * **DEPRECATION**: This way to access PopperUtils is deprecated
     * and will be removed in v2! Use the PopperUtils module directly instead.
     * Due to the high instability of the methods contained in Utils, we can't
     * guarantee them to follow semver. Use them at your own risk!
     * @static
     * @private
     * @type {Object}
     * @deprecated since version 1.8
     * @member Utils
     * @memberof Popper
     */

  }]);
  return Popper;
}();

/**
 * The `referenceObject` is an object that provides an interface compatible with Popper.js
 * and lets you use it as replacement of a real DOM node.<br />
 * You can use this method to position a popper relatively to a set of coordinates
 * in case you don't have a DOM node to use as reference.
 *
 * ```
 * new Popper(referenceObject, popperNode);
 * ```
 *
 * NB: This feature isn't supported in Internet Explorer 10.
 * @name referenceObject
 * @property {Function} data.getBoundingClientRect
 * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
 * @property {number} data.clientWidth
 * An ES6 getter that will return the width of the virtual reference element.
 * @property {number} data.clientHeight
 * An ES6 getter that will return the height of the virtual reference element.
 */


Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
Popper.placements = placements;
Popper.Defaults = Defaults;

/* harmony default export */ __webpack_exports__["default"] = (Popper);
//# sourceMappingURL=popper.js.map

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "./src/ts/data/megido/Megido.ts":
/*!**************************************!*\
  !*** ./src/ts/data/megido/Megido.ts ***!
  \**************************************/
/*! exports provided: MegidoList, joinAndSortMegidoByName */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MegidoList", function() { return MegidoList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "joinAndSortMegidoByName", function() { return joinAndSortMegidoByName; });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");
/* harmony import */ var _so_So01__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./so/So01 */ "./src/ts/data/megido/so/So01.ts");
/* harmony import */ var _so_So02__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./so/So02 */ "./src/ts/data/megido/so/So02.ts");
/* harmony import */ var _so_So03__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./so/So03 */ "./src/ts/data/megido/so/So03.ts");
/* harmony import */ var _so_So04__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./so/So04 */ "./src/ts/data/megido/so/So04.ts");
/* harmony import */ var _so_So05__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./so/So05 */ "./src/ts/data/megido/so/So05.ts");
/* harmony import */ var _so_So06__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./so/So06 */ "./src/ts/data/megido/so/So06.ts");
/* harmony import */ var _so_So07__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./so/So07 */ "./src/ts/data/megido/so/So07.ts");
/* harmony import */ var _so_So08__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./so/So08 */ "./src/ts/data/megido/so/So08.ts");
/* harmony import */ var _so_So09__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./so/So09 */ "./src/ts/data/megido/so/So09.ts");
/* harmony import */ var _so_So10__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./so/So10 */ "./src/ts/data/megido/so/So10.ts");
/* harmony import */ var _so_So11__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./so/So11 */ "./src/ts/data/megido/so/So11.ts");
/* harmony import */ var _so_So12__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./so/So12 */ "./src/ts/data/megido/so/So12.ts");
/* harmony import */ var _so_So13__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./so/So13 */ "./src/ts/data/megido/so/So13.ts");
/* harmony import */ var _so_So14__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./so/So14 */ "./src/ts/data/megido/so/So14.ts");
/* harmony import */ var _so_So15__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./so/So15 */ "./src/ts/data/megido/so/So15.ts");
/* harmony import */ var _so_So16__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./so/So16 */ "./src/ts/data/megido/so/So16.ts");
/* harmony import */ var _so_So17__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./so/So17 */ "./src/ts/data/megido/so/So17.ts");
/* harmony import */ var _so_So18__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./so/So18 */ "./src/ts/data/megido/so/So18.ts");
/* harmony import */ var _so_So19__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./so/So19 */ "./src/ts/data/megido/so/So19.ts");
/* harmony import */ var _so_So20__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./so/So20 */ "./src/ts/data/megido/so/So20.ts");
/* harmony import */ var _so_So21__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./so/So21 */ "./src/ts/data/megido/so/So21.ts");
/* harmony import */ var _so_So22__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./so/So22 */ "./src/ts/data/megido/so/So22.ts");
/* harmony import */ var _so_So23__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./so/So23 */ "./src/ts/data/megido/so/So23.ts");
/* harmony import */ var _so_So24__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./so/So24 */ "./src/ts/data/megido/so/So24.ts");
/* harmony import */ var _so_So25__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./so/So25 */ "./src/ts/data/megido/so/So25.ts");
/* harmony import */ var _so_So26__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./so/So26 */ "./src/ts/data/megido/so/So26.ts");
/* harmony import */ var _so_So27__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./so/So27 */ "./src/ts/data/megido/so/So27.ts");
/* harmony import */ var _so_So28__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./so/So28 */ "./src/ts/data/megido/so/So28.ts");
/* harmony import */ var _so_So29__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./so/So29 */ "./src/ts/data/megido/so/So29.ts");
/* harmony import */ var _so_So30__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./so/So30 */ "./src/ts/data/megido/so/So30.ts");
/* harmony import */ var _so_So31__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./so/So31 */ "./src/ts/data/megido/so/So31.ts");
/* harmony import */ var _so_So32__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./so/So32 */ "./src/ts/data/megido/so/So32.ts");
/* harmony import */ var _so_So33__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./so/So33 */ "./src/ts/data/megido/so/So33.ts");
/* harmony import */ var _so_So34__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./so/So34 */ "./src/ts/data/megido/so/So34.ts");
/* harmony import */ var _so_So35__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./so/So35 */ "./src/ts/data/megido/so/So35.ts");
/* harmony import */ var _so_So36__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./so/So36 */ "./src/ts/data/megido/so/So36.ts");
/* harmony import */ var _so_So37__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./so/So37 */ "./src/ts/data/megido/so/So37.ts");
/* harmony import */ var _so_So38__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./so/So38 */ "./src/ts/data/megido/so/So38.ts");
/* harmony import */ var _so_So39__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./so/So39 */ "./src/ts/data/megido/so/So39.ts");
/* harmony import */ var _so_So40__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./so/So40 */ "./src/ts/data/megido/so/So40.ts");
/* harmony import */ var _so_So41__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./so/So41 */ "./src/ts/data/megido/so/So41.ts");
/* harmony import */ var _so_So42__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./so/So42 */ "./src/ts/data/megido/so/So42.ts");
/* harmony import */ var _so_So43__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./so/So43 */ "./src/ts/data/megido/so/So43.ts");
/* harmony import */ var _so_So44__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./so/So44 */ "./src/ts/data/megido/so/So44.ts");
/* harmony import */ var _so_So45__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./so/So45 */ "./src/ts/data/megido/so/So45.ts");
/* harmony import */ var _so_So46__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./so/So46 */ "./src/ts/data/megido/so/So46.ts");
/* harmony import */ var _so_So47__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./so/So47 */ "./src/ts/data/megido/so/So47.ts");
/* harmony import */ var _so_So48__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./so/So48 */ "./src/ts/data/megido/so/So48.ts");
/* harmony import */ var _so_So49__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./so/So49 */ "./src/ts/data/megido/so/So49.ts");
/* harmony import */ var _so_So50__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./so/So50 */ "./src/ts/data/megido/so/So50.ts");
/* harmony import */ var _so_So51__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./so/So51 */ "./src/ts/data/megido/so/So51.ts");
/* harmony import */ var _so_So52__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./so/So52 */ "./src/ts/data/megido/so/So52.ts");
/* harmony import */ var _so_So53__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./so/So53 */ "./src/ts/data/megido/so/So53.ts");
/* harmony import */ var _so_So54__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./so/So54 */ "./src/ts/data/megido/so/So54.ts");
/* harmony import */ var _so_So55__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./so/So55 */ "./src/ts/data/megido/so/So55.ts");
/* harmony import */ var _so_So56__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./so/So56 */ "./src/ts/data/megido/so/So56.ts");
/* harmony import */ var _so_So57__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./so/So57 */ "./src/ts/data/megido/so/So57.ts");
/* harmony import */ var _so_So58__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./so/So58 */ "./src/ts/data/megido/so/So58.ts");
/* harmony import */ var _so_So59__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./so/So59 */ "./src/ts/data/megido/so/So59.ts");
/* harmony import */ var _so_So60__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./so/So60 */ "./src/ts/data/megido/so/So60.ts");
/* harmony import */ var _so_So61__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./so/So61 */ "./src/ts/data/megido/so/So61.ts");
/* harmony import */ var _so_So62__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./so/So62 */ "./src/ts/data/megido/so/So62.ts");
/* harmony import */ var _so_So63__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./so/So63 */ "./src/ts/data/megido/so/So63.ts");
/* harmony import */ var _so_So64__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./so/So64 */ "./src/ts/data/megido/so/So64.ts");
/* harmony import */ var _so_So65__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./so/So65 */ "./src/ts/data/megido/so/So65.ts");
/* harmony import */ var _so_So66__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./so/So66 */ "./src/ts/data/megido/so/So66.ts");
/* harmony import */ var _so_So67__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./so/So67 */ "./src/ts/data/megido/so/So67.ts");
/* harmony import */ var _so_So68__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./so/So68 */ "./src/ts/data/megido/so/So68.ts");
/* harmony import */ var _so_So69__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./so/So69 */ "./src/ts/data/megido/so/So69.ts");
/* harmony import */ var _so_So70__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./so/So70 */ "./src/ts/data/megido/so/So70.ts");
/* harmony import */ var _so_So71__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./so/So71 */ "./src/ts/data/megido/so/So71.ts");
/* harmony import */ var _so_So72__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./so/So72 */ "./src/ts/data/megido/so/So72.ts");
/* harmony import */ var _shin_Shin01__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./shin/Shin01 */ "./src/ts/data/megido/shin/Shin01.ts");
/* harmony import */ var _shin_Shin02__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./shin/Shin02 */ "./src/ts/data/megido/shin/Shin02.ts");
/* harmony import */ var _shin_Shin03__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./shin/Shin03 */ "./src/ts/data/megido/shin/Shin03.ts");
/* harmony import */ var _shin_Shin04__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./shin/Shin04 */ "./src/ts/data/megido/shin/Shin04.ts");
/* harmony import */ var _shin_Shin05__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./shin/Shin05 */ "./src/ts/data/megido/shin/Shin05.ts");
/* harmony import */ var _shin_Shin06__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./shin/Shin06 */ "./src/ts/data/megido/shin/Shin06.ts");
/* harmony import */ var _shin_Shin07__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./shin/Shin07 */ "./src/ts/data/megido/shin/Shin07.ts");
/* harmony import */ var _shin_Shin09__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./shin/Shin09 */ "./src/ts/data/megido/shin/Shin09.ts");
/* harmony import */ var _shin_Shin10__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./shin/Shin10 */ "./src/ts/data/megido/shin/Shin10.ts");
/* harmony import */ var _shin_Shin11__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./shin/Shin11 */ "./src/ts/data/megido/shin/Shin11.ts");
/* harmony import */ var _shin_Shin12__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./shin/Shin12 */ "./src/ts/data/megido/shin/Shin12.ts");
/* harmony import */ var _shin_Shin13__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./shin/Shin13 */ "./src/ts/data/megido/shin/Shin13.ts");
/* harmony import */ var _shin_Shin14__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./shin/Shin14 */ "./src/ts/data/megido/shin/Shin14.ts");
/* harmony import */ var _shin_Shin15__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./shin/Shin15 */ "./src/ts/data/megido/shin/Shin15.ts");
/* harmony import */ var _shin_Shin17__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./shin/Shin17 */ "./src/ts/data/megido/shin/Shin17.ts");
/* harmony import */ var _shin_Shin18__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./shin/Shin18 */ "./src/ts/data/megido/shin/Shin18.ts");
/* harmony import */ var _shin_Shin19__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./shin/Shin19 */ "./src/ts/data/megido/shin/Shin19.ts");
/* harmony import */ var _shin_Shin21__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./shin/Shin21 */ "./src/ts/data/megido/shin/Shin21.ts");
/* harmony import */ var _shin_Shin22__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ./shin/Shin22 */ "./src/ts/data/megido/shin/Shin22.ts");
/* harmony import */ var _shin_Shin23__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ./shin/Shin23 */ "./src/ts/data/megido/shin/Shin23.ts");
/* harmony import */ var _shin_Shin25__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ./shin/Shin25 */ "./src/ts/data/megido/shin/Shin25.ts");
/* harmony import */ var _shin_Shin26__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ./shin/Shin26 */ "./src/ts/data/megido/shin/Shin26.ts");
/* harmony import */ var _shin_Shin27__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ./shin/Shin27 */ "./src/ts/data/megido/shin/Shin27.ts");
/* harmony import */ var _shin_Shin28__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ./shin/Shin28 */ "./src/ts/data/megido/shin/Shin28.ts");
/* harmony import */ var _shin_Shin31__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ./shin/Shin31 */ "./src/ts/data/megido/shin/Shin31.ts");
/* harmony import */ var _shin_Shin33__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ./shin/Shin33 */ "./src/ts/data/megido/shin/Shin33.ts");
/* harmony import */ var _shin_Shin36__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ./shin/Shin36 */ "./src/ts/data/megido/shin/Shin36.ts");
/* harmony import */ var _shin_Shin38__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ./shin/Shin38 */ "./src/ts/data/megido/shin/Shin38.ts");
/* harmony import */ var _shin_Shin41__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ./shin/Shin41 */ "./src/ts/data/megido/shin/Shin41.ts");
/* harmony import */ var _shin_Shin43__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ./shin/Shin43 */ "./src/ts/data/megido/shin/Shin43.ts");
/* harmony import */ var _shin_Shin48__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! ./shin/Shin48 */ "./src/ts/data/megido/shin/Shin48.ts");
/* harmony import */ var _shin_Shin49__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! ./shin/Shin49 */ "./src/ts/data/megido/shin/Shin49.ts");
/* harmony import */ var _shin_Shin50__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! ./shin/Shin50 */ "./src/ts/data/megido/shin/Shin50.ts");
/* harmony import */ var _shin_Shin51__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! ./shin/Shin51 */ "./src/ts/data/megido/shin/Shin51.ts");
/* harmony import */ var _shin_Shin52__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! ./shin/Shin52 */ "./src/ts/data/megido/shin/Shin52.ts");
/* harmony import */ var _shin_Shin53__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! ./shin/Shin53 */ "./src/ts/data/megido/shin/Shin53.ts");
/* harmony import */ var _shin_Shin54__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! ./shin/Shin54 */ "./src/ts/data/megido/shin/Shin54.ts");
/* harmony import */ var _shin_Shin55__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! ./shin/Shin55 */ "./src/ts/data/megido/shin/Shin55.ts");
/* harmony import */ var _shin_Shin57__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! ./shin/Shin57 */ "./src/ts/data/megido/shin/Shin57.ts");
/* harmony import */ var _shin_Shin58__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! ./shin/Shin58 */ "./src/ts/data/megido/shin/Shin58.ts");
/* harmony import */ var _shin_Shin59__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! ./shin/Shin59 */ "./src/ts/data/megido/shin/Shin59.ts");
/* harmony import */ var _shin_Shin62__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(/*! ./shin/Shin62 */ "./src/ts/data/megido/shin/Shin62.ts");
/* harmony import */ var _shin_Shin63__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(/*! ./shin/Shin63 */ "./src/ts/data/megido/shin/Shin63.ts");
/* harmony import */ var _shin_Shin64__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(/*! ./shin/Shin64 */ "./src/ts/data/megido/shin/Shin64.ts");
/* harmony import */ var _shin_Shin65__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(/*! ./shin/Shin65 */ "./src/ts/data/megido/shin/Shin65.ts");
/* harmony import */ var _shin_Shin68__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(/*! ./shin/Shin68 */ "./src/ts/data/megido/shin/Shin68.ts");
/* harmony import */ var _shin_Shin69__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(/*! ./shin/Shin69 */ "./src/ts/data/megido/shin/Shin69.ts");
/* harmony import */ var _shin_Shin70__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(/*! ./shin/Shin70 */ "./src/ts/data/megido/shin/Shin70.ts");
/* harmony import */ var _shin_Shin71__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(/*! ./shin/Shin71 */ "./src/ts/data/megido/shin/Shin71.ts");

















































































// import Shin08 from './shin/Shin08';







// import Shin16 from './shin/Shin16';



// import Shin20 from './shin/Shin20';



// import Shin24 from './shin/Shin24';




// import Shin29 from './shin/Shin29';
// import Shin30 from './shin/Shin30';

// import Shin32 from './shin/Shin32';

// import Shin34 from './shin/Shin34';
// import Shin35 from './shin/Shin35';

// import Shin37 from './shin/Shin37';

// import Shin39 from './shin/Shin39';
// import Shin40 from './shin/Shin40';

// import Shin42 from './shin/Shin42';

// import Shin44 from './shin/Shin44';
// import Shin45 from './shin/Shin45';
// import Shin46 from './shin/Shin46';
// import Shin47 from './shin/Shin47';








// import Shin56 from './shin/Shin56';



// import Shin60 from './shin/Shin60';
// import Shin61 from './shin/Shin61';




// import Shin66 from './shin/Shin66';
// import Shin67 from './shin/Shin67';




// import Shin72 from './shin/Shin72';
const MegidoList = [];
function joinAndSortMegidoByName() {
    let megidoList = [];
    //#region メギド情報を配列にまとめる
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So01__WEBPACK_IMPORTED_MODULE_2__["So01"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So02__WEBPACK_IMPORTED_MODULE_3__["So02"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So03__WEBPACK_IMPORTED_MODULE_4__["So03"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So04__WEBPACK_IMPORTED_MODULE_5__["So04"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So05__WEBPACK_IMPORTED_MODULE_6__["So05"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So06__WEBPACK_IMPORTED_MODULE_7__["So06"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So07__WEBPACK_IMPORTED_MODULE_8__["So07"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So08__WEBPACK_IMPORTED_MODULE_9__["So08"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So09__WEBPACK_IMPORTED_MODULE_10__["So09"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So10__WEBPACK_IMPORTED_MODULE_11__["So10"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So11__WEBPACK_IMPORTED_MODULE_12__["So11"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So12__WEBPACK_IMPORTED_MODULE_13__["So12"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So13__WEBPACK_IMPORTED_MODULE_14__["So13"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So14__WEBPACK_IMPORTED_MODULE_15__["So14"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So15__WEBPACK_IMPORTED_MODULE_16__["So15"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So16__WEBPACK_IMPORTED_MODULE_17__["So16"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So17__WEBPACK_IMPORTED_MODULE_18__["So17"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So18__WEBPACK_IMPORTED_MODULE_19__["So18"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So19__WEBPACK_IMPORTED_MODULE_20__["So19"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So20__WEBPACK_IMPORTED_MODULE_21__["So20"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So21__WEBPACK_IMPORTED_MODULE_22__["So21"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So22__WEBPACK_IMPORTED_MODULE_23__["So22"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So23__WEBPACK_IMPORTED_MODULE_24__["So23"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So24__WEBPACK_IMPORTED_MODULE_25__["So24"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So25__WEBPACK_IMPORTED_MODULE_26__["So25"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So26__WEBPACK_IMPORTED_MODULE_27__["So26"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So27__WEBPACK_IMPORTED_MODULE_28__["So27"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So28__WEBPACK_IMPORTED_MODULE_29__["So28"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So29__WEBPACK_IMPORTED_MODULE_30__["So29"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So30__WEBPACK_IMPORTED_MODULE_31__["So30"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So31__WEBPACK_IMPORTED_MODULE_32__["So31"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So32__WEBPACK_IMPORTED_MODULE_33__["So32"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So33__WEBPACK_IMPORTED_MODULE_34__["So33"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So34__WEBPACK_IMPORTED_MODULE_35__["So34"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So35__WEBPACK_IMPORTED_MODULE_36__["So35"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So36__WEBPACK_IMPORTED_MODULE_37__["So36"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So37__WEBPACK_IMPORTED_MODULE_38__["So37"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So38__WEBPACK_IMPORTED_MODULE_39__["So38"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So39__WEBPACK_IMPORTED_MODULE_40__["So39"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So40__WEBPACK_IMPORTED_MODULE_41__["So40"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So41__WEBPACK_IMPORTED_MODULE_42__["So41"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So42__WEBPACK_IMPORTED_MODULE_43__["So42"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So43__WEBPACK_IMPORTED_MODULE_44__["So43"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So44__WEBPACK_IMPORTED_MODULE_45__["So44"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So45__WEBPACK_IMPORTED_MODULE_46__["So45"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So46__WEBPACK_IMPORTED_MODULE_47__["So46"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So47__WEBPACK_IMPORTED_MODULE_48__["So47"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So48__WEBPACK_IMPORTED_MODULE_49__["So48"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So49__WEBPACK_IMPORTED_MODULE_50__["So49"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So50__WEBPACK_IMPORTED_MODULE_51__["So50"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So51__WEBPACK_IMPORTED_MODULE_52__["So51"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So52__WEBPACK_IMPORTED_MODULE_53__["So52"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So53__WEBPACK_IMPORTED_MODULE_54__["So53"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So54__WEBPACK_IMPORTED_MODULE_55__["So54"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So55__WEBPACK_IMPORTED_MODULE_56__["So55"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So56__WEBPACK_IMPORTED_MODULE_57__["So56"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So57__WEBPACK_IMPORTED_MODULE_58__["So57"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So58__WEBPACK_IMPORTED_MODULE_59__["So58"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So59__WEBPACK_IMPORTED_MODULE_60__["So59"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So60__WEBPACK_IMPORTED_MODULE_61__["So60"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So61__WEBPACK_IMPORTED_MODULE_62__["So61"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So62__WEBPACK_IMPORTED_MODULE_63__["So62"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So63__WEBPACK_IMPORTED_MODULE_64__["So63"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So64__WEBPACK_IMPORTED_MODULE_65__["So64"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So65__WEBPACK_IMPORTED_MODULE_66__["So65"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So66__WEBPACK_IMPORTED_MODULE_67__["So66"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So67__WEBPACK_IMPORTED_MODULE_68__["So67"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So68__WEBPACK_IMPORTED_MODULE_69__["So68"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So69__WEBPACK_IMPORTED_MODULE_70__["So69"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So70__WEBPACK_IMPORTED_MODULE_71__["So70"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So71__WEBPACK_IMPORTED_MODULE_72__["So71"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _so_So72__WEBPACK_IMPORTED_MODULE_73__["So72"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin01__WEBPACK_IMPORTED_MODULE_74__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin02__WEBPACK_IMPORTED_MODULE_75__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin03__WEBPACK_IMPORTED_MODULE_76__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin04__WEBPACK_IMPORTED_MODULE_77__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin05__WEBPACK_IMPORTED_MODULE_78__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin06__WEBPACK_IMPORTED_MODULE_79__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin07__WEBPACK_IMPORTED_MODULE_80__["default"]);
    // $.merge(megidoList, Shin08);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin09__WEBPACK_IMPORTED_MODULE_81__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin10__WEBPACK_IMPORTED_MODULE_82__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin11__WEBPACK_IMPORTED_MODULE_83__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin12__WEBPACK_IMPORTED_MODULE_84__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin13__WEBPACK_IMPORTED_MODULE_85__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin14__WEBPACK_IMPORTED_MODULE_86__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin15__WEBPACK_IMPORTED_MODULE_87__["default"]);
    // $.merge(megidoList, Shin16);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin17__WEBPACK_IMPORTED_MODULE_88__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin18__WEBPACK_IMPORTED_MODULE_89__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin19__WEBPACK_IMPORTED_MODULE_90__["default"]);
    // $.merge(megidoList, Shin20);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin21__WEBPACK_IMPORTED_MODULE_91__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin22__WEBPACK_IMPORTED_MODULE_92__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin23__WEBPACK_IMPORTED_MODULE_93__["default"]);
    // $.merge(megidoList, Shin24);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin25__WEBPACK_IMPORTED_MODULE_94__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin26__WEBPACK_IMPORTED_MODULE_95__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin27__WEBPACK_IMPORTED_MODULE_96__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin28__WEBPACK_IMPORTED_MODULE_97__["default"]);
    // $.merge(megidoList, Shin29);
    // $.merge(megidoList, Shin30);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin31__WEBPACK_IMPORTED_MODULE_98__["default"]);
    // $.merge(megidoList, Shin32);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin33__WEBPACK_IMPORTED_MODULE_99__["default"]);
    // $.merge(megidoList, Shin34);
    // $.merge(megidoList, Shin35);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin36__WEBPACK_IMPORTED_MODULE_100__["default"]);
    // $.merge(megidoList, Shin37);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin38__WEBPACK_IMPORTED_MODULE_101__["default"]);
    // $.merge(megidoList, Shin39);
    // $.merge(megidoList, Shin40);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin41__WEBPACK_IMPORTED_MODULE_102__["default"]);
    // $.merge(megidoList, Shin42);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin43__WEBPACK_IMPORTED_MODULE_103__["default"]);
    // $.merge(megidoList, Shin44);
    // $.merge(megidoList, Shin45);
    // $.merge(megidoList, Shin46);
    // $.merge(megidoList, Shin47);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin48__WEBPACK_IMPORTED_MODULE_104__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin49__WEBPACK_IMPORTED_MODULE_105__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin50__WEBPACK_IMPORTED_MODULE_106__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin51__WEBPACK_IMPORTED_MODULE_107__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin52__WEBPACK_IMPORTED_MODULE_108__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin53__WEBPACK_IMPORTED_MODULE_109__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin54__WEBPACK_IMPORTED_MODULE_110__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin55__WEBPACK_IMPORTED_MODULE_111__["default"]);
    // $.merge(megidoList, Shin56);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin57__WEBPACK_IMPORTED_MODULE_112__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin58__WEBPACK_IMPORTED_MODULE_113__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin59__WEBPACK_IMPORTED_MODULE_114__["default"]);
    // $.merge(megidoList, Shin60);
    // $.merge(megidoList, Shin61);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin62__WEBPACK_IMPORTED_MODULE_115__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin63__WEBPACK_IMPORTED_MODULE_116__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin64__WEBPACK_IMPORTED_MODULE_117__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin65__WEBPACK_IMPORTED_MODULE_118__["default"]);
    // $.merge(megidoList, Shin66);
    // $.merge(megidoList, Shin67);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin68__WEBPACK_IMPORTED_MODULE_119__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin69__WEBPACK_IMPORTED_MODULE_120__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin70__WEBPACK_IMPORTED_MODULE_121__["default"]);
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, _shin_Shin71__WEBPACK_IMPORTED_MODULE_122__["default"]);
    // $.merge(megidoList, Shin72);
    //#endregion
    jquery__WEBPACK_IMPORTED_MODULE_0___default.a.merge(megidoList, MegidoList);
    return megidoList.sort(function (a, b) {
        if (a.name == b.name) {
            a.name += `（${Object(_enum_MegidoType__WEBPACK_IMPORTED_MODULE_1__["convertToStyleName"])(a.styleType)}）`;
            b.name += `（${Object(_enum_MegidoType__WEBPACK_IMPORTED_MODULE_1__["convertToStyleName"])(b.styleType)}）`;
            if (a.id > b.id)
                return 1;
            else
                return -1;
        }
        else if (a.name > b.name) {
            return 1;
        }
        else {
            return -1;
        }
    });
}


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin01.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin01.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 1,
        id: 1,
        name: 'リリム',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 7342,
        offense: 1198,
        deffense: 415,
        speed: 496,
        ability: {
            name: '夢の世界の支配者',
            text: '敵味方合わせて、睡眠状態のキャラクター1人につき、自身の攻撃力、防御力、素早さが10%上昇する（最大値50%）'
        },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '白昼夢＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 1.35,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 1.35,
                        hit: 1
                    },
                    {
                        level: 4,
                        magnification: 1.35,
                        hit: 1
                    }
                ]
            },
            {
                name: '苦痛のパトス＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'メルヘンダービー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 3.5,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 1,
        id: 2,
        name: 'リリム',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 6022,
        offense: 814,
        deffense: 677,
        speed: 533,
        ability: { name: '正邪の双翼', text: '自身の素早さが30%上昇する' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '探りの夢見＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '鬨夢＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '魘夢のプフェーアト＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2.5,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin02.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin02.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 2,
        id: 1,
        name: 'ニバス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 6143,
        offense: 1429,
        deffense: 406,
        speed: 480,
        ability: { name: 'ムードメーカー', text: '毎ターン終了時、25%の確率で自身以外の覚醒ゲージを+1する' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ラブリージャグラー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 1.25,
                        hit: 2
                    },
                    {
                        level: 3,
                        magnification: 1.25,
                        hit: 3
                    },
                    {
                        level: 4,
                        magnification: 1.25,
                        hit: 4
                    }
                ]
            },
            {
                name: 'ハッピーカーニバル＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ブレイブドール＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 3.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 2,
        id: 2,
        name: 'ニバス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 9089,
        offense: 1058,
        deffense: 482,
        speed: 420,
        ability: { name: '新ネタ披露の大一番', text: '大協奏中、致死ダメージを受けたとき、35%の確率で踏みとどまる' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'プリティダンス＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ジョークコースター＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ジョークコースター＋（大協奏）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    }
                ]
            },
            {
                name: 'パペットラプソディ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin03.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin03.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 3,
        id: 1,
        name: 'サキュバス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 7530,
        offense: 952,
        deffense: 429,
        speed: 631,
        ability: { name: 'カワイさの証明', text: '最初の2ターンの間、毎ターン終了時、自身の覚醒ゲージが+2される' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'クセになりそう☆＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.1,
                        hit: 1
                    }
                ]
            },
            {
                name: '難易度高過ぎィ！＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'チャームウィップ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0.9,
                        hit: 3
                    }
                ],
                increment: 0.015
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 3,
        id: 2,
        name: 'サキュバス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 8637,
        offense: 707,
        deffense: 495,
        speed: 534,
        ability: { name: 'アゲていくよ！', text: '毎ターン終了時、自身の覚醒ゲージが0のとき、覚醒ゲージが+2される' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '可愛さ弾けるぅ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '春色オーディション＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '宛先のない恋心＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin04.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin04.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 4,
        id: 1,
        name: 'ユフィール',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 7042,
        offense: 632,
        deffense: 635,
        speed: 614,
        ability: { name: '抜群の包容力', text: '男性キャラクターへの回復量が30%上昇する' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ふりふりエイド＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ひみつの診察室＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ミルキーライブラ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 4,
        id: 2,
        name: 'ユフィール',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 7070,
        offense: 700,
        deffense: 640,
        speed: 610,
        ability: { name: '医者の矜持', text: '味方が戦闘不能になったとき、自身の覚醒ゲージが+2される' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'いたいのとんでけ～＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ふりふり予防魄＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ゼーレグナーデ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];
/*

*/
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin05.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin05.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 5,
        id: 1,
        name: 'フリアエ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 6079,
        offense: 771,
        deffense: 635,
        speed: 647,
        ability: { name: '司法の番人', text: '行動開始時、20%の確率でスキルが追加される' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '秩序の障壁＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '判決『氷結の刑』＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    }
                ]
            },
            {
                name: '焼べる浄化の蒼炎＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin06.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin06.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 6,
        id: 1,
        name: 'アラストール',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 9208,
        offense: 776,
        deffense: 424,
        speed: 627,
        ability: { name: '胡蝶之夢', text: '毎ターン終了時、覚醒ゲージが+1される' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '天誅アレグロ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '贖罪のシルフィード＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    }
                ]
            },
            {
                name: '極刑デッドエンド＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2.5,
                        hit: 1
                    }
                ],
                increment: 0
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin07.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin07.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 7,
        id: 1,
        name: 'ヒュトギン',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 7616,
        offense: 784,
        deffense: 493,
        speed: 619,
        ability: { name: '巧みな交渉術', text: '行動開始時、20%の確率でチャージが追加される' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ラ・フォンターナ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.9,
                        hit: 1
                    }
                ]
            },
            {
                name: 'サルーテ！＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ヴァンタジオルチェ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin09.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin09.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 9,
        id: 1,
        name: 'インキュバス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 6209,
        offense: 1177,
        deffense: 489,
        speed: 497,
        ability: { name: '傲慢たる夢魔', text: 'めまい、混乱、悪夢のいずれかの状態異常が付与されている敵へのダメージが20%上昇する(効果は重複可能/最大60%上昇)' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ファスキナーレ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.9,
                        hit: 2
                    }
                ]
            },
            {
                name: 'ヒュプノインパーケ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.9,
                        hit: 3
                    }
                ]
            },
            {
                name: 'ドゥルケソムニウム＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            },
            {
                name: 'ドゥルケソムニウム＋(専用霊宝)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 0,
                        magnification: 2.25,
                        hit: 1
                    },
                    {
                        level: 1,
                        magnification: 2.6,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 2.95,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 3.3,
                        hit: 1
                    },
                    {
                        level: 4,
                        magnification: 3.65,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 9,
        id: 2,
        name: 'インキュバスC',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 8527,
        offense: 1370,
        deffense: 302,
        speed: 449,
        ability: { name: '反逆の夢魔', text: '自身のHPが33.3%以下のとき、奥義使用時、覚醒ゲージの消費が0になる' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'インクブスドルミーレ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'フェルムプロピーナ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'フェルムプロピーナ＋(Bアーツ)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'グランフィニス＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 4,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 5,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 6,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin10.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin10.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 10,
        id: 1,
        name: 'グリマルキン',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 7347,
        offense: 859,
        deffense: 483,
        speed: 652,
        ability: { name: 'バチバチしますニャ', text: '攻撃を受けたとき、10%の確率で雷ダメージで反撃する' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ねこねこパニック！＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '秘技！にゃん張り手＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 2
                    }
                ]
            },
            {
                name: 'プァプァランブル！＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 5.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin11.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin11.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 11,
        id: 1,
        name: 'コルソン',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 8949,
        offense: 788,
        deffense: 416,
        speed: 563,
        ability: { name: '魂無き軍団の王', text: '束縛状態の敵1人につき、自身の攻撃力が10%上昇する' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ヒミツのおまじない＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'みんなで突撃～＋(ぬいぐるみ巨大化)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.85,
                        hit: 0
                    }
                ]
            },
            {
                name: '一緒にあそぼっ！＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2.5,
                        hit: 1
                    }
                ]
            },
            {
                name: 'コーちゃん怒った！＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 4,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ストレイシープ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 4
                    }
                ],
                increment: 0.0125
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin12.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin12.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 12,
        id: 1,
        name: 'ジニマル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 5904,
        offense: 859,
        deffense: 612,
        speed: 538,
        ability: { name: '蒼海の滅王', text: '行動開始時、40%の確率でスキルが追加される' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'トーテンタンツ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ギフトヴィアベル＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ティーフゼヴォーゲ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2.5,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin13.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin13.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 13,
        id: 1,
        name: 'バフォメット',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 6898,
        offense: 1180,
        deffense: 369,
        speed: 645,
        ability: { name: '魔術の心得', text: '50%の確率で、ターン終了時に自身にかかっている状態異常を治癒する' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '風の紡ぎ唄＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '封邪のコントラクト＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'タブー・マジック＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 3,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin14.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin14.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 14,
        id: 1,
        name: 'サラ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 9190,
        offense: 638,
        deffense: 615,
        speed: 503,
        ability: { name: 'ここどこだろ～？', text: '毎ターン終了時に、自身の点穴を+5する' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '急に風が…！＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '髪が傷んでるよ～＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2.5,
                        hit: 1
                    }
                ]
            },
            {
                name: '牧歌の癒光＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin15.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin15.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 15,
        id: 1,
        name: 'サタナキア',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 8818,
        offense: 624,
        deffense: 646,
        speed: 505,
        ability: { name: '功利的策略', text: '戦闘不能時、ラッシュの味方全体の点穴を＋15する' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '禁断の晩餐＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '禁忌の実験譚＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ]
            },
            {
                name: 'トキシックガスト＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 15,
        id: 2,
        name: 'サタナキア',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 8986,
        offense: 815,
        deffense: 475,
        speed: 537,
        ability: { name: '疑似生命の培養', text: '毎ターン終了時、25%の確率で自身以外の覚醒ゲージを+1する' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'プロテクトセル＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ミュータントパワー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '勝利の最適解＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin17.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin17.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 17,
        id: 1,
        name: 'ティアマト',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 7349,
        offense: 1155,
        deffense: 621,
        speed: 280,
        ability: {
            name: '乙女の恋心',
            text: '自身にフォトンが与えられなかった場合ターン終了時、1ターンの間自身の攻撃力を25%上昇させ、バーサーク状態になる（攻撃力最大125%上昇　HP10%ダメージ）'
        },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '栄養満点スープ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '憎悪のポタージュ＋(シフト)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 1
                    }
                ]
            },
            {
                name: '快復マル秘レシピ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '念入りの下処理＋(シフト)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.85,
                        hit: 6
                    }
                ]
            },
            {
                name: '重量級の愛＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 4.25,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 5.25,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 6.25,
                        hit: 1
                    },
                    {
                        level: 4,
                        magnification: 7.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin18.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin18.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 18,
        id: 1,
        name: 'ブニ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 8805,
        offense: 1080,
        deffense: 471,
        speed: 430,
        ability: { name: '不屈の精神', text: '15%の確率で攻撃を無効化する' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '女神の護り＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ブリッツライド＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ]
            },
            {
                name: '閃煌轟雷襲＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 18,
        id: 2,
        name: 'ブニ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 8032,
        offense: 949,
        deffense: 279,
        speed: 688,
        ability: { name: '戦乙女の覚悟', text: '覚醒状態中なら自身のアタックが強化される' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '地鳴閃＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.8,
                        hit: 1
                    }
                ]
            },
            {
                name: '扇動の防衛陣＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 1
                    }
                ]
            },
            {
                name: '煌々爆砕烈撃＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2.5,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin19.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin19.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 19,
        id: 1,
        name: 'オリエンス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 6612,
        offense: 1124,
        deffense: 423,
        speed: 558,
        ability: { name: '遅いわねっ！', text: '自身より素早さが低い対象へのダメージが50％上昇する' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '余裕でしょっ！＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.85,
                        hit: 3
                    }
                ]
            },
            {
                name: '余裕でしょっ！＋(Bアーツ)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.95,
                        hit: 3
                    }
                ]
            },
            {
                name: 'くらいなさいぃぃぃ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ]
            },
            {
                name: 'くらいなさいぃぃぃ＋(Bアーツ)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 2,
                        hit: 2
                    },
                    {
                        level: 3,
                        magnification: 2,
                        hit: 3
                    },
                    {
                        level: 4,
                        magnification: 2,
                        hit: 4
                    },
                    {
                        level: 5,
                        magnification: 2,
                        hit: 5
                    },
                    {
                        level: 6,
                        magnification: 2,
                        hit: 6
                    },
                    {
                        level: 7,
                        magnification: 2,
                        hit: 7
                    },
                    {
                        level: 8,
                        magnification: 2,
                        hit: 8
                    },
                    {
                        level: 9,
                        magnification: 2,
                        hit: 9
                    },
                    {
                        level: 10,
                        magnification: 2,
                        hit: 10
                    }
                ]
            },
            {
                name: 'コンバットラビット＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin21.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin21.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 21,
        id: 1,
        name: 'リヴァイアサン',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 9551,
        offense: 446,
        deffense: 532,
        speed: 711,
        ability: { name: '母的本能', text: 'HPが50%以下の味方へのアーマー効果量が50%上昇する' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '大海の水分り+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '溟海游宴+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '母なる海の揺り籠+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin22.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin22.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 22,
        id: 1,
        name: 'カスピエル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 7399,
        offense: 1053,
        deffense: 490,
        speed: 478,
        ability: { name: 'ムーンコレクター', text: '自身の覚醒ゲージが最大の50%以上のとき、敵を状態異常にした際の持続ターンが+1される' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ナイトストーカー+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.75,
                        hit: 1
                    }
                ]
            },
            {
                name: 'シークレットコール+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '鮮血の一夜+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 1.1,
                        hit: 3
                    }
                ],
                increment: 0.0166
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 22,
        id: 2,
        name: 'カスピエル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 6797,
        offense: 1269,
        deffense: 288,
        speed: 617,
        ability: { name: 'デンジャラスゲーム', text: '致死ダメージを受けたとき、一度だけ踏みとどまる' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'スカーレットレディ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'デッドリーガーデン＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.9,
                        hit: 4
                    },
                    {
                        level: 1,
                        magnification: 0.9,
                        hit: 6
                    },
                    {
                        level: 1,
                        magnification: 0.9,
                        hit: 8
                    }
                ]
            },
            {
                name: '至極天の終夜＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 3,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin23.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin23.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 23,
        id: 1,
        name: 'ネフィリム',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 8966,
        offense: 1098,
        deffense: 483,
        speed: 270,
        ability: { name: '庇護の心', text: '自身が巨大化のとき、自身の「かばう」の効果が「全域かばう」の効果になる' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '私が守ります！＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'みんなに力を＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '暴走コンプレクス＋(巨大化)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.35,
                        hit: 1
                    }
                ]
            },
            {
                name: '昇華せし自我＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin25.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin25.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 25,
        id: 1,
        name: 'ニスロク',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 8840,
        offense: 1226,
        deffense: 421,
        speed: 438,
        ability: { name: '飽くなき食への探求', text: '敵の数が少ないほど、攻撃力が上昇する（最大値20%）' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '壱、専心研磨＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '弐、味加減精査＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ]
            },
            {
                name: '弐、味加減精査＋(Bアーツ)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2.5,
                        hit: 1
                    }
                ]
            },
            {
                name: '参、仕上之一撃＋(Bアーツ)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 0,
                        magnification: 2,
                        hit: 1
                    },
                    {
                        level: 1,
                        magnification: 3.25,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 4.5,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 5.75,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin26.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin26.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 26,
        id: 1,
        name: 'オレイ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 7291,
        offense: 922,
        deffense: 538,
        speed: 471,
        ability: { name: '盗争への渇望', text: '執心状態の敵から受けるダメージを25%軽減する' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '華麗なる予告状＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '奇跡の霊砂＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'スティールジオール＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin27.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin27.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 27,
        id: 1,
        name: 'マルチネ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 6697,
        offense: 1353,
        deffense: 417,
        speed: 488,
        ability: { name: '特攻少女', text: 'チェイン中に行動する度、覚醒ゲージが+1される' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'バーニアダンス＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 0,
                        magnification: 0.75,
                        hit: 1
                    },
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    }
                ]
            },
            {
                name: 'バーニアダンス＋(専用霊宝)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 0,
                        magnification: 1.5,
                        hit: 1
                    },
                    {
                        level: 1,
                        magnification: 2.5,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 3.5,
                        hit: 1
                    }
                ]
            },
            {
                name: 'フルスロットル＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ]
            },
            {
                name: '祖弐苦武羽霧＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 0,
                        magnification: 2,
                        hit: 1
                    },
                    {
                        level: 1,
                        magnification: 2.25,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 2.75,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 3.25,
                        hit: 1
                    },
                    {
                        level: 4,
                        magnification: 4,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin28.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin28.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 28,
        id: 1,
        name: 'アザゼル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 7098,
        offense: 1222,
        deffense: 409,
        speed: 497,
        ability: { name: '翳なる者', text: '25%の確率で、受ける攻撃をMISSにする（奥義、秘奥義、オーブによる攻撃を除く）' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 0.75,
                        hit: 2
                    }
                ]
            },
            {
                name: '暗器投げ＋(Bアーツ)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 0,
                        magnification: 1.25,
                        hit: 1
                    },
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 1.75,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 2.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '暗器調整＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '個にして全＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0.8,
                        hit: 6
                    },
                    {
                        level: 2,
                        magnification: 1.2,
                        hit: 6
                    },
                    {
                        level: 3,
                        magnification: 1.6,
                        hit: 6
                    },
                    {
                        level: 4,
                        magnification: 2,
                        hit: 6
                    }
                ],
                increment: 0
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin31.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin31.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 31,
        id: 1,
        name: 'フルーレティ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 7716,
        offense: 1004,
        deffense: 421,
        speed: 611,
        ability: { name: 'ノベリスターズハイ', text: '状態異常が付与されている敵1体につき、自身の攻撃力が8%上昇する' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '目眩く観察＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '紙上の暴走＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ブックカース＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2.5,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 3,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 3.5,
                        hit: 1
                    },
                    {
                        level: 4,
                        magnification: 4,
                        hit: 1
                    },
                    {
                        level: 5,
                        magnification: 4.5,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin33.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin33.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 33,
        id: 1,
        name: 'ハック',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 8902,
        offense: 1001,
        deffense: 287,
        speed: 629,
        ability: { name: '指導者の矜持', text: '致死ダメージを受けたとき、生存している味方が多いほど、高確率で踏みとどまる(最大40%)' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '筋骨隆々の舞＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.15,
                        hit: 1
                    }
                ]
            },
            {
                name: 'かかってこんかい！＋(最大)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 5.75,
                        hit: 1
                    }
                ]
            },
            {
                name: '根源なる筋肉の胎動＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 5.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin36.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin36.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 36,
        id: 1,
        name: 'メフィスト',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 5899,
        offense: 1194,
        deffense: 417,
        speed: 648,
        ability: { name: '出たとこ勝負！', text: 'HPが50%以下のとき、30%の確率で攻撃を無効化する' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ロール・ロール＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'イービル・ダイス＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 4.8,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 0.75,
                        hit: 2
                    },
                    {
                        level: 3,
                        magnification: 0.75,
                        hit: 3
                    },
                    {
                        level: 4,
                        magnification: 0.75,
                        hit: 4
                    },
                    {
                        level: 5,
                        magnification: 0.75,
                        hit: 5
                    },
                    {
                        level: 6,
                        magnification: 0.75,
                        hit: 6
                    }
                ]
            },
            {
                name: 'キリングヒット＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 2,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 2.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 36,
        id: 2,
        name: 'メフィスト',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 7452,
        offense: 615,
        deffense: 637,
        speed: 634,
        ability: { name: '悪魔の勝負師', text: '自身のHPが33.3%以下のとき、覚醒スキルの出目が必ず「8」になる' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '景気付けの一発＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 1
                    }
                ]
            },
            {
                name: 'イービルダイス・盛＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'フォーチュンロア＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin38.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin38.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 38,
        id: 1,
        name: 'アガリアレプト',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 7702,
        offense: 968,
        deffense: 276,
        speed: 811,
        ability: { name: '軽快なステップ', text: '戦闘中、徐々に素早さが上昇する(最大値50％)' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'メテオレイド+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.8,
                        hit: 3
                    },
                    {
                        level: 2,
                        magnification: 0.85,
                        hit: 3
                    },
                    {
                        level: 3,
                        magnification: 0.9,
                        hit: 3
                    }
                ]
            },
            {
                name: 'ディストード+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.4,
                        hit: 2
                    },
                    {
                        level: 2,
                        magnification: 1.4,
                        hit: 2
                    },
                    {
                        level: 3,
                        magnification: 1.4,
                        hit: 2
                    }
                ]
            },
            {
                name: 'ツインアブソーブ+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 38,
        id: 2,
        name: 'アガリアレプト',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 6390,
        offense: 1100,
        deffense: 271,
        speed: 706,
        ability: { name: '因果律崩壊', text: '自身が励起状態のとき、攻撃力が30％上昇する' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'プリズムノヴァ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.2,
                        hit: 2
                    },
                    {
                        level: 2,
                        magnification: 1.2,
                        hit: 2
                    },
                    {
                        level: 3,
                        magnification: 1.2,
                        hit: 2
                    },
                    {
                        level: 4,
                        magnification: 1.2,
                        hit: 2
                    },
                    {
                        level: 5,
                        magnification: 1.2,
                        hit: 2
                    }
                ]
            },
            {
                name: 'クロノスシフト＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.35,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 1.45,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 1.55,
                        hit: 1
                    },
                    {
                        level: 4,
                        magnification: 1.65,
                        hit: 1
                    }
                ]
            },
            {
                name: 'タキオンステップ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin41.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin41.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 41,
        id: 1,
        name: 'アマイモン',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 5997,
        offense: 1354,
        deffense: 429,
        speed: 503,
        ability: { name: '死を紡ぐ策王', text: '攻撃を受けたとき、10%の確率で呪い攻撃で反撃する' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '妄執ノ太刀＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '轟竜刃＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2.5,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ノワールアヴェルス＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 0,
                        magnification: 3.5,
                        hit: 1
                    },
                    {
                        level: 1,
                        magnification: 4,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 4.5,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 5,
                        hit: 1
                    },
                    {
                        level: 4,
                        magnification: 5.5,
                        hit: 1
                    },
                    {
                        level: 5,
                        magnification: 6,
                        hit: 1
                    },
                    {
                        level: 6,
                        magnification: 6.5,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin43.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin43.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 43,
        id: 1,
        name: 'サルガタナス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 6503,
        offense: 763,
        deffense: 618,
        speed: 608,
        ability: { name: 'オムニッセント', text: '毎ターン終了時、HPを15%回復する' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'スキル',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '覚醒スキル',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '奥義',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin48.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin48.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 48,
        id: 1,
        name: 'ウトゥック',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 6982,
        offense: 927,
        deffense: 479,
        speed: 624,
        ability: { name: '火砲は撃って待て', text: 'バレットアーツ状態時、受けるダメージを20%軽減する' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ラウズアップカノン+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'チャージボンバード+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ]
            },
            {
                name: 'チャージボンバード+(Bアーツ)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '撃滅の導弾+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 3.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            },
            {
                name: '撃滅の導弾+(Bアーツ)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 3.75,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin49.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin49.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 49,
        id: 1,
        name: 'サタナイル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 8189,
        offense: 838,
        deffense: 459,
        speed: 630,
        ability: { name: 'マエストロ', text: '音符が多いほど、攻撃力が上昇する（最大値50%）音符数×10%（5以上で50%）' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '戦いのコンチェルト＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ピウ・ブリッランテ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ピウ・ブリッランテ＋(専用霊宝)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2.5,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ラ・ヌッラロンド＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            },
            {
                name: 'ラ・ヌッラロンド＋(専用霊宝)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 3.5,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin50.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin50.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 50,
        id: 1,
        name: 'シャミハザ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 5786,
        offense: 1221,
        deffense: 427,
        speed: 619,
        ability: { name: 'テラインストール', text: 'HPが70%以下のとき、攻撃力が25%上昇する' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'バイラルスパーク＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ブリッツスマッシュ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 2.5,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ハイボルテーション＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 3.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin51.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin51.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 51,
        id: 1,
        name: 'プルフラス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 7528,
        offense: 1209,
        deffense: 414,
        speed: 498,
        ability: { name: '心眼', text: '自身への暗闇が無効になる' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ラピエル・フルーリ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'クゥ・デグラース＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ヴォロンテ・ド・フ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 51,
        id: 2,
        name: 'プルフラス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 7771,
        offense: 1219,
        deffense: 419,
        speed: 450,
        ability: { name: 'めげない心', text: '自身がチェイン4以上の奥義を発動直後、アタックフォトンが1つ以上積まれていれば自身を覚醒状態にする' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'リス・ブロン＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 0,
                        magnification: 0.6,
                        hit: 2
                    },
                    {
                        level: 0,
                        magnification: 0.6,
                        hit: 2
                    },
                    {
                        level: 0,
                        magnification: 0.6,
                        hit: 2
                    }
                ]
            },
            {
                name: 'グリサッド＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2.25,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 2.25,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 2.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'アフェクシオン＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 3,
                        magnification: 3.5,
                        hit: 1
                    },
                    {
                        level: 4,
                        magnification: 3.5,
                        hit: 1
                    },
                    {
                        level: 5,
                        magnification: 4,
                        hit: 1
                    },
                    {
                        level: 6,
                        magnification: 6,
                        hit: 1
                    },
                    {
                        level: 7,
                        magnification: 8.5,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin52.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin52.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 52,
        id: 1,
        name: 'ジズ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 5955,
        offense: 840,
        deffense: 494,
        speed: 687,
        ability: { name: '自己防衛本能', text: '戦闘中、徐々に防御力が上昇する（最大値50%）' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '青天のとっぷう＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.8,
                        hit: 1
                    }
                ]
            },
            {
                name: '大いなる風のしらべ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 1
                    }
                ]
            },
            {
                name: '終焉のモンスーン＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 3,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 52,
        id: 2,
        name: 'ジズ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 7004,
        offense: 1309,
        deffense: 397,
        speed: 514,
        ability: { name: '大いなる風の導き', text: '暴奏状態のとき、アタック、スキル、覚醒スキルの効果範囲が敵全体になる' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '風のカンタービレ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '風のカンタービレ＋(大協奏)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Sound,
                levels: [
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 1
                    }
                ]
            },
            {
                name: '魔笛の風音＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 1
                    }
                ]
            },
            {
                name: '魔笛の風音＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Sound,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    }
                ]
            },
            {
                name: '暴魔のソナタ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin53.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin53.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 53,
        id: 1,
        name: 'ベバル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 7228,
        offense: 789,
        deffense: 617,
        speed: 504,
        ability: { name: 'アタシがハイライト！', text: '大協奏状態のとき、すべての覚醒ゲージ増加量が+1される' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'エーリアルターン＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'チアフルマーチ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'カウント・メロディ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ],
                increment: 0.05
            },
            {
                name: 'カウント・メロディ＋(再協奏)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Sound,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin54.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin54.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 54,
        id: 1,
        name: 'アバラム',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 7286,
        offense: 1176,
        deffense: 497,
        speed: 414,
        ability: { name: '勇士の律動', text: '協奏状態のとき、アタック時の覚醒ゲージ増加量が+1される' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'サウンドステップ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.05,
                        hit: 1
                    }
                ]
            },
            {
                name: 'サウンドステップ＋(大協奏)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Sound,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ビートショット＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.7,
                        hit: 4
                    }
                ]
            },
            {
                name: 'ビートショット＋(大協奏)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Sound,
                levels: [
                    {
                        level: 1,
                        magnification: 0.8,
                        hit: 4
                    }
                ]
            },
            {
                name: 'ブレイクメドレー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            },
            {
                name: 'ブレイクメドレー＋(大協奏)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Sound,
                levels: [
                    {
                        level: 1,
                        magnification: 2.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin55.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin55.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 55,
        id: 1,
        name: 'アリトン',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 6020,
        offense: 841,
        deffense: 628,
        speed: 648,
        ability: { name: '執事の矜持', text: 'HPが33.3%以下の味方への単体攻撃を受け持つ' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'キラースナイプ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'キラースナイプ＋()Bアーツ',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '非情なる粛清＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.1,
                        hit: 2
                    }
                ]
            },
            {
                name: '非情なる粛清＋(Bアーツ)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.1,
                        hit: 2
                    }
                ]
            },
            {
                name: 'ハウンド・ドッグ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 4.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/*
 */
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin57.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin57.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 57,
        id: 1,
        name: 'ベヒモス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 7450,
        offense: 1350,
        deffense: 273,
        speed: 499,
        ability: { name: '野生本能', text: '獣形態のとき、行動開始時、自身にアタックが追加される' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'アタック(獣形態)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 0.65,
                        hit: 6
                    }
                ]
            },
            {
                name: '疾風迅雷+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.8,
                        hit: 3
                    }
                ]
            },
            {
                name: '七転八起+(獣形態)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.8,
                        hit: 3
                    }
                ]
            },
            {
                name: '大声疾呼+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '豺狼咆哮+(獣形態)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '迅狼轟襲爪+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 1.2,
                        hit: 4
                    }
                ],
                increment: 0.0125
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 57,
        id: 2,
        name: 'ベヒモス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 8003,
        offense: 1183,
        deffense: 387,
        speed: 496,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'アタック(獣形態)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 0.75,
                        hit: 2
                    }
                ]
            },
            {
                name: '月下変転＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '狂狼の太刀風＋(獣形態)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    }
                ]
            },
            {
                name: '剛破狼迅＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 3.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '爪牙狂乱＋(獣形態)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.75,
                        hit: 6
                    }
                ]
            },
            {
                name: '狼牙爪葬裂迅＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 5.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin58.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin58.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 58,
        id: 1,
        name: 'ダゴン',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 9316,
        offense: 1200,
        deffense: 420,
        speed: 276,
        ability: { name: '美味しいとこ取り', text: '自身がバーサーク状態のとき、防御力と素早さが毎ターン25%ずつ上昇する（最大値100%）' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ホイップベリーラブ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.9,
                        hit: 1
                    }
                ]
            },
            {
                name: 'キャラメルクランチ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.35,
                        hit: 3
                    }
                ]
            },
            {
                name: '無尽の欲求＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2.75,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 2.75,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin59.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin59.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 59,
        id: 1,
        name: 'スコルベノト',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 7066,
        offense: 949,
        deffense: 575,
        speed: 504,
        ability: { name: 'ネガティブの功名', text: '自身がブレイク待機状態のとき、自身が受けるスキルフォトンからのダメージを30%軽減する' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'カワイイに誓って＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'カワイイに誓って＋(ブレイク)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'タイニーマジック＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ピクシーファウナ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin62.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin62.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 62,
        id: 1,
        name: 'インプ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 6148,
        offense: 818,
        deffense: 643,
        speed: 616,
        ability: { name: 'イタズラ大成功！', text: '自身の行動で、敵が1体以上感電した場合、自身の覚醒ゲージが+1される' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'サンダードドンパー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 0.75,
                        hit: 3
                    }
                ]
            },
            {
                name: 'アースボールラブ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '全力マジマゲドン！＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin63.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin63.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 63,
        id: 1,
        name: 'アマゼロト',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 6816,
        offense: 1280,
        deffense: 393,
        speed: 527,
        ability: { name: '臍下金剛', text: '封印状態中、自身の全ての状態異常への耐性が100%上昇する' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 0.75,
                        hit: 2
                    }
                ]
            },
            {
                name: '廻転凍突き＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '槍塵跳天燕落とし＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    }
                ]
            },
            {
                name: '氷氷武踏攻備＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin64.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin64.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 64,
        id: 1,
        name: 'プロメテウス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 8712,
        offense: 637,
        deffense: 625,
        speed: 569,
        ability: { name: 'ハピネスライブ', text: '自分が発動させたライブの効果が継続中、自身の受けるダメージを20％軽減する' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '♪キミに届くように＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '歌のチカラは∞！＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ルルディダロス＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Fire,
                levels: [
                    {
                        level: 1,
                        magnification: 3,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin65.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin65.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 65,
        id: 1,
        name: 'ベルフェゴール',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 10192,
        offense: 1325,
        deffense: 442,
        speed: 363,
        ability: { name: '男の勲章', text: 'HP50%以下のとき、自身のアタックフォトンが強化される' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 0.75,
                        hit: 2
                    }
                ]
            },
            {
                name: '冥業四連撃+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.8,
                        hit: 4
                    }
                ]
            },
            {
                name: '懶惰の双天秤+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'アケディック・ロア+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2.75,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 4,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 5.25,
                        hit: 1
                    },
                    {
                        level: 4,
                        magnification: 6.5,
                        hit: 1
                    },
                    {
                        level: 5,
                        magnification: 7.75,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin68.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin68.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 68,
        id: 1,
        name: 'ネルガル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 8302,
        offense: 1359,
        deffense: 491,
        speed: 279,
        ability: { name: 'オートパイロット', text: '戦闘不能時、一度だけ最大HPの50%で蘇生し自身の特性によって蘇生した場合、自動操縦モードにシフトする' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'アイアンドーム＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '危険対象物除去＋(自動操縦)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ハンマーフィスト＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.5,
                        hit: 4
                    }
                ]
            },
            {
                name: '緊急回避行動＋(自動操縦)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ]
            },
            {
                name: 'グランドコンバイン＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 3,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin69.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin69.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 69,
        id: 1,
        name: 'バールゼフォン',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 7245,
        offense: 629,
        deffense: 630,
        speed: 643,
        ability: { name: '筆が乗ってきたぜ！', text: '自身の覚醒ゲージが最大の60%以上のとき、チャージフォトン使用時に味方単体にチェインする' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '極彩色の魔術師＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '流浪の胡蝶と空涙＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '夢描く苦悩の涙＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin70.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin70.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 70,
        id: 1,
        name: 'アスラフィル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 8137,
        offense: 908,
        deffense: 639,
        speed: 421,
        ability: { name: 'ジーニアス', text: '戦闘開始時、覚醒ゲージが最大になる' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ウルトラリミックス＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ウルトラリミックス＋(大協奏)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Sound,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '♯青の組曲＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'グルーヴィサウンド＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/shin/Shin71.ts":
/*!*******************************************!*\
  !*** ./src/ts/data/megido/shin/Shin71.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const megido = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].Shin,
        no: 71,
        id: 1,
        name: 'アクィエル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 8024,
        offense: 857,
        deffense: 425,
        speed: 681,
        ability: { name: 'ファルサグロリア', text: '自身以外の味方の行動で、対象が1体以上状態異常になった場合、自身の覚醒ゲージが+1される' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'アニムスの目+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '異端のシュンボルム+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'レナトゥスメルム+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2.5,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/* harmony default export */ __webpack_exports__["default"] = (megido);


/***/ }),

/***/ "./src/ts/data/megido/so/So01.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So01.ts ***!
  \***************************************/
/*! exports provided: So01 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So01", function() { return So01; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So01 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 1,
        id: 1,
        name: 'バエル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 4570,
        offense: 943,
        deffense: 487,
        speed: 689,
        ability: { name: '超感電', text: '海洋生物系のモンスターに2倍のダメージ' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'マジックリリース＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'コラプスサンダー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 1.55,
                        hit: 1
                    }
                ]
            },
            {
                name: 'インクルードデス＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                increment: 0.05,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 6.25,
                        hit: 1
                    }
                ]
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So02.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So02.ts ***!
  \***************************************/
/*! exports provided: So02 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So02", function() { return So02; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So02 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 2,
        id: 1,
        name: 'アガレス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 10712,
        offense: 971,
        deffense: 418,
        speed: 427,
        ability: { name: '運命の導き', text: '致死ダメージを受けたとき、20%の確率で踏みとどまる' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ダブルトマホーク＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.6,
                        hit: 2
                    }
                ]
            },
            {
                name: 'ダブルトマホーク＋(Bアーツ)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.6,
                        hit: 2
                    }
                ]
            },
            {
                name: 'モータルハチェット＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2.15,
                        hit: 2
                    }
                ]
            },
            {
                name: 'プラネットフォース＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 5.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 2,
        id: 2,
        name: 'アガレス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 6106,
        offense: 1218,
        deffense: 394,
        speed: 616,
        ability: { name: '運命の裁き', text: '神系のモンスターに2倍のダメージ' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ハチェットスライス+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.55,
                        hit: 2
                    }
                ]
            },
            {
                name: 'ハチェットスライス+(Bアーツ)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.7,
                        hit: 2
                    }
                ]
            },
            {
                name: 'オーバーソウル+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '星砕き+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 3.5,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 4,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 4.5,
                        hit: 1
                    },
                    {
                        level: 4,
                        magnification: 5,
                        hit: 1
                    },
                    {
                        level: 5,
                        magnification: 5.5,
                        hit: 1
                    },
                    {
                        level: 6,
                        magnification: 6,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So03.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So03.ts ***!
  \***************************************/
/*! exports provided: So03 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So03", function() { return So03; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So03 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 3,
        id: 3,
        name: 'ウァサゴ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 5743,
        offense: 980,
        deffense: 500,
        speed: 614,
        ability: { name: '高貴な血筋', text: '戦闘開始時、覚醒ゲージが最大になる' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '血の契約＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '悠久の契約＋	',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ]
            },
            {
                name: 'インペリアルクロー＋	',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 3.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So04.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So04.ts ***!
  \***************************************/
/*! exports provided: So04 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So04", function() { return So04; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So04 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 4,
        id: 1,
        name: 'ガミジン',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 8729,
        offense: 1193,
        deffense: 418,
        speed: 417,
        ability: { name: '強襲ヒット', text: '遠距離攻撃を受けたとき、15%の確率で攻撃を無効化し、反撃する' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'スマッシュ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.15,
                        hit: 1
                    },
                    {
                        level: 1,
                        magnification: 1.35,
                        hit: 1
                    },
                    {
                        level: 1,
                        magnification: 1.55,
                        hit: 1
                    },
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    }
                ]
            },
            {
                name: 'フルスイング＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 3,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ブラッドネメシス＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 1.15,
                        hit: 4
                    }
                ],
                increment: 0.0125
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So05.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So05.ts ***!
  \***************************************/
/*! exports provided: So05 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So05", function() { return So05; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So05 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 5,
        id: 1,
        name: 'マルバス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 7262,
        offense: 628,
        deffense: 489,
        speed: 719,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'マジカルヒール+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ミスティック+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'クルーエルラブ+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 5,
        id: 2,
        name: 'マルバス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 7730,
        offense: 597,
        deffense: 586,
        speed: 657,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'チアフルリリィ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ミスティックマター＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.35,
                        hit: 1
                    }
                ]
            },
            {
                name: '夢見る乙女＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So06.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So06.ts ***!
  \***************************************/
/*! exports provided: So06 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So06", function() { return So06; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So06 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 6,
        id: 1,
        name: 'ウァレフォル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 5855,
        offense: 1150,
        deffense: 287,
        speed: 678,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 0.75,
                        hit: 2
                    }
                ]
            },
            {
                name: 'ワイルドハント＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.75,
                        hit: 4
                    }
                ]
            },
            {
                name: '行くよ、野郎ども！＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ロウオブザサバンナ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 1.2,
                        hit: 4
                    }
                ],
                increment: 0.0125
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So07.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So07.ts ***!
  \***************************************/
/*! exports provided: So07 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So07", function() { return So07; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So07 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 7,
        id: 1,
        name: 'アモン',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 4598,
        offense: 1194,
        deffense: 417,
        speed: 685,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '巾着切り+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ダーティレイド+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 2
                    }
                ]
            },
            {
                name: '世界を包む炎獄+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 4.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 7,
        id: 2,
        name: 'アモン',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 6039,
        offense: 1200,
        deffense: 420,
        speed: 627,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 0.65,
                        hit: 3
                    }
                ]
            },
            {
                name: 'クレセント＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'サイレンスリーパー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.75,
                        hit: 4
                    }
                ]
            },
            {
                name: 'リヴィールエッジ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 1.2,
                        hit: 4
                    }
                ],
                increment: 0.0125
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So08.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So08.ts ***!
  \***************************************/
/*! exports provided: So08 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So08", function() { return So08; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So08 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 8,
        id: 1,
        name: 'バルバトス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 7659,
        offense: 960,
        deffense: 476,
        speed: 474,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '暴風のワルツ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '暴風のワルツ＋(大協奏)',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Sound,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '妖精たちのダンス＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ホメロスの風讃歌＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 8,
        id: 2,
        name: 'バルバトス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 7713,
        offense: 1226,
        deffense: 421,
        speed: 492,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '激情のプレリュード＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '激情のプレリュード＋（大協奏）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Sound,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '嵐のシンフォニー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.65,
                        hit: 3
                    }
                ]
            },
            {
                name: '嵐のシンフォニー＋（大協奏）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Sound,
                levels: [
                    {
                        level: 1,
                        magnification: 0.65,
                        hit: 3
                    }
                ]
            },
            {
                name: '還る者への鎮魂歌＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 1
                    }
                ],
                increment: 0.05
            },
            {
                name: '還る者への鎮魂歌＋（大協奏）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Sound,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So09.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So09.ts ***!
  \***************************************/
/*! exports provided: So09 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So09", function() { return So09; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So09 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 9,
        id: 1,
        name: 'パイモン',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 7172,
        offense: 1191,
        deffense: 420,
        speed: 472,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ブラッディローズ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.75,
                        hit: 3
                    }
                ]
            },
            {
                name: 'ローズプロポーズ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ユリシスアーク＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 3.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So10.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So10.ts ***!
  \***************************************/
/*! exports provided: So10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So10", function() { return So10; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So10 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 10,
        id: 1,
        name: 'ブエル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 7275,
        offense: 642,
        deffense: 477,
        speed: 716,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ドロップフォトン+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'パワーブースト+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'スターライトアイ+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So11.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So11.ts ***!
  \***************************************/
/*! exports provided: So11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So11", function() { return So11; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So11 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 11,
        id: 1,
        name: 'グシオン',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 7727,
        offense: 857,
        deffense: 430,
        speed: 697,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '子守唄+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '子守唄+（大協奏）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Sound,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'オルフェウスの竪琴＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'オルフェウスの竪琴＋（大協奏）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Sound,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ビーストファング＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 4.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 11,
        id: 2,
        name: 'グシオン',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 8586,
        offense: 1037,
        deffense: 430,
        speed: 491,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'グレイスノーツ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'グレイスノーツ＋（大協奏）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Sound,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '独奏アルペジオ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.45,
                        hit: 1
                    }
                ]
            },
            {
                name: '独奏アルペジオ＋（大協奏）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Sound,
                levels: [
                    {
                        level: 1,
                        magnification: 1.45,
                        hit: 1
                    }
                ]
            },
            {
                name: 'オールオブアサドン＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    }
                ],
                increment: 0.025
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So12.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So12.ts ***!
  \***************************************/
/*! exports provided: So12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So12", function() { return So12; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So12 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 12,
        id: 1,
        name: 'シトリー',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 5667,
        offense: 1176,
        deffense: 494,
        speed: 476,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 0.75,
                        hit: 2
                    }
                ]
            },
            {
                name: 'ジャスティスライト+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 0.75,
                        hit: 3
                    }
                ]
            },
            {
                name: 'エクスプロージョン+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 1.45,
                        hit: 1
                    }
                ]
            },
            {
                name: 'エアリアルグロー+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 5.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 12,
        id: 2,
        name: 'シトリー',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 8547,
        offense: 1001,
        deffense: 487,
        speed: 421,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '水天彷彿戟＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '水落魚竜ノ夜＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ハイドロブラスト＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So13.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So13.ts ***!
  \***************************************/
/*! exports provided: So13 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So13", function() { return So13; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So13 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 13,
        id: 1,
        name: 'ベレト',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 5968,
        offense: 1206,
        deffense: 411,
        speed: 626,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'レイジスタンプ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.15,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 1.35,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 1.55,
                        hit: 1
                    },
                    {
                        level: 4,
                        magnification: 1.75,
                        hit: 1
                    }
                ]
            },
            {
                name: '狂喜の怒り＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'リアニメイター＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So14.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So14.ts ***!
  \***************************************/
/*! exports provided: So14 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So14", function() { return So14; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So14 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 14,
        id: 1,
        name: 'レラジェ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 5980,
        offense: 1386,
        deffense: 424,
        speed: 475,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'シャープショット＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'シャープショット＋（Bアーツ）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'クランブルアロー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ]
            },
            {
                name: 'クランブルアロー＋（Bアーツ）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2.5,
                        hit: 1
                    }
                ]
            },
            {
                name: 'パワースナイプ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2.75,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 3.75,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 4.75,
                        hit: 1
                    },
                    {
                        level: 4,
                        magnification: 5.75,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 14,
        id: 2,
        name: 'レラジェ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 6116,
        offense: 1210,
        deffense: 644,
        speed: 430,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '凛然の一矢＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 1
                    }
                ]
            },
            {
                name: '凛然の一矢＋（Bアーツ）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 1
                    }
                ]
            },
            {
                name: '不失正鵠之舞＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'この矢外させ給ふな＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ],
                increment: 0.05
            },
            {
                name: 'この矢外させ給ふな＋（Bアーツ）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/*
 */


/***/ }),

/***/ "./src/ts/data/megido/so/So15.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So15.ts ***!
  \***************************************/
/*! exports provided: So15 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So15", function() { return So15; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So15 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 15,
        id: 1,
        name: 'エリゴス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 5896,
        offense: 768,
        deffense: 622,
        speed: 627,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 0.75,
                        hit: 2
                    }
                ]
            },
            {
                name: 'トンファーガード＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '滅多打ち＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.75,
                        hit: 4
                    }
                ]
            },
            {
                name: 'ラストガーディアン＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 15,
        id: 2,
        name: 'エリゴス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 7119,
        offense: 1280,
        deffense: 410,
        speed: 462,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 0.75,
                        hit: 2
                    }
                ]
            },
            {
                name: '無法烈火＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Fire,
                levels: [
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 1
                    }
                ]
            },
            {
                name: '鋭鋒火急撃＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Fire,
                levels: [
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 2
                    }
                ]
            },
            {
                name: 'ライジングフロー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So16.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So16.ts ***!
  \***************************************/
/*! exports provided: So16 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So16", function() { return So16; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So16 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 16,
        id: 1,
        name: 'ゼパル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 6210,
        offense: 1209,
        deffense: 271,
        speed: 693,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '三枚下ろし＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.85,
                        hit: 3
                    }
                ]
            },
            {
                name: '微塵切り＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.7,
                        hit: 6
                    }
                ]
            },
            {
                name: 'タービュランス＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0.85,
                        hit: 5
                    }
                ],
                increment: 0.0125
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 16,
        id: 2,
        name: 'ゼパル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 6210,
        offense: 1150,
        deffense: 409,
        speed: 642,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '四枚下ろし+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.75,
                        hit: 4
                    }
                ]
            },
            {
                name: 'アングリーオーダー+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '伝播する情動+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So17.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So17.ts ***!
  \***************************************/
/*! exports provided: So17 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So17", function() { return So17; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So17 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 17,
        id: 1,
        name: 'ボティス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 8845,
        offense: 761,
        deffense: 717,
        speed: 286,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'カバーリング＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ペンデュラム＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 2,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 2.25,
                        hit: 1
                    },
                    {
                        level: 4,
                        magnification: 2.5,
                        hit: 1
                    }
                ]
            },
            {
                name: '穢れなき守護者＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So18.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So18.ts ***!
  \***************************************/
/*! exports provided: So18 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So18", function() { return So18; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So18 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 18,
        id: 1,
        name: 'バティン',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 9140,
        offense: 1222,
        deffense: 431,
        speed: 423,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'アブソープション＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ニューロトキシン＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ポレンヒーリング＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 18,
        id: 2,
        name: 'バティン',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 7379,
        offense: 1362,
        deffense: 419,
        speed: 431,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'バーンインジェクター＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Fire,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ヒートアップシリンジ＋（シフト後）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ウォームアップ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ブレイズブロッサム＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Fire,
                levels: [
                    {
                        level: 1,
                        magnification: 5,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So19.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So19.ts ***!
  \***************************************/
/*! exports provided: So19 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So19", function() { return So19; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So19 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 19,
        id: 1,
        name: 'サレオス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 8474,
        offense: 945,
        deffense: 490,
        speed: 424,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '臨兵闘者皆陣列在前+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '三途の川渡し+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.35,
                        hit: 1
                    }
                ]
            },
            {
                name: '腐食のブレス+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2.5,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 19,
        id: 2,
        name: 'サレオス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 8330,
        offense: 881,
        deffense: 525,
        speed: 479,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '水神の怒り＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'マントラ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '三途の濁流＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So20.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So20.ts ***!
  \***************************************/
/*! exports provided: So20 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So20", function() { return So20; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So20 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 20,
        id: 1,
        name: 'プルソン',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 8688,
        offense: 975,
        deffense: 412,
        speed: 475,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'グランドドライバー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'オーラテンペスト＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 1
                    }
                ]
            },
            {
                name: '大地を沈めし鉄槌＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 3.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So21.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So21.ts ***!
  \***************************************/
/*! exports provided: So21 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So21", function() { return So21; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So21 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 21,
        id: 1,
        name: 'モラクス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 6025,
        offense: 1218,
        deffense: 414,
        speed: 614,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '巨岩割り＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '必勝・大炎風＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2.5,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ミノスの大戦斧＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 4.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So22.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So22.ts ***!
  \***************************************/
/*! exports provided: So22 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So22", function() { return So22; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So22 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 22,
        id: 1,
        name: 'イポス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 9320,
        offense: 984,
        deffense: 286,
        speed: 646,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '追撃態勢＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'トライピアシング＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 3
                    }
                ]
            },
            {
                name: 'ヴォジャノーイの渦＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 22,
        id: 2,
        name: 'イポス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 8705,
        offense: 617,
        deffense: 630,
        speed: 489,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'レオエスコビージャ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '魔獅子の宣誓＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'レオンオブシャウト＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So23.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So23.ts ***!
  \***************************************/
/*! exports provided: So23 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So23", function() { return So23; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So23 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 23,
        id: 1,
        name: 'アイム',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 5630,
        offense: 1171,
        deffense: 426,
        speed: 644,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '強火クッキング＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Fire,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 1.5,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 1.75,
                        hit: 1
                    },
                    {
                        level: 4,
                        magnification: 2,
                        hit: 1
                    }
                ]
            },
            {
                name: '太陽の種火＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '炎天の煌めき＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                increment: 0.05,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Fire,
                levels: [
                    {
                        level: 1,
                        magnification: 2.25,
                        hit: 1
                    }
                ]
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 23,
        id: 2,
        name: 'アイム',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 8455,
        offense: 751,
        deffense: 674,
        speed: 280,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ブレンドウォッシュ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'シュトロームテイル＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '清浄のセメンテリオ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So24.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So24.ts ***!
  \***************************************/
/*! exports provided: So24 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So24", function() { return So24; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So24 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 24,
        id: 1,
        name: 'ナベリウス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 7544,
        offense: 948,
        deffense: 501,
        speed: 503,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ムーンサルト＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.9,
                        hit: 2
                    }
                ]
            },
            {
                name: 'ブレイクスナップ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2.5,
                        hit: 1
                    }
                ]
            },
            {
                name: '番犬の咆哮＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So25.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So25.ts ***!
  \***************************************/
/*! exports provided: So25 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So25", function() { return So25; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So25 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 25,
        id: 1,
        name: 'グラシャラボラス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 7290,
        offense: 1170,
        deffense: 416,
        speed: 494,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ぶん回し＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 1
                    }
                ]
            },
            {
                name: 'グレートぶん回し＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 3.5,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ピリオドの向こうへ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 3,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So26.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So26.ts ***!
  \***************************************/
/*! exports provided: So26 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So26", function() { return So26; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So26 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 26,
        id: 1,
        name: 'ブネ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 9049,
        offense: 949,
        deffense: 497,
        speed: 414,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '斬撃『一字ノ太刀』＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '斬撃『兜割ノ太刀』＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ]
            },
            {
                name: '龍王天懐撃＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 2
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 26,
        id: 2,
        name: 'ブネ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 9000,
        offense: 1430,
        deffense: 420,
        speed: 271,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '連撃『双撃ノ太刀』＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.9,
                        hit: 2
                    }
                ]
            },
            {
                name: '地這いの剛撃＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ]
            },
            {
                name: '烈震剛滅破＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 6.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So27.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So27.ts ***!
  \***************************************/
/*! exports provided: So27 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So27", function() { return So27; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So27 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 27,
        id: 1,
        name: 'ロノウェ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 10836,
        offense: 645,
        deffense: 714,
        speed: 285,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ウェポンガード＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ブランディッシュ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 2
                    }
                ]
            },
            {
                name: 'エクトプラズム＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So28.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So28.ts ***!
  \***************************************/
/*! exports provided: So28 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So28", function() { return So28; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So28 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 28,
        id: 1,
        name: 'ベリト',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 5631,
        offense: 1226,
        deffense: 428,
        speed: 623,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'グリムスティンガー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'エンペラーグラブ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ワールドイズマイン＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 4.75,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 28,
        id: 2,
        name: 'ベリト',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 7942,
        offense: 1053,
        deffense: 518,
        speed: 432,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '閃光刃＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 0,
                        magnification: 1.25,
                        hit: 1
                    },
                    {
                        level: 1,
                        magnification: 2.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '無限の施し＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '稲妻の裁断＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 0,
                        magnification: 3.75,
                        hit: 1
                    },
                    {
                        level: 1,
                        magnification: 4.5,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 5.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So29.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So29.ts ***!
  \***************************************/
/*! exports provided: So29 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So29", function() { return So29; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So29 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 29,
        id: 1,
        name: 'アスタロト',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 7365,
        offense: 1075,
        deffense: 496,
        speed: 476,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '元気にしてあげる♪＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ノコ斬り＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 3
                    }
                ]
            },
            {
                name: '極北のブレス＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 2
                    }
                ],
                increment: 0.025
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 29,
        id: 2,
        name: 'アスタロト',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 5945,
        offense: 1216,
        deffense: 545,
        speed: 413,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '一汗かこうヨ+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '悩殺スカルブレイク+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 3
                    }
                ]
            },
            {
                name: '極彩ナイトスター+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 2.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/*

*/


/***/ }),

/***/ "./src/ts/data/megido/so/So30.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So30.ts ***!
  \***************************************/
/*! exports provided: So30 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So30", function() { return So30; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So30 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 30,
        id: 1,
        name: 'フォルネウス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 8521,
        offense: 635,
        deffense: 487,
        speed: 616,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '一時の虚脱＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '一時の虚脱＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2.5,
                        hit: 1
                    }
                ]
            },
            {
                name: '紫霧のブレス＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So31.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So31.ts ***!
  \***************************************/
/*! exports provided: So31 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So31", function() { return So31; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So31 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 31,
        id: 1,
        name: 'フォラス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 5724,
        offense: 746,
        deffense: 491,
        speed: 691,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'デトネーション＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ワイドマジック＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'クラッシュハンマー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 5.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So32.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So32.ts ***!
  \***************************************/
/*! exports provided: So32 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So32", function() { return So32; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So32 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 32,
        id: 1,
        name: 'アスモデウス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 8686,
        offense: 1402,
        deffense: 423,
        speed: 283,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '蒼炎の剣＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Fire,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '絶対者の息吹＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 3.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '破滅を齎す黒炎＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Fire,
                levels: [
                    {
                        level: 1,
                        magnification: 6.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So33.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So33.ts ***!
  \***************************************/
/*! exports provided: So33 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So33", function() { return So33; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So33 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 33,
        id: 1,
        name: 'ガープ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 10133,
        offense: 854,
        deffense: 642,
        speed: 279,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ザ・ウォール＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ジールバッシュ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Fire,
                levels: [
                    {
                        level: 1,
                        magnification: 4,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ヴァルカンの聖域＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So34.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So34.ts ***!
  \***************************************/
/*! exports provided: So34 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So34", function() { return So34; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So34 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 34,
        id: 1,
        name: 'フルフル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 8688,
        offense: 1178,
        deffense: 487,
        speed: 285,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'うたた寝＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '召雷針＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 1.4,
                        hit: 2
                    }
                ]
            },
            {
                name: '召雷針＋（Bアーツ）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 1.4,
                        hit: 2
                    }
                ]
            },
            {
                name: 'カオティックレイ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 2.75,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 34,
        id: 2,
        name: 'フルフル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 8517,
        offense: 1089,
        deffense: 524,
        speed: 308,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '常在就寝＋（スキルブレイク）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 0.8,
                        hit: 3
                    }
                ]
            },
            {
                name: '雷召電弧＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ケイオスボルト＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 2.25,
                        hit: 2
                    },
                    {
                        level: 2,
                        magnification: 2.25,
                        hit: 4
                    },
                    {
                        level: 3,
                        magnification: 2.25,
                        hit: 6
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So35.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So35.ts ***!
  \***************************************/
/*! exports provided: So35 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So35", function() { return So35; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So35 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 35,
        id: 1,
        name: 'マルコシアス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 7701,
        offense: 1152,
        deffense: 431,
        speed: 473,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'デュアルショット＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.9,
                        hit: 2
                    }
                ]
            },
            {
                name: 'デュアルショット＋（Bアーツ）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.9,
                        hit: 2
                    }
                ]
            },
            {
                name: 'ラピッドファイア＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ラピッドファイア＋（Bアーツ）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ライトジャベリン＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 4.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            },
            {
                name: 'ライトジャベリン＋（Bアーツ）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 4.75,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 35,
        id: 2,
        name: 'マルコシアス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 6761,
        offense: 1338,
        deffense: 465,
        speed: 462,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'サプレスファイア＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'サプレスファイア＋（Bアーツ）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    }
                ]
            },
            {
                name: 'レイジングブル＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 0,
                        magnification: 1.25,
                        hit: 2
                    },
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 4
                    },
                    {
                        level: 2,
                        magnification: 1.25,
                        hit: 6
                    }
                ]
            },
            {
                name: 'スターバースト＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 0,
                        magnification: 5,
                        hit: 1
                    },
                    {
                        level: 1,
                        magnification: 5.5,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 6.5,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 8,
                        hit: 1
                    },
                    {
                        level: 4,
                        magnification: 10,
                        hit: 1
                    }
                ],
                increment: 0.05
            },
            {
                name: 'スターバースト＋（専用霊宝）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 0,
                        magnification: 5,
                        hit: 1
                    },
                    {
                        level: 1,
                        magnification: 5.5,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 6.5,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 8,
                        hit: 1
                    },
                    {
                        level: 4,
                        magnification: 12,
                        hit: 1
                    },
                    {
                        level: 5,
                        magnification: 15,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So36.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So36.ts ***!
  \***************************************/
/*! exports provided: So36 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So36", function() { return So36; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So36 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 36,
        id: 1,
        name: 'ストラス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 7407,
        offense: 1167,
        deffense: 411,
        speed: 488,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '天地万象＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '百花繚乱＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 2
                    }
                ]
            },
            {
                name: 'ハリケーンダンス＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 36,
        id: 2,
        name: 'ストラス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 7952,
        offense: 1081,
        deffense: 420,
        speed: 479,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '紫陽爛漫＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '八仙開花＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '激・才華爛発＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So37.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So37.ts ***!
  \***************************************/
/*! exports provided: So37 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So37", function() { return So37; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So37 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 37,
        id: 1,
        name: 'フェニックス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 7259,
        offense: 967,
        deffense: 472,
        speed: 490,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '紅焔剣+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Fire,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '処刑剣+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 3.5,
                        hit: 1
                    }
                ]
            },
            {
                name: '不死鳥の羽ばたき+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Fire,
                levels: [
                    {
                        level: 1,
                        magnification: 2.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 37,
        id: 2,
        name: 'フェニックス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 7571,
        offense: 1144,
        deffense: 413,
        speed: 600,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '業火剣＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Fire,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    }
                ]
            },
            {
                name: '不鎮の炎＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '不死鳥の抱擁＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So38.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So38.ts ***!
  \***************************************/
/*! exports provided: So38 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So38", function() { return So38; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So38 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 38,
        id: 1,
        name: 'ハルファス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 6022,
        offense: 1400,
        deffense: 643,
        speed: 269,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '地裂斬＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.05,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 1.15,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 1.25,
                        hit: 1
                    },
                    {
                        level: 4,
                        magnification: 1.35,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ギガントアクス＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2.75,
                        hit: 1
                    }
                ]
            },
            {
                name: 'アニマルボンバー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 2
                    }
                ],
                increment: 0.025
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So39.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So39.ts ***!
  \***************************************/
/*! exports provided: So39 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So39", function() { return So39; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So39 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 39,
        id: 1,
        name: 'マルファス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 7461,
        offense: 981,
        deffense: 504,
        speed: 499,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'キャプチャー+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'レナスリング+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    }
                ]
            },
            {
                name: 'コロッサスレイ+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 2
                    }
                ],
                increment: 0.025
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So40.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So40.ts ***!
  \***************************************/
/*! exports provided: So40 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So40", function() { return So40; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So40 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 40,
        id: 1,
        name: 'ラウム',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 10094,
        offense: 1155,
        deffense: 418,
        speed: 277,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '夜露死苦！＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '仏恥義琉！！＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.35,
                        hit: 3
                    }
                ]
            },
            {
                name: 'デンジャラスバイト＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2.1,
                        hit: 3
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 40,
        id: 2,
        name: 'ラウム',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 9069,
        offense: 955,
        deffense: 618,
        speed: 282,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '仁王立ち＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '御礼参り＋（最大倍率）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 3.75,
                        hit: 1
                    }
                ]
            },
            {
                name: '魔武駄致＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So41.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So41.ts ***!
  \***************************************/
/*! exports provided: So41 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So41", function() { return So41; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So41 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 41,
        id: 1,
        name: 'フォカロル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 7601,
        offense: 993,
        deffense: 504,
        speed: 487,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ギアバースト＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'フェイタルブレード＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 5
                    }
                ]
            },
            {
                name: 'ゲイルウィング＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 3,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 41,
        id: 2,
        name: 'フォカロル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 7219,
        offense: 728,
        deffense: 507,
        speed: 626,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'トリガーオン＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'フェイタルブラスト＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.3,
                        hit: 2
                    }
                ]
            },
            {
                name: 'フェイタルブラスト＋（Bアーツ）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 2
                    }
                ]
            },
            {
                name: 'クリティカルブロウ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So42.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So42.ts ***!
  \***************************************/
/*! exports provided: So42 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So42", function() { return So42; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So42 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 42,
        id: 1,
        name: 'ウェパル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 5646,
        offense: 1188,
        deffense: 287,
        speed: 699,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ウェイブライダー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '水龍戟＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 1
                    }
                ]
            },
            {
                name: 'セイレーンの涙＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 1.1,
                        hit: 3
                    }
                ],
                increment: 0.0167
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 42,
        id: 2,
        name: 'ウェパル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 8606,
        offense: 639,
        deffense: 646,
        speed: 493,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ツイストウェイブ+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ウンディーネの戯れ+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.8,
                        hit: 1
                    }
                ]
            },
            {
                name: 'オーシャンティア+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So43.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So43.ts ***!
  \***************************************/
/*! exports provided: So43 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So43", function() { return So43; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So43 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 43,
        id: 1,
        name: 'サブナック',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 8573,
        offense: 751,
        deffense: 682,
        speed: 274,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'エリアディフェンス＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'イージスブロー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.4,
                        hit: 2
                    },
                    {
                        level: 1,
                        magnification: 1.65,
                        hit: 2
                    },
                    {
                        level: 1,
                        magnification: 1.9,
                        hit: 2
                    },
                    {
                        level: 1,
                        magnification: 2.15,
                        hit: 2
                    }
                ]
            },
            {
                name: 'フォートレス＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So44.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So44.ts ***!
  \***************************************/
/*! exports provided: So44 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So44", function() { return So44; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So44 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 44,
        id: 1,
        name: 'シャックス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 7581,
        offense: 954,
        deffense: 478,
        speed: 501,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'びりびり斬り+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'もっとびりびり斬り+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 2
                    }
                ]
            },
            {
                name: '電電ぴよ祭り！+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 3.25,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 4.25,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 5.25,
                        hit: 1
                    },
                    {
                        level: 4,
                        magnification: 6.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 44,
        id: 2,
        name: 'シャックス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 7327,
        offense: 1157,
        deffense: 428,
        speed: 478,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'バリバリ斬り＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 0.5,
                        hit: 4
                    }
                ]
            },
            {
                name: 'イナズマアタック＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ピヨピヨフェス＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 0,
                        magnification: 3.75,
                        hit: 1
                    },
                    {
                        level: 1,
                        magnification: 3.75,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 3.75,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So45.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So45.ts ***!
  \***************************************/
/*! exports provided: So45 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So45", function() { return So45; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So45 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 45,
        id: 1,
        name: 'ヴィネ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 7394,
        offense: 841,
        deffense: 416,
        speed: 708,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '聖女の祈り＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '気高き願い＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '蒼海のアガペー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 45,
        id: 2,
        name: 'ヴィネ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 7354,
        offense: 746,
        deffense: 495,
        speed: 647,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '水刃のエラルド＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '水盾のラクス＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '戦姫の洗礼＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];
/*
 */


/***/ }),

/***/ "./src/ts/data/megido/so/So46.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So46.ts ***!
  \***************************************/
/*! exports provided: So46 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So46", function() { return So46; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So46 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 46,
        id: 1,
        name: 'ビフロンス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 7604,
        offense: 1189,
        deffense: 493,
        speed: 424,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ソウルテイカー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.85,
                        hit: 2
                    }
                ]
            },
            {
                name: 'デスサイズ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ダークコフィン＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 1.45,
                        hit: 4
                    }
                ],
                increment: 0.0125
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 46,
        id: 2,
        name: 'ビフロンス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 6422,
        offense: 1214,
        deffense: 464,
        speed: 468,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ソウルシャイン＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'グリムサイズ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ]
            },
            {
                name: 'プシュケダージ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 3,
                        hit: 1
                    },
                    {
                        level: 1,
                        magnification: 3.25,
                        hit: 1
                    },
                    {
                        level: 1,
                        magnification: 3.5,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];
/*
 */


/***/ }),

/***/ "./src/ts/data/megido/so/So47.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So47.ts ***!
  \***************************************/
/*! exports provided: So47 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So47", function() { return So47; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So47 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 47,
        id: 1,
        name: 'ウヴァル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 7585,
        offense: 1404,
        deffense: 275,
        speed: 501,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'クレセントスライス＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ラウンドスレイヤー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.7,
                        hit: 6
                    }
                ]
            },
            {
                name: 'ランページビート＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So48.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So48.ts ***!
  \***************************************/
/*! exports provided: So48 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So48", function() { return So48; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So48 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 48,
        id: 1,
        name: 'ハーゲンティ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 7382,
        offense: 968,
        deffense: 418,
        speed: 628,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'それちょうだいよぅ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ハニワの奇跡＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.35,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ハートオブゴールド＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 48,
        id: 2,
        name: 'ハーゲンティ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 7004,
        offense: 1199,
        deffense: 454,
        speed: 494,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '来て！フレンズ+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 0,
                        magnification: 1,
                        hit: 1
                    },
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 2,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 2.5,
                        hit: 1
                    },
                    {
                        level: 4,
                        magnification: 3,
                        hit: 1
                    }
                ]
            },
            {
                name: 'でっかくなれ〜+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.35,
                        hit: 1
                    }
                ]
            },
            {
                name: '色褪せない宝物！+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So49.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So49.ts ***!
  \***************************************/
/*! exports provided: So49 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So49", function() { return So49; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So49 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 49,
        id: 1,
        name: 'クロケル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 5688,
        offense: 1197,
        deffense: 287,
        speed: 703,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '応援です！＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ぶっ飛ぶのです！＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 3,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ぶっ飛ぶのです！＋（大協奏）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Sound,
                levels: [
                    {
                        level: 1,
                        magnification: 3,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ロイヤルスワール＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 5.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 49,
        id: 2,
        name: 'クロケル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 5835,
        offense: 1164,
        deffense: 476,
        speed: 500,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '容赦しないです！＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 1
                    }
                ]
            },
            {
                name: '容赦しないです！（大協奏）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Sound,
                levels: [
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 1
                    }
                ]
            },
            {
                name: 'コテンパンです！＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    }
                ]
            },
            {
                name: 'コテンパンです！＋（大協奏）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Sound,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    }
                ]
            },
            {
                name: 'デュナミスクリーヴ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    }
                ],
                increment: 0.05
            },
            {
                name: 'デュナミスクリーヴ＋（大協奏）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Sound,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So50.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So50.ts ***!
  \***************************************/
/*! exports provided: So50 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So50", function() { return So50; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So50 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 50,
        id: 1,
        name: 'フルカス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 7649,
        offense: 1190,
        deffense: 406,
        speed: 477,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ミートスパイク＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.6,
                        hit: 2
                    },
                    {
                        level: 2,
                        magnification: 0.7,
                        hit: 2
                    },
                    {
                        level: 3,
                        magnification: 0.8,
                        hit: 2
                    },
                    {
                        level: 4,
                        magnification: 0.9,
                        hit: 2
                    }
                ]
            },
            {
                name: 'マッドスラローム＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 3,
                        hit: 1
                    }
                ]
            },
            {
                name: 'メルティアサルト＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 3
                    }
                ],
                increment: 0.0166
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So51.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So51.ts ***!
  \***************************************/
/*! exports provided: So51 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So51", function() { return So51; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So51 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 51,
        id: 1,
        name: 'バラム',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 5846,
        offense: 838,
        deffense: 594,
        speed: 676,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'バインドダガー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.57,
                        hit: 2
                    }
                ]
            },
            {
                name: '非戦の調停＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ディザスターボム＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 3,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So52.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So52.ts ***!
  \***************************************/
/*! exports provided: So52 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So52", function() { return So52; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So52 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 52,
        id: 1,
        name: 'アロケル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 7110,
        offense: 1199,
        deffense: 500,
        speed: 427,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'あとは任せた！＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '少し本気出す！＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 3,
                        hit: 1
                    }
                ]
            },
            {
                name: '復讐剣バルムンク＋（最大）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 11.5,
                        hit: 1
                    }
                ],
                increment: 0.1
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So53.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So53.ts ***!
  \***************************************/
/*! exports provided: So53 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So53", function() { return So53; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So53 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 53,
        id: 1,
        name: 'カイム',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 9032,
        offense: 615,
        deffense: 472,
        speed: 636,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'マインドクラッシュ+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'オブリビオン+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2.5,
                        hit: 1
                    }
                ]
            },
            {
                name: 'トリックスター+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So54.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So54.ts ***!
  \***************************************/
/*! exports provided: So54 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So54", function() { return So54; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So54 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 54,
        id: 1,
        name: 'ムルムル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 5901,
        offense: 990,
        deffense: 501,
        speed: 626,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 0.75,
                        hit: 2
                    }
                ]
            },
            {
                name: 'ツイストシュート＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.9,
                        hit: 2
                    }
                ]
            },
            {
                name: '魅惑の舞＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '豊穣の角笛＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So55.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So55.ts ***!
  \***************************************/
/*! exports provided: So55 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So55", function() { return So55; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So55 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 55,
        id: 1,
        name: 'オロバス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 8990,
        offense: 1207,
        deffense: 483,
        speed: 284,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '原初の魔法『零』＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '原初の魔法『結』＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'グランドリープ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 55,
        id: 2,
        name: 'オロバス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 6133,
        offense: 1345,
        deffense: 446,
        speed: 482,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '原初の魔法『魂』＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '原初の魔法『魄』＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '我これに報いん＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So56.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So56.ts ***!
  \***************************************/
/*! exports provided: So56 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So56", function() { return So56; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So56 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 56,
        id: 1,
        name: 'グレモリー',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 8773,
        offense: 989,
        deffense: 485,
        speed: 416,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '先陣を切る＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '突撃命令＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '光のヴェール＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So57.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So57.ts ***!
  \***************************************/
/*! exports provided: So57 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So57", function() { return So57; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So57 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 57,
        id: 1,
        name: 'オセ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 7351,
        offense: 1152,
        deffense: 283,
        speed: 614,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ポイズンクロー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'マッハクロー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.75,
                        hit: 4
                    }
                ]
            },
            {
                name: '猛りの暴獣爪＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 1.1,
                        hit: 3
                    }
                ],
                increment: 0.0166
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So58.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So58.ts ***!
  \***************************************/
/*! exports provided: So58 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So58", function() { return So58; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So58 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 58,
        id: 1,
        name: 'アミー',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 7331,
        offense: 953,
        deffense: 406,
        speed: 626,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '籠絡絃＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.15,
                        hit: 1
                    }
                ]
            },
            {
                name: '捕縛陣＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ブレイズスラッシュ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Fire,
                levels: [
                    {
                        level: 1,
                        magnification: 5.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So59.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So59.ts ***!
  \***************************************/
/*! exports provided: So59 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So59", function() { return So59; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So59 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 59,
        id: 1,
        name: 'オリアス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 5947,
        offense: 1191,
        deffense: 278,
        speed: 711,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '変化の魔法＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '冬の大三角＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.35,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ヘイルキャノン＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 4.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 59,
        id: 2,
        name: 'オリアス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 7486,
        offense: 750,
        deffense: 610,
        speed: 502,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ブリザードコフィン＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'アイオブプリザーブ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '占星なる聖域＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So60.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So60.ts ***!
  \***************************************/
/*! exports provided: So60 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So60", function() { return So60; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So60 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 60,
        id: 1,
        name: 'ウァプラ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 5948,
        offense: 1375,
        deffense: 409,
        speed: 490,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '掻っ切り＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.15,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 1.3,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 1.45,
                        hit: 1
                    },
                    {
                        level: 4,
                        magnification: 1.6,
                        hit: 1
                    }
                ]
            },
            {
                name: '雷霆万鈞＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Thunder,
                levels: [
                    {
                        level: 1,
                        magnification: 1.35,
                        hit: 1
                    }
                ]
            },
            {
                name: '森羅万象+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 60,
        id: 2,
        name: 'ウァプラ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 7826,
        offense: 953,
        deffense: 624,
        speed: 381,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '奪掠＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '水滴石穿＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.8,
                        hit: 1
                    }
                ]
            },
            {
                name: '千山万水＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So61.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So61.ts ***!
  \***************************************/
/*! exports provided: So61 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So61", function() { return So61; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So61 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 61,
        id: 1,
        name: 'ザガン',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 8492,
        offense: 975,
        deffense: 472,
        speed: 406,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ムレータ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'エスパーダ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '止むなき猛進＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 3.75,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 4.75,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 5.75,
                        hit: 1
                    },
                    {
                        level: 4,
                        magnification: 6.75,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So62.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So62.ts ***!
  \***************************************/
/*! exports provided: So62 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So62", function() { return So62; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So62 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 62,
        id: 1,
        name: 'ウァラク',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 7703,
        offense: 943,
        deffense: 502,
        speed: 490,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '南風の舞+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '音響の槍+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 3.5,
                        hit: 1
                    }
                ]
            },
            {
                name: 'サイコウェイブ+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            },
            {
                name: 'サイコウェイブ+（大協奏）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Sound,
                levels: [
                    {
                        level: 1,
                        magnification: 2.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So63.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So63.ts ***!
  \***************************************/
/*! exports provided: So63 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So63", function() { return So63; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So63 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 63,
        id: 1,
        name: 'アンドラス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 9109,
        offense: 849,
        deffense: 490,
        speed: 481,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '接続治療＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '死毒の縄＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ]
            },
            {
                name: 'インジェクトバイオ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 63,
        id: 2,
        name: 'アンドラス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 7535,
        offense: 639,
        deffense: 618,
        speed: 609,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ゼクチオンメッサー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'デリリアントブロー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ターヘルアナトミア＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So64.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So64.ts ***!
  \***************************************/
/*! exports provided: So64 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So64", function() { return So64; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So64 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 64,
        id: 1,
        name: 'フラウロス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 7308,
        offense: 1184,
        deffense: 405,
        speed: 483,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 0.75,
                        hit: 2
                    }
                ]
            },
            {
                name: '蛇腹剣＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.9,
                        hit: 2
                    }
                ]
            },
            {
                name: 'リベンジストライク＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 0,
                        magnification: 0.75,
                        hit: 5
                    },
                    {
                        level: 1,
                        magnification: 0.9,
                        hit: 5
                    },
                    {
                        level: 2,
                        magnification: 1.05,
                        hit: 5
                    },
                    {
                        level: 3,
                        magnification: 1.2,
                        hit: 5
                    },
                    {
                        level: 4,
                        magnification: 1.35,
                        hit: 5
                    },
                    {
                        level: 5,
                        magnification: 1.5,
                        hit: 5
                    }
                ]
            },
            {
                name: 'レオパルドブロー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                attribute: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["Attribute"].Fire,
                levels: [
                    {
                        level: 1,
                        magnification: 3.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 64,
        id: 2,
        name: 'フラウロス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 7702,
        offense: 1005,
        deffense: 504,
        speed: 485,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 0.75,
                        hit: 2
                    }
                ]
            },
            {
                name: '水砕剣＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.65,
                        hit: 2
                    }
                ]
            },
            {
                name: 'スタグナントビロー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.65,
                        hit: 1
                    }
                ]
            },
            {
                name: 'フォールフラッド＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So65.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So65.ts ***!
  \***************************************/
/*! exports provided: So65 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So65", function() { return So65; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So65 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 65,
        id: 1,
        name: 'アンドレアルフス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 9087,
        offense: 988,
        deffense: 285,
        speed: 637,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 0.75,
                        hit: 2
                    }
                ]
            },
            {
                name: 'コンビネーション＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.7,
                        hit: 4
                    }
                ]
            },
            {
                name: 'レックレスラッシュ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.8,
                        hit: 6
                    }
                ]
            },
            {
                name: 'フェザーシールド＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So66.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So66.ts ***!
  \***************************************/
/*! exports provided: So66 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So66", function() { return So66; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So66 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 66,
        id: 1,
        name: 'キマリス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 4270,
        offense: 1159,
        deffense: 405,
        speed: 673,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'アマゾネスの槍＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '微塵粉灰＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2.5,
                        hit: 1
                    }
                ]
            },
            {
                name: '破壊衝動＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 66,
        id: 2,
        name: 'キマリス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Trooper,
        hp: 6698,
        offense: 1111,
        deffense: 419,
        speed: 627,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '追想の槍＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 2,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 2.5,
                        hit: 1
                    },
                    {
                        level: 4,
                        magnification: 3,
                        hit: 1
                    }
                ]
            },
            {
                name: '星下ろしの儀＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '渾然撃砕＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 4.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            },
            {
                name: '渾然撃砕＋（ソウル2）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 7.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So67.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So67.ts ***!
  \***************************************/
/*! exports provided: So67 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So67", function() { return So67; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So67 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 67,
        id: 1,
        name: 'アムドゥスキアス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 7171,
        offense: 756,
        deffense: 500,
        speed: 645,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '伏魔殿の結界+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '眷属の帳+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ウィンドスピナー+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 4.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So68.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So68.ts ***!
  \***************************************/
/*! exports provided: So68 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So68", function() { return So68; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So68 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 68,
        id: 1,
        name: 'ベリアル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 7630,
        offense: 976,
        deffense: 431,
        speed: 644,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '命脈穿ち＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '命脈穿ち＋（Bアーツ）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: '不撓の眼光＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '凶星墜とし＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 3.25,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So69.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So69.ts ***!
  \***************************************/
/*! exports provided: So69 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So69", function() { return So69; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So69 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 69,
        id: 1,
        name: 'デカラビア',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 5906,
        offense: 1152,
        deffense: 421,
        speed: 642,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ヴェノムマイン＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ブリザード＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.5,
                        hit: 1
                    }
                ]
            },
            {
                name: 'トランスジャミング＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So70.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So70.ts ***!
  \***************************************/
/*! exports provided: So70 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So70", function() { return So70; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So70 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 70,
        id: 1,
        name: 'セーレ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 5741,
        offense: 944,
        deffense: 416,
        speed: 711,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ポーション投げ+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'スパイラルエッジ+',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.75,
                        hit: 2
                    }
                ]
            },
            {
                name: 'ランプの魔人+（全体ダメージ）',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 2.5,
                        hit: 1
                    }
                ],
                increment: 0.05
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 70,
        id: 2,
        name: 'セーレ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Fighter,
        hp: 7922,
        offense: 884,
        deffense: 646,
        speed: 413,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'バーストエッジ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0.6,
                        hit: 4
                    }
                ]
            },
            {
                name: 'とびきりドリンク＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'ひらめきロケット＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So71.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So71.ts ***!
  \***************************************/
/*! exports provided: So71 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So71", function() { return So71; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So71 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 71,
        id: 1,
        name: 'ダンタリオン',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 7462,
        offense: 1387,
        deffense: 491,
        speed: 270,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'フォールドスロー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 1.25,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ロブシューター＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 3.5,
                        hit: 1
                    }
                ]
            },
            {
                name: 'エンシェントアーツ＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    },
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 71,
        id: 2,
        name: 'ダンタリオン',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 6988,
        offense: 1212,
        deffense: 446,
        speed: 471,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ハイスロー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 4,
                        magnification: 2.5,
                        hit: 1
                    },
                    {
                        level: 3,
                        magnification: 1,
                        hit: 1
                    },
                    {
                        level: 2,
                        magnification: 0.75,
                        hit: 1
                    },
                    {
                        level: 1,
                        magnification: 0.5,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ファンファダンス＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: 'エイジバースト＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/megido/so/So72.ts":
/*!***************************************!*\
  !*** ./src/ts/data/megido/so/So72.ts ***!
  \***************************************/
/*! exports provided: So72 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "So72", function() { return So72; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const So72 = [
    {
        clockType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClockType"].So,
        no: 72,
        id: 1,
        name: 'アンドロマリウス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        classType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["ClassType"].Sniper,
        hp: 7094,
        offense: 752,
        deffense: 472,
        speed: 643,
        ability: { name: '', text: '' },
        skills: [
            {
                name: 'アタック',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
                levels: [
                    {
                        level: 1,
                        magnification: 1,
                        hit: 1
                    }
                ]
            },
            {
                name: '飴玉シャワー＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ]
            },
            {
                name: '雪玉スコール＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
                levels: [
                    {
                        level: 1,
                        magnification: 2.5,
                        hit: 1
                    }
                ]
            },
            {
                name: 'ウィズダムスペル＋',
                type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
                levels: [
                    {
                        level: 1,
                        magnification: 0,
                        hit: 0
                    }
                ],
                increment: 0
            }
        ]
    }
];


/***/ }),

/***/ "./src/ts/data/sacred-treasure/SacredTreasure.ts":
/*!*******************************************************!*\
  !*** ./src/ts/data/sacred-treasure/SacredTreasure.ts ***!
  \*******************************************************/
/*! exports provided: sacredTreasureList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sacredTreasureList", function() { return sacredTreasureList; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");




const sacredTreasureList = [
    {
        name: 'なし',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].All,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Blue,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 0,
        offense: 0,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '' }
    },
    {
        name: 'コールドエッジ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Blue,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 0,
        offense: 28,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '' }
    },
    {
        name: '雨乞いの願糸',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Blue,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 208,
        offense: 0,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '' }
    },
    {
        name: 'アルジェントパール',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Blue,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 0,
        offense: 0,
        defense: 28,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '' }
    },
    {
        name: '魔蛇の彫像',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Blue,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 0,
        offense: 24,
        defense: 4,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '' }
    },
    {
        name: 'ベルデエトワール',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Blue,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 177,
        offense: 4,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '' }
    },
    {
        name: 'デビルズリング',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Blue,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 31,
        offense: 0,
        defense: 24,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '' }
    },
    {
        name: 'マリスコスジェム',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Blue,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 177,
        offense: 0,
        defense: 4,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '' }
    },
    {
        name: 'ゴシックダガー',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 0,
        offense: 50,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '攻撃時、敵の防御力を2%無視する' }
    },
    {
        name: 'スカイブルーファン',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 366,
        offense: 0,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '与えたダメージの3%を吸収する' }
    },
    {
        name: 'ハートブローチ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 0,
        offense: 0,
        defense: 50,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '攻撃時、Lv×1の固定追加ダメージを付与する' }
    },
    {
        name: 'アルターエッジ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 0,
        offense: 42,
        defense: 7,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '単体ダメージが3%上昇する' }
    },
    {
        name: '繁栄のフェイス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 256,
        offense: 15,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '致死ダメージを受けたとき、3%の確率で踏みとどまる' }
    },
    {
        name: 'アムールリング',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 55,
        offense: 0,
        defense: 42,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '行動開始時、4%の確率でスキルフォトンが追加される' }
    },
    {
        name: 'エベーヌフェイス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 256,
        offense: 0,
        defense: 15,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '素早さが5%上昇する' }
    },
    {
        name: 'アシストスープ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 110,
        offense: 35,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '連続ダメージが5%上昇する' }
    },
    {
        name: '改良型テツマリ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 110,
        offense: 0,
        defense: 35,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '与えたダメージの4%を吸収する' }
    },
    {
        name: '金のアマルティア',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 0,
        offense: 48,
        defense: 0,
        speed: 5,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Mougeki,
        ability: { value: 0, text: '攻撃時、敵の防御力を3%無視する' }
    },
    {
        name: '銀のティモリア',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 0,
        offense: 48,
        defense: 0,
        speed: 5,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Mougeki,
        ability: { value: 0, text: '単体ダメージが4%上昇する' }
    },
    {
        name: 'ヴェリタスの彫像',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 0,
        offense: 48,
        defense: 0,
        speed: 5,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Mougeki,
        ability: { value: 0, text: '連続ダメージが4%上昇する' }
    },
    {
        name: '情熱のパトス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 431,
        offense: 0,
        defense: 0,
        speed: 3,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Mougeki,
        ability: { value: 0, text: '与えたダメージの4%を吸収する' }
    },
    {
        name: '金色のエトス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 431,
        offense: 0,
        defense: 0,
        speed: 3,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Mougeki,
        ability: { value: 0, text: '致死ダメージを受けたとき、4%の確率で踏みとどまる' }
    },
    {
        name: '漆黒のロゴス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 431,
        offense: 0,
        defense: 0,
        speed: 3,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Mougeki,
        ability: { value: 0, text: '素早さが6%上昇する' }
    },
    {
        name: 'レディアントパール',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 0,
        offense: 0,
        defense: 55,
        speed: 3,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Mougeki,
        ability: { value: 0, text: '攻撃時、Lv×1の固定追加ダメージを付与する' }
    },
    {
        name: '桃真珠の首輪',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 152,
        offense: 0,
        defense: 0,
        speed: 12,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Mougeki,
        ability: { value: 0, text: '行動開始時、5%の確率でアタックフォトンが追加される' }
    },
    {
        name: 'トレラントリング',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 152,
        offense: 0,
        defense: 0,
        speed: 12,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Mougeki,
        ability: { value: 0, text: '行動開始時、5%の確率でスキルフォトンが追加される' }
    },
    {
        name: '紺碧の清浄液',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 0,
        offense: 69,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Isshin,
        ability: { value: 0, text: '自身の点穴の値が高いほど、毎ターン終了時、HPが回復する（最大5%）' }
    },
    {
        name: '黄金色の羽扇子',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 431,
        offense: 0,
        defense: 10,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Isshin,
        ability: { value: 0, text: '点穴によってダメージを与えた際、与えたダメージの1%を吸収する' }
    },
    {
        name: '歓喜の雫',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 76,
        offense: 0,
        defense: 10,
        speed: 12,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Isshin,
        ability: { value: 0, text: '自身の点穴の値が高いほど、防御力が上昇する（最大10%）' }
    },
    {
        name: 'レッドサーチャー',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Blue,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 0,
        offense: 28,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '' }
    },
    {
        name: 'ミラーストーン',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Blue,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 208,
        offense: 0,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '' }
    },
    {
        name: 'スウィートパウダー',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Blue,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 0,
        offense: 0,
        defense: 28,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '' }
    },
    {
        name: 'プレミアムメタル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Blue,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 0,
        offense: 24,
        defense: 4,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '' }
    },
    {
        name: '悪魔殺しの槌',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Blue,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 177,
        offense: 4,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '' }
    },
    {
        name: '深緑の絞り汁',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Blue,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 31,
        offense: 0,
        defense: 24,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '' }
    },
    {
        name: 'グリーンスケイル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Blue,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 177,
        offense: 0,
        defense: 4,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '' }
    },
    {
        name: 'ルーメンレンズ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 0,
        offense: 50,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '攻撃を受けたとき、5%の確率で攻撃力1.2倍のダメージで反撃する' }
    },
    {
        name: 'シルバーミラー',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 256,
        offense: 0,
        defense: 15,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '受けるダメージを3%軽減する' }
    },
    {
        name: 'ビーンズペースト',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 110,
        offense: 0,
        defense: 35,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '毎ターン終了時、HPが2%回復する' }
    },
    {
        name: '極銀の片眼鏡',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 0,
        offense: 35,
        defense: 15,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '状態異常命中率が3%上昇する' }
    },
    {
        name: '破魔の盾',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 256,
        offense: 15,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '3%の確率でダメージを無効にする' }
    },
    {
        name: '若草のケーキ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 55,
        offense: 0,
        defense: 42,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '自身が与える回復量が3%上昇する' }
    },
    {
        name: '毒除けの盾',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 256,
        offense: 0,
        defense: 15,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '5%の確率で、味方への単体攻撃を受け持つ' }
    },
    {
        name: '冥界ノ栞',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 0,
        offense: 15,
        defense: 35,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '自身のHPが50%以下のとき、 毎ターン終了時、HPが4%回復する' }
    },
    {
        name: 'ハンターゴーグル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 0,
        offense: 69,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Gouken,
        ability: { value: 0, text: '攻撃を受けたとき、8%の確率で攻撃力1.2倍のダメージで反撃する' }
    },
    {
        name: '紅のプロトポロス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 0,
        offense: 58,
        defense: 10,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Gouken,
        ability: { value: 0, text: '状態異常命中率が4%上昇する' }
    },
    {
        name: '蒼のエピファネイア',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 0,
        offense: 58,
        defense: 10,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Gouken,
        ability: { value: 0, text: 'ステータス弱体の命中率が4%上昇する' }
    },
    {
        name: '極光の金鏡',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 431,
        offense: 0,
        defense: 10,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Gouken,
        ability: { value: 0, text: '受けるダメージを4%軽減する' }
    },
    {
        name: '神罰の重盾',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 431,
        offense: 0,
        defense: 10,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Gouken,
        ability: { value: 0, text: '4%の確率でダメージを無効にする' }
    },
    {
        name: '断罪の重盾',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 431,
        offense: 0,
        defense: 10,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Gouken,
        ability: { value: 0, text: '6%の確率で、味方への単体攻撃を受け持つ' }
    },
    {
        name: '紫芋のケーキ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 152,
        offense: 0,
        defense: 0,
        speed: 12,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Gouken,
        ability: { value: 0, text: '毎ターン終了時、 HPが3%回復する' }
    },
    {
        name: 'カフェモカロール',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 76,
        offense: 0,
        defense: 0,
        speed: 15,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Gouken,
        ability: { value: 0, text: '自身が与える回復量が5%上昇する' }
    },
    {
        name: 'マグワートロール',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 76,
        offense: 0,
        defense: 0,
        speed: 15,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Gouken,
        ability: { value: 0, text: '全ての状態異常への耐性が8%上昇する' }
    },
    {
        name: 'シトロンの塗料',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 0,
        offense: 69,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Gourai,
        ability: { value: 0, text: '雷ダメージが4%上昇する' }
    },
    {
        name: 'スリリングトリック',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 431,
        offense: 0,
        defense: 10,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Gourai,
        ability: { value: 0, text: '3%の確率で、敵に雷ダメージで反撃する' }
    },
    {
        name: 'プランダー・スカル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 0,
        offense: 21,
        defense: 0,
        speed: 12,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Gourai,
        ability: { value: 0, text: '自身が発生させた帯電による、感電付与確率が8%上昇する' }
    },
    {
        name: '雄々しき勇姿',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 431,
        offense: 0,
        defense: 10,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Kaiten,
        ability: { value: 0, text: '戦闘不能を蘇生するとき、HP割合量が10%上昇する' }
    },
    {
        name: '霊験なる盃',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 0,
        offense: 0,
        defense: 48,
        speed: 5,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Kaiten,
        ability: { value: 0, text: '全ての状態異常への耐性が8%上昇する' }
    },
    {
        name: '蠱惑の肉球',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 0,
        offense: 48,
        defense: 21,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Kaiten,
        ability: { value: 0, text: '自身が与える回復量が5%上昇する' }
    },
    {
        name: '冬至のピグメント',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Blue,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 0,
        offense: 28,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '' }
    },
    {
        name: 'ピーチマフラー',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Blue,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 208,
        offense: 0,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '' }
    },
    {
        name: 'ブラックトルク',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Blue,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 0,
        offense: 0,
        defense: 28,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '' }
    },
    {
        name: '紅の香炉',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Blue,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 0,
        offense: 24,
        defense: 4,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '' }
    },
    {
        name: '漆黒のマフラー',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Blue,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 177,
        offense: 4,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '' }
    },
    {
        name: 'アンデッドスカル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Blue,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 31,
        offense: 0,
        defense: 24,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '' }
    },
    {
        name: 'ブルーポンチョ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Blue,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 177,
        offense: 0,
        defense: 4,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '' }
    },
    {
        name: '魔毒の封瓶',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 0,
        offense: 50,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '火ダメージが3%上昇する' }
    },
    {
        name: 'スプリングフード',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 366,
        offense: 0,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: 'HPが3%上昇する' }
    },
    {
        name: 'タフネスチョーカー',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 0,
        offense: 0,
        defense: 50,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '自身のHPが50%以下のとき、4%の確率でダメージを無効にする' }
    },
    {
        name: 'ワンダーインセンス',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 0,
        offense: 35,
        defense: 15,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '全体攻撃のダメージが5%上昇する' }
    },
    {
        name: 'オンブラポンチョ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 256,
        offense: 15,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '行動開始時、4%の確率でチャージフォトンが追加される' }
    },
    {
        name: 'メタリックネイル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 55,
        offense: 0,
        defense: 42,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '覚醒ゲージ量が多いほど、防御力が上昇する（最大値6%）' }
    },
    {
        name: 'シアンフード',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 256,
        offense: 0,
        defense: 15,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '毎ターン終了時、 6%の確率で覚醒ゲージが+1される' }
    },
    {
        name: 'スピネルホーン',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 256,
        offense: 10,
        defense: 5,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '覚醒ゲージ量が多いほど、攻撃力が上昇する（最大値6%）' }
    },
    {
        name: 'グレイシアボトル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 0,
        offense: 58,
        defense: 0,
        speed: 3,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Rekka,
        ability: { value: 0, text: '火ダメージが4%上昇する' }
    },
    {
        name: '雷魂の火種',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 0,
        offense: 58,
        defense: 0,
        speed: 3,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Rekka,
        ability: { value: 0, text: '覚醒ゲージ量が多いほど、攻撃力が上昇する（最大値6%）' }
    },
    {
        name: '紅蓮の塗料',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 0,
        offense: 69,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Rekka,
        ability: { value: 0, text: '全体攻撃のダメージが8%上昇する' }
    },
    {
        name: '桜花の法衣',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 431,
        offense: 0,
        defense: 10,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Rekka,
        ability: { value: 0, text: 'HPが4%上昇する' }
    },
    {
        name: '陽炎の法衣',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 431,
        offense: 10,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Rekka,
        ability: { value: 0, text: '行動開始時、5%の確率でチャージフォトンが追加される' }
    },
    {
        name: '水流の法衣',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 431,
        offense: 0,
        defense: 0,
        speed: 3,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Rekka,
        ability: { value: 0, text: '毎ターン終了時、8%の確率で覚醒ゲージが+1される' }
    },
    {
        name: 'クーリッシュカラー',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 0,
        offense: 21,
        defense: 0,
        speed: 12,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Rekka,
        ability: { value: 0, text: '自身のHPが50%以下のとき、6%の確率でダメージを無効にする' }
    },
    {
        name: 'ストラーナヘッド',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 0,
        offense: 21,
        defense: 0,
        speed: 12,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Rekka,
        ability: { value: 0, text: '覚醒ゲージ量が多いほど、防御力が上昇する（最大値9%）' }
    },
    {
        name: 'アルジャンスカル',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 0,
        offense: 21,
        defense: 0,
        speed: 12,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Rekka,
        ability: { value: 0, text: 'ステータス弱体耐性が13%上昇する' }
    },
    {
        name: 'フロイデ・ハット',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 0,
        offense: 69,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Rensa,
        ability: { value: 0, text: 'チェイン中、攻撃力が4%上昇する' }
    },
    {
        name: '紅蓮の祭服',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 431,
        offense: 0,
        defense: 10,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Rensa,
        ability: { value: 0, text: '毎ターン終了時、HPが3%回復する' }
    },
    {
        name: '生命のチョーカー',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 0,
        offense: 0,
        defense: 0,
        speed: 17,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Rensa,
        ability: { value: 0, text: 'チェイン中、ステータス弱体の命中率が8%上昇する' }
    },
    {
        name: '紫雲の雷霆液',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 0,
        offense: 69,
        defense: 0,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Gourai,
        ability: { value: 0, text: '雷ダメージが4%上昇する' }
    },
    {
        name: 'ゴールドトラッシュ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 431,
        offense: 0,
        defense: 10,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Gourai,
        ability: { value: 0, text: '全体攻撃のダメージが7%上昇する' }
    },
    {
        name: '深淵の黒髑髏',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 0,
        offense: 21,
        defense: 0,
        speed: 12,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Gourai,
        ability: { value: 0, text: '自身が発生させた帯電による、感電付与確率が8%上昇する' }
    },
    {
        name: '蒼霊水の水時計',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush | _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 431,
        offense: 0,
        defense: 0,
        speed: 3,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Suishin,
        ability: { value: 0, text: 'ハイドロボムを付与したとき、HPを5%回復する' }
    },
    {
        name: '修羅の仮面',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush | _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 152,
        offense: 0,
        defense: 48,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Suishin,
        ability: { value: 0, text: 'ハイドロボムのダメージが3%上昇する' }
    },
    {
        name: '紺碧の魔塔ドーム',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush | _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 0,
        offense: 48,
        defense: 21,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].Suishin,
        ability: { value: 0, text: 'ハイドロボムの命中率が5%上昇する' }
    },
    {
        name: 'スウィートポップ',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush | _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter | _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Blue,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 0,
        offense: 0,
        defense: 28,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '「カカオの森の黒い犬」のクエストでのみHPが10%上昇する' }
    },
    {
        name: 'ハブ・ア・バイト',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush | _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter | _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Small,
        hp: 0,
        offense: 15,
        defense: 35,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '「カカオの森の黒い犬」のクエストでのみ攻撃力が100%上昇する' }
    },
    {
        name: 'プチボヌール',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush | _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter | _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Silver,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Medium,
        hp: 110,
        offense: 0,
        defense: 35,
        speed: 0,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '「カカオの森の黒い犬」のクエストでのみHPが100%上昇する' }
    },
    {
        name: 'プレシャスタイム',
        styleType: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Rush | _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Counter | _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["StyleType"].Burst,
        rank: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyRank"].Gold,
        size: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogySize"].Big,
        hp: 51,
        offense: 48,
        defense: 7,
        speed: 2,
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["GenealogyType"].None,
        ability: { value: 0, text: '毎ターン終了時、HPが3%回復する' }
    }
];


/***/ }),

/***/ "./src/ts/enum/MegidoType.ts":
/*!***********************************!*\
  !*** ./src/ts/enum/MegidoType.ts ***!
  \***********************************/
/*! exports provided: PhotonType, SkillType, Attribute, StyleType, convertToStyleName, ClassType, ClockType, GenealogyType, GenealogyRank, GenealogySize, convertToGenealogySizeName */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PhotonType", function() { return PhotonType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SkillType", function() { return SkillType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Attribute", function() { return Attribute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StyleType", function() { return StyleType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convertToStyleName", function() { return convertToStyleName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClassType", function() { return ClassType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClockType", function() { return ClockType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GenealogyType", function() { return GenealogyType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GenealogyRank", function() { return GenealogyRank; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GenealogySize", function() { return GenealogySize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convertToGenealogySizeName", function() { return convertToGenealogySizeName; });
const PhotonType = {
    Normal: '通常',
    Strengthening: '強化',
    Deterioration: '劣化'
};
const SkillType = {
    Atack: 'アタック',
    Skill: 'スキル',
    AwakeningSkill: '覚醒スキル',
    Mysteries: '奥義',
    SecretMysteries: '秘奥義'
};
const Attribute = {
    None: '無',
    Fire: '火',
    Thunder: '雷',
    Sound: '響撃'
};
const StyleType = {
    Rush: 1,
    Counter: 2,
    Burst: 4,
    RC: 1 | 2,
    CB: 2 | 4,
    RB: 1 | 4,
    All: 1 | 2 | 4
};
function convertToStyleName(styleType) {
    switch (styleType) {
        case StyleType.Rush:
            return 'ラッシュ';
        case StyleType.Counter:
            return 'カウンター';
        case StyleType.Burst:
            return 'バースト';
        default:
            return 'なし';
    }
}
const ClassType = {
    Fighter: 'ファイター',
    Trooper: 'トルーパー',
    Sniper: 'スナイパー'
};
const ClockType = {
    So: '祖',
    Shin: '真'
};
const GenealogyType = {
    None: '無し',
    Mougeki: '猛撃',
    Isshin: '一心',
    Gouken: '剛堅',
    Gourai: '轟雷',
    Kaiten: '廻天',
    Rekka: '烈火',
    Rensa: '連鎖',
    Suishin: '水心'
};
const GenealogyRank = {
    Gold: '金',
    Silver: '銀',
    Blue: '青'
};
const GenealogySize = {
    Big: '2',
    Medium: '1',
    Small: '0'
};
function convertToGenealogySizeName(size) {
    switch (size) {
        case GenealogySize.Big:
            return '大';
        case GenealogySize.Medium:
            return '中';
        case GenealogySize.Small:
            return '小';
        default:
            return '無';
    }
}


/***/ }),

/***/ "./src/ts/index.ts":
/*!*************************!*\
  !*** ./src/ts/index.ts ***!
  \*************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bootstrap */ "./node_modules/bootstrap/dist/js/bootstrap.js");
/* harmony import */ var bootstrap__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bootstrap__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var bootstrap_select__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bootstrap-select */ "./node_modules/bootstrap-select/dist/js/bootstrap-select.js");
/* harmony import */ var bootstrap_select__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bootstrap_select__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _data_megido_Megido__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data/megido/Megido */ "./src/ts/data/megido/Megido.ts");
/* harmony import */ var _data_sacred_treasure_SacredTreasure__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./data/sacred-treasure/SacredTreasure */ "./src/ts/data/sacred-treasure/SacredTreasure.ts");
/* harmony import */ var _interface_ISkillData__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./interface/ISkillData */ "./src/ts/interface/ISkillData.ts");
/* harmony import */ var _util_MegidoUtil__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./util/MegidoUtil */ "./src/ts/util/MegidoUtil.ts");
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./enum/MegidoType */ "./src/ts/enum/MegidoType.ts");









const megidoList = Object(_data_megido_Megido__WEBPACK_IMPORTED_MODULE_3__["joinAndSortMegidoByName"])();
const ids = {
    megido: 'megido',
    offense: 'offense',
    offensiveBuff: 'offensiveBuff',
    skill: 'skill',
    skillLevels: 'skillLevels',
    mysteriesLevels: 'mysteriesLevels',
    magnification: 'magnification',
    hit: 'hit',
    photon: 'photon',
    classCorrection: 'classCorrection',
    freeze: 'freeze',
    defense: 'defense',
    ignoreDefense: 'ignoreDefense',
    defensiveDebuff: 'defensiveDebuff',
    attribute: 'attribute',
    species: 'species',
    statusAbnormality: 'statusAbnormality',
    specialEfficacy1: 'specialEfficacy1',
    specialEfficacy2: 'specialEfficacy2',
    specialEfficacy3: 'specialEfficacy3',
    additionalDamage: 'additionalDamage',
    damagePerHit: 'damagePerHit',
    offensiveDebuff: 'offensiveDebuff',
    defensiveBuff: 'defensiveBuff',
    totalDamage: 'totalDamage',
    sacredTreasure1: 'sacredTreasure1',
    sacredTreasureText1: 'sacredTreasureText1',
    sacredTreasure2: 'sacredTreasure2',
    sacredTreasureText2: 'sacredTreasureText2',
    sacredTreasure3: 'sacredTreasure3',
    sacredTreasureText3: 'sacredTreasureText3',
    sacredTreasure4: 'sacredTreasure4',
    sacredTreasureText4: 'sacredTreasureText4'
};
let nowSkill = _interface_ISkillData__WEBPACK_IMPORTED_MODULE_5__["defaultSkills"][0];
jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).ready(function () {
    const megidoSelect = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.megido}`);
    megidoList.forEach((megido, i) => {
        megidoSelect.append(`<option value="${i}">${megido.name}</option>`);
    });
    megidoSelect.selectpicker('refresh');
    megidoSelect.change(function () {
        const index = megidoSelect.val();
        const megido = megidoList[Number(index)];
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.offense}`).val(megido.offense);
        setupSkills(megido.skills);
        setupSacredTreasures(megido.styleType);
    });
    megidoSelect.change();
    const mysteriesLevels = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.mysteriesLevels}`);
    mysteriesLevels.change(() => {
        calculateMagnification();
    });
});
jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).change(() => {
    calculateDamage();
});
/**
 * スキルをセットする関数です。
 * @param skills
 */
function setupSkills(skills = _interface_ISkillData__WEBPACK_IMPORTED_MODULE_5__["defaultSkills"]) {
    const skillSelect = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.skill}`);
    skillSelect.empty();
    skills.forEach((skill, i) => {
        skillSelect.append(`<option value="${i}">${skill.name}</option>`);
    });
    // skillSelect.selectpicker('val', '1');
    skillSelect.selectpicker('render').selectpicker('refresh');
    skillSelect.off('change');
    skillSelect.change(() => {
        const index = skillSelect.val();
        skillSelect.selectpicker('val', String(index));
        const skill = skills[Number(index)];
        nowSkill = skill;
        if (skill.increment != null) {
            jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.mysteriesLevels}`).prop('disabled', false);
        }
        else {
            jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.mysteriesLevels}`).prop('disabled', true);
        }
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.mysteriesLevels}`).selectpicker('render').selectpicker('refresh');
        setupLevels(skill.levels);
    });
    skillSelect.change();
}
/**
 * levelsSelectをセットアップする関数です。
 * @param levels
 */
function setupLevels(levels) {
    const levelSelect = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.skillLevels}`);
    levelSelect.empty();
    levels.forEach((level, i) => {
        levelSelect.append(`<option value="${i}">${level.level}</option>`);
    });
    if (levels.length != 1) {
        levelSelect.prop('disabled', false);
    }
    else {
        levelSelect.prop('disabled', true);
    }
    levelSelect.selectpicker('render').selectpicker('refresh');
    levelSelect.off('change');
    levelSelect.change(() => {
        const index = levelSelect.val();
        levelSelect.selectpicker('val', String(index));
        calculateMagnification();
    });
    levelSelect.change();
}
/**
 * 全霊宝selectの設定
 * @param styleType 表示する霊宝のスタイル
 */
function setupSacredTreasures(styleType) {
    setupSacredTreasure(ids.sacredTreasure1, ids.sacredTreasureText1, styleType);
    setupSacredTreasure(ids.sacredTreasure2, ids.sacredTreasureText2, styleType);
    setupSacredTreasure(ids.sacredTreasure3, ids.sacredTreasureText3, styleType);
    setupSacredTreasure(ids.sacredTreasure4, ids.sacredTreasureText4, styleType);
}
/**
 * 霊宝selectの設定
 *
 * @param selectId selectのID
 * @param textId divのID
 * @param styleType 表示する霊宝のスタイル
 */
function setupSacredTreasure(selectId, textId, styleType) {
    const stList = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${selectId}`);
    const stText = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${textId}`);
    let beforeOffense = 0;
    let genealogyList = {};
    Object.entries(_enum_MegidoType__WEBPACK_IMPORTED_MODULE_7__["GenealogyType"]).forEach(([key, value]) => {
        genealogyList[value] = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<optgroup label="系譜: ${value}"></optgroup>`);
    });
    stList.empty();
    _data_sacred_treasure_SacredTreasure__WEBPACK_IMPORTED_MODULE_4__["sacredTreasureList"].forEach((st, i) => {
        if ((st.styleType & styleType) == styleType) {
            genealogyList[st.type].append(`<option value="${i}">${st.name}(${Object(_enum_MegidoType__WEBPACK_IMPORTED_MODULE_7__["convertToGenealogySizeName"])(st.size)})</option>`);
        }
    });
    Object.keys(genealogyList).forEach((key) => {
        if (genealogyList[key].children.length != 0) {
            stList.append(genealogyList[key]);
        }
    });
    stList.selectpicker('render').selectpicker('refresh');
    stList.off('change');
    stList.change(() => {
        const offenseInput = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.offense}`);
        const index = stList.val();
        stList.selectpicker('val', String(index));
        const st = _data_sacred_treasure_SacredTreasure__WEBPACK_IMPORTED_MODULE_4__["sacredTreasureList"][Number(index)];
        const offense = st.offense;
        const ability = st.ability != undefined ? st.ability : { value: 0, text: '' };
        stText.text(ability.text);
        const o = Number(offenseInput.val()) - beforeOffense + offense;
        beforeOffense = offense;
        offenseInput.val(o);
        calculateMagnification();
    });
    stList.change();
}
/**
 * 倍率とhit数を計算しセットする関数です。
 */
function calculateMagnification() {
    const magnification = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.magnification}`);
    const hit = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.hit}`);
    const skill = nowSkill;
    let mag;
    const levelSelect = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.skillLevels}`);
    const level = skill.levels[Number(levelSelect.val())];
    mag = level.magnification;
    if (skill.increment != null) {
        mag += skill.increment * Number(jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.mysteriesLevels}`).val());
    }
    magnification.val(mag);
    hit.val(level.hit);
}
/**
 * ダメージ計算する関数です。
 * ([攻撃力] * [攻撃力バフ累計] *[攻撃力デバフ累計]* [技倍率]-[敵防御]*[防御力バフ累計]*[防御力デバフ累計]) * [アタック/スキル強化] * [クラス補正] * [特効(特効a*特効b*…*特効x)] * [属性補正] * [凍結補正] * [ダメージ補正] * [乱数]
 */
function calculateDamage() {
    const offense = Number(jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.offense}`).val());
    const offensiveBuff = Number(jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.offensiveBuff}`).val()) / 100 + 1;
    const magnification = Number(jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.magnification}`).val());
    const photonType = getPhotonType(Number(jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.photon}`).val()));
    const photonCorrection = Object(_util_MegidoUtil__WEBPACK_IMPORTED_MODULE_6__["getPhotonCorrection"])(nowSkill.type, photonType);
    const classCorrection = Number(jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.classCorrection}`).val());
    const freeze = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.freeze}`).prop('checked') ? 2 : 1;
    const defense = Number(jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.defense}`).val());
    const ignoreDefense = 1 - Number(jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.ignoreDefense}`).val()) / 100;
    const defensiveDebuff = 1 - Number(jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.defensiveDebuff}`).val()) / 100;
    const attribute = Number(jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.attribute}`).val()) / 100 + 1;
    const speceis = Number(jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.species}`).val()) / 100 + 1;
    const statusAbnormality = Number(jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.statusAbnormality}`).val()) / 100 + 1;
    const specialEfficacy1 = Number(jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.specialEfficacy1}`).val()) / 100 + 1;
    const specialEfficacy2 = Number(jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.specialEfficacy2}`).val()) / 100 + 1;
    const specialEfficacy3 = Number(jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.specialEfficacy3}`).val()) / 100 + 1;
    const additionalDamage = Number(jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.additionalDamage}`).val());
    const offensiveDebuff = 1 - Number(jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.offensiveDebuff}`).val()) / 100;
    const defensiveBuff = Number(jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.defensiveBuff}`).val()) / 100;
    const hit = Number(jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.hit}`).val());
    const damage = (offense * offensiveBuff * offensiveDebuff * magnification - defense * defensiveBuff * defensiveDebuff * ignoreDefense) *
        photonCorrection *
        classCorrection *
        attribute *
        speceis *
        statusAbnormality *
        freeze *
        specialEfficacy1 *
        specialEfficacy2 *
        specialEfficacy3;
    const minDamage = Math.round(damage * 0.95) + additionalDamage;
    const maxDamage = Math.round(damage * 1.05) + additionalDamage;
    const totalMinDamage = minDamage * hit;
    const totalMaxDamage = maxDamage * hit;
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.damagePerHit}`).val(`${minDamage.toLocaleString()} ～ ${maxDamage.toLocaleString()}`);
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#${ids.totalDamage}`).val(`${totalMinDamage.toLocaleString()} ～ ${totalMaxDamage.toLocaleString()}`);
}
function getPhotonType(num) {
    switch (num) {
        case 0:
            return _enum_MegidoType__WEBPACK_IMPORTED_MODULE_7__["PhotonType"].Normal;
        case 1:
            return _enum_MegidoType__WEBPACK_IMPORTED_MODULE_7__["PhotonType"].Strengthening;
        case 2:
            return _enum_MegidoType__WEBPACK_IMPORTED_MODULE_7__["PhotonType"].Deterioration;
        default:
            return _enum_MegidoType__WEBPACK_IMPORTED_MODULE_7__["PhotonType"].Normal;
    }
}


/***/ }),

/***/ "./src/ts/interface/ISkillData.ts":
/*!****************************************!*\
  !*** ./src/ts/interface/ISkillData.ts ***!
  \****************************************/
/*! exports provided: defaultSkills */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultSkills", function() { return defaultSkills; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

const defaultSkills = [
    {
        name: 'アタック',
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack,
        levels: [
            {
                level: 1,
                magnification: 1,
                hit: 1
            }
        ]
    },
    {
        name: 'スキル',
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Skill,
        levels: [
            {
                level: 1,
                magnification: 1,
                hit: 1
            }
        ]
    },
    {
        name: '覚醒スキル',
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].AwakeningSkill,
        levels: [
            {
                level: 1,
                magnification: 1,
                hit: 1
            }
        ]
    },
    {
        name: '奥義',
        type: _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Mysteries,
        levels: [
            {
                level: 1,
                magnification: 1,
                hit: 1
            }
        ],
        increment: 0.05
    }
];


/***/ }),

/***/ "./src/ts/util/MegidoUtil.ts":
/*!***********************************!*\
  !*** ./src/ts/util/MegidoUtil.ts ***!
  \***********************************/
/*! exports provided: getPhotonCorrection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPhotonCorrection", function() { return getPhotonCorrection; });
/* harmony import */ var _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enum/MegidoType */ "./src/ts/enum/MegidoType.ts");

/**
 * スキルタイプとフォトンタイプからダメージ補正を返します。
 * @param skillType
 * @param photonType
 */
function getPhotonCorrection(skillType, photonType) {
    let value;
    switch (photonType) {
        case _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["PhotonType"].Normal:
            value = 1;
            break;
        case _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["PhotonType"].Strengthening:
            value = skillType == _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["SkillType"].Atack ? 2 : 1.5;
            break;
        case _enum_MegidoType__WEBPACK_IMPORTED_MODULE_0__["PhotonType"].Deterioration:
            value = 0.5;
            break;
    }
    return value;
}


/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,